// PlayerUnknown's Battlegrounds (3.5.7.7) SDK

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

#include "PUBG_TslGame_parameters.hpp"

namespace Classes
{
//---------------------------------------------------------------------------
//Functions
//---------------------------------------------------------------------------

// Function TslGame.TslPopupInterface.SetPopup
// (Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPopupStyle                    PopupStyle                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   Message                        (ConstParm, Parm, OutParm, ReferenceParm)
// struct FScriptDelegate         PressedDelegate                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UTslPopupInterface::SetPopup(EPopupStyle PopupStyle, const struct FText& Message, const struct FScriptDelegate& PressedDelegate)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(13284);

	UTslPopupInterface_SetPopup_Params params;
	params.PopupStyle = PopupStyle;
	params.Message = Message;
	params.PressedDelegate = PressedDelegate;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslBaseHUD.WidgetToggle
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 WidgetName                     (Parm, ZeroConstructor)

void ATslBaseHUD::WidgetToggle(const struct FString& WidgetName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(13938);

	ATslBaseHUD_WidgetToggle_Params params;
	params.WidgetName = WidgetName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslBaseHUD.WidgetShow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 WidgetName                     (Parm, ZeroConstructor)
// EWidgetShowType                ShowType                       (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 OptionalParam                  (Parm, ZeroConstructor, IsPlainOldData)

void ATslBaseHUD::WidgetShow(const struct FString& WidgetName, EWidgetShowType ShowType, class UObject* OptionalParam)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(13933);

	ATslBaseHUD_WidgetShow_Params params;
	params.WidgetName = WidgetName;
	params.ShowType = ShowType;
	params.OptionalParam = OptionalParam;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslBaseHUD.WidgetCreate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 WidgetName                     (Parm, ZeroConstructor)
// struct FTslWidgetConfig        Config                         (Parm)

void ATslBaseHUD::WidgetCreate(const struct FString& WidgetName, const struct FTslWidgetConfig& Config)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(13930);

	ATslBaseHUD_WidgetCreate_Params params;
	params.WidgetName = WidgetName;
	params.Config = Config;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslBaseHUD.UpdateKillcamDisplayCode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EKillcamDisplayCode            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EKillcamDisplayCode ATslBaseHUD::UpdateKillcamDisplayCode()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(13927);

	ATslBaseHUD_UpdateKillcamDisplayCode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslBaseHUD.UnbindActionKeyDelegateEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   ActionName                     (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EInputEvent>       InputEvent                     (Parm, ZeroConstructor, IsPlainOldData)

void ATslBaseHUD::UnbindActionKeyDelegateEvent(const struct FName& ActionName, TEnumAsByte<EInputEvent> InputEvent)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(13924);

	ATslBaseHUD_UnbindActionKeyDelegateEvent_Params params;
	params.ActionName = ActionName;
	params.InputEvent = InputEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslBaseHUD.ShowPopupDialog
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FString                 PopupWidgetName                (Parm, ZeroConstructor)
// EPopupStyle                    PopupStyle                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   Message                        (Parm)
// struct FScriptDelegate         PressedDelegate                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void ATslBaseHUD::ShowPopupDialog(const struct FString& PopupWidgetName, EPopupStyle PopupStyle, const struct FText& Message, const struct FScriptDelegate& PressedDelegate)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(13918);

	ATslBaseHUD_ShowPopupDialog_Params params;
	params.PopupWidgetName = PopupWidgetName;
	params.PopupStyle = PopupStyle;
	params.Message = Message;
	params.PressedDelegate = PressedDelegate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslBaseHUD.OnClickedKillcamPlay
// (Final, Native, Public, BlueprintCallable)

void ATslBaseHUD::OnClickedKillcamPlay()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(13917);

	ATslBaseHUD_OnClickedKillcamPlay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslBaseHUD.IsWidgetShow
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 WidgetName                     (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslBaseHUD::IsWidgetShow(const struct FString& WidgetName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(13914);

	ATslBaseHUD_IsWidgetShow_Params params;
	params.WidgetName = WidgetName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslBaseHUD.IsMouseUse
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslBaseHUD::IsMouseUse()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(13912);

	ATslBaseHUD_IsMouseUse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslBaseHUD.HideWidgetByEscape
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslBaseHUD::HideWidgetByEscape()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(13910);

	ATslBaseHUD_HideWidgetByEscape_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslBaseHUD.HidePopupDialog
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 PopupWidgetName                (Parm, ZeroConstructor)

void ATslBaseHUD::HidePopupDialog(const struct FString& PopupWidgetName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(13908);

	ATslBaseHUD_HidePopupDialog_Params params;
	params.PopupWidgetName = PopupWidgetName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslBaseHUD.GetWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 WidgetName                     (Parm, ZeroConstructor)
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUserWidget* ATslBaseHUD::GetWidget(const struct FString& WidgetName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(13905);

	ATslBaseHUD_GetWidget_Params params;
	params.WidgetName = WidgetName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslBaseHUD.GetMainUMGHud
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUserWidget* ATslBaseHUD::GetMainUMGHud()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(13903);

	ATslBaseHUD_GetMainUMGHud_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslBaseHUD.GetLastKillcamDisplayCode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EKillcamDisplayCode            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EKillcamDisplayCode ATslBaseHUD::GetLastKillcamDisplayCode()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(13900);

	ATslBaseHUD_GetLastKillcamDisplayCode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslBaseHUD.GetKillcamCountingText
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FText                   InCountingTextFormat           (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText ATslBaseHUD::GetKillcamCountingText(const struct FText& InCountingTextFormat)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(13897);

	ATslBaseHUD_GetKillcamCountingText_Params params;
	params.InCountingTextFormat = InCountingTextFormat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslBaseHUD.DestroyAllWidgets
// (Final, Native, Public, BlueprintCallable)

void ATslBaseHUD::DestroyAllWidgets()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(13896);

	ATslBaseHUD_DestroyAllWidgets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslBaseHUD.BindActionKeyDelegateEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   ActionName                     (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EInputEvent>       InputEvent                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FScriptDelegate         ActionKeyDelegate              (Parm, ZeroConstructor)

void ATslBaseHUD::BindActionKeyDelegateEvent(const struct FName& ActionName, TEnumAsByte<EInputEvent> InputEvent, const struct FScriptDelegate& ActionKeyDelegate)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(13892);

	ATslBaseHUD_BindActionKeyDelegateEvent_Params params;
	params.ActionName = ActionName;
	params.InputEvent = InputEvent;
	params.ActionKeyDelegate = ActionKeyDelegate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.AnimDB.GetBlendSpaceRelaxed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EAnimStanceType>   AnimStance                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIsFPP                         (Parm, ZeroConstructor, IsPlainOldData)
// class UBlendSpace*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UBlendSpace* UAnimDB::GetBlendSpaceRelaxed(TEnumAsByte<EAnimStanceType> AnimStance, bool bIsFPP)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(13968);

	UAnimDB_GetBlendSpaceRelaxed_Params params;
	params.AnimStance = AnimStance;
	params.bIsFPP = bIsFPP;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.AnimDB.GetBlendSpace
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EAnimStanceType>   AnimStance                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIsFPP                         (Parm, ZeroConstructor, IsPlainOldData)
// class UBlendSpace*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UBlendSpace* UAnimDB::GetBlendSpace(TEnumAsByte<EAnimStanceType> AnimStance, bool bIsFPP)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(13964);

	UAnimDB_GetBlendSpace_Params params;
	params.AnimStance = AnimStance;
	params.bIsFPP = bIsFPP;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.AnimDB.GetAnimSpeed
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EAnimStanceType>   AnimStance                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          Direction                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          InSpeed                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          PlayRate                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          SprintAlpha                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UAnimDB::GetAnimSpeed(TEnumAsByte<EAnimStanceType> AnimStance, float Direction, float InSpeed, float* PlayRate, float* SprintAlpha)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(13957);

	UAnimDB_GetAnimSpeed_Params params;
	params.AnimStance = AnimStance;
	params.Direction = Direction;
	params.InSpeed = InSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (PlayRate != nullptr)
		*PlayRate = params.PlayRate;
	if (SprintAlpha != nullptr)
		*SprintAlpha = params.SprintAlpha;

	return params.ReturnValue;
}


// Function TslGame.AsyncStaticMeshComponent.SetStaticMeshAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TAssetPtr<class UStaticMesh>   Asset                          (Parm)

void UAsyncStaticMeshComponent::SetStaticMeshAsset(TAssetPtr<class UStaticMesh> Asset)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14627);

	UAsyncStaticMeshComponent_SetStaticMeshAsset_Params params;
	params.Asset = Asset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.AsyncStaticMeshComponent.IsSameMesh
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TAssetPtr<class UStaticMesh>   Asset                          (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UAsyncStaticMeshComponent::IsSameMesh(TAssetPtr<class UStaticMesh> Asset)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14624);

	UAsyncStaticMeshComponent_IsSameMesh_Params params;
	params.Asset = Asset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.AsyncStaticMeshComponent.GetStaticMeshAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TAssetPtr<class UStaticMesh>   ReturnValue                    (Parm, OutParm, ReturnParm)

TAssetPtr<class UStaticMesh> UAsyncStaticMeshComponent::GetStaticMeshAsset()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14622);

	UAsyncStaticMeshComponent_GetStaticMeshAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.AsyncStaticMeshComponent.ClearStaticMeshAsset
// (Final, Native, Public, BlueprintCallable)

void UAsyncStaticMeshComponent::ClearStaticMeshAsset()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14621);

	UAsyncStaticMeshComponent_ClearStaticMeshAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslBuff.TickBuff
// (Native, Event, Public, BlueprintEvent)

void ATslBuff::TickBuff()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14658);

	ATslBuff_TickBuff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslBuff.StopBuffBlueprint
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bCanceled                      (Parm, ZeroConstructor, IsPlainOldData)

void ATslBuff::StopBuffBlueprint(bool bCanceled)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14656);

	ATslBuff_StopBuffBlueprint_Params params;
	params.bCanceled = bCanceled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslBuff.StartBuffBlueprint
// (Event, Public, BlueprintEvent)

void ATslBuff::StartBuffBlueprint()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14655);

	ATslBuff_StartBuffBlueprint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslBuff.GetOwnerPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APawn*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APawn* ATslBuff::GetOwnerPawn()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14653);

	ATslBuff_GetOwnerPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslBuff.GetOwnerCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslCharacter*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslCharacter* ATslBuff::GetOwnerCharacter()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14651);

	ATslBuff_GetOwnerCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslBuff.GetAttackId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FAttackId               ReturnValue                    (Parm, OutParm, ReturnParm)

struct FAttackId ATslBuff::GetAttackId()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14649);

	ATslBuff_GetAttackId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslBuff.CanApplyBuff
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslBuff::CanApplyBuff()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14647);

	ATslBuff_CanApplyBuff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.BuffComponet.RemoveBuff
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   OverlapId                      (Parm, ZeroConstructor, IsPlainOldData)

void UBuffComponet::RemoveBuff(const struct FName& OverlapId)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14679);

	UBuffComponet_RemoveBuff_Params params;
	params.OverlapId = OverlapId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.BuffComponet.FindBuffWithOverlapId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   BuffOverlapId                  (Parm, ZeroConstructor, IsPlainOldData)
// class ATslBuff*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslBuff* UBuffComponet::FindBuffWithOverlapId(const struct FName& BuffOverlapId)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14676);

	UBuffComponet_FindBuffWithOverlapId_Params params;
	params.BuffOverlapId = BuffOverlapId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.BuffComponet.AddBuff
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  TslBuffClass                   (Parm, ZeroConstructor, IsPlainOldData)
// class ATslBuff*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslBuff* UBuffComponet::AddBuff(class UClass* TslBuffClass)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14673);

	UBuffComponet_AddBuff_Params params;
	params.TslBuffClass = TslBuffClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CastableInterface.IsCastable
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ATslCharacter*           Character                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCastableInterface::IsCastable(class ATslCharacter* Character)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14709);

	UCastableInterface_IsCastable_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CastableInterface.GetCastFailMessage
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ATslCharacter*           Character                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UCastableInterface::GetCastFailMessage(class ATslCharacter* Character)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14706);

	UCastableInterface_GetCastFailMessage_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CastableInterface.GetCastConfig
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// struct FCastConfig             ReturnValue                    (Parm, OutParm, ReturnParm)

struct FCastConfig UCastableInterface::GetCastConfig()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14704);

	UCastableInterface_GetCastConfig_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CastComponent.StartCast
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class UCastableInterface> CastableInterface              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCastComponent::StartCast(const TScriptInterface<class UCastableInterface>& CastableInterface)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14735);

	UCastComponent_StartCast_Params params;
	params.CastableInterface = CastableInterface;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CastComponent.GetTotalCastTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UCastComponent::GetTotalCastTime()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14733);

	UCastComponent_GetTotalCastTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CastComponent.GetElapsedCastTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UCastComponent::GetElapsedCastTime()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14731);

	UCastComponent_GetElapsedCastTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CastComponent.GetCastPriority
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECastPriority                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECastPriority UCastComponent::GetCastPriority()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14728);

	UCastComponent_GetCastPriority_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CastComponent.GetCastObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UObject* UCastComponent::GetCastObject()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14726);

	UCastComponent_GetCastObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CastComponent.GetCastName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UCastComponent::GetCastName()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14724);

	UCastComponent_GetCastName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CastComponent.GetCastLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECastLevel                     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECastLevel UCastComponent::GetCastLevel()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14721);

	UCastComponent_GetCastLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CastComponent.GetCastAnim
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECastAnim                      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECastAnim UCastComponent::GetCastAnim()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14718);

	UCastComponent_GetCastAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CastComponent.CancelCast
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCastComponent::CancelCast()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14716);

	UCastComponent_CancelCast_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CharacterBreathComponent.OnRep_Breath
// (Final, Native, Private)
// Parameters:
// float                          LastBreath                     (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterBreathComponent::OnRep_Breath(float LastBreath)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14756);

	UCharacterBreathComponent_OnRep_Breath_Params params;
	params.LastBreath = LastBreath;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.CharacterBreathComponent.IsInApnea
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterBreathComponent::IsInApnea()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14754);

	UCharacterBreathComponent_IsInApnea_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CharacterBreathComponent.IsConsuming
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterBreathComponent::IsConsuming()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14752);

	UCharacterBreathComponent_IsConsuming_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CharacterBreathComponent.GetBreathRatio
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UCharacterBreathComponent::GetBreathRatio()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14750);

	UCharacterBreathComponent_GetBreathRatio_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CharacterBreathComponent.GetBreathMax
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UCharacterBreathComponent::GetBreathMax()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14748);

	UCharacterBreathComponent_GetBreathMax_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CharacterBreathComponent.GetBreath
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UCharacterBreathComponent::GetBreath()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14746);

	UCharacterBreathComponent_GetBreath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CharacterBreathComponent.CanStartSprinting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterBreathComponent::CanStartSprinting()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14744);

	UCharacterBreathComponent_CanStartSprinting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CharacterBreathComponent.CanStartHoldingBreath
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterBreathComponent::CanStartHoldingBreath()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14742);

	UCharacterBreathComponent_CanStartHoldingBreath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CharacterBreathComponent.AddBreath
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterBreathComponent::AddBreath(float Value)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14740);

	UCharacterBreathComponent_AddBreath_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.CharacterStudio.Update
// (Final, Native, Public, BlueprintCallable)

void ACharacterStudio::Update()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14784);

	ACharacterStudio_Update_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.CharacterStudio.SetSceneCaptureMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic* Mid                            (Parm, ZeroConstructor, IsPlainOldData)

void ACharacterStudio::SetSceneCaptureMaterial(class UMaterialInstanceDynamic* Mid)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14782);

	ACharacterStudio_SetSceneCaptureMaterial_Params params;
	params.Mid = Mid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.CharacterStudio.SetCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ATslCharacter*           Character                      (Parm, ZeroConstructor, IsPlainOldData)

void ACharacterStudio::SetCharacter(class ATslCharacter* Character)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14780);

	ACharacterStudio_SetCharacter_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.CharacterStudio.IsUsingDynamicResolution
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACharacterStudio::IsUsingDynamicResolution()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14778);

	ACharacterStudio_IsUsingDynamicResolution_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CharacterStudio.IsCharacterValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACharacterStudio::IsCharacterValid()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14776);

	ACharacterStudio_IsCharacterValid_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CharacterStudio.GetSceneCaptureMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInstanceDynamic* ACharacterStudio::GetSceneCaptureMaterial()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14774);

	ACharacterStudio_GetSceneCaptureMaterial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CharacterStudio.GetCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ATslCharacter*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslCharacter* ACharacterStudio::GetCharacter()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14772);

	ACharacterStudio_GetCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CharacterStudio.AddYaw
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Yaw                            (Parm, ZeroConstructor, IsPlainOldData)

void ACharacterStudio::AddYaw(float Yaw)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14770);

	ACharacterStudio_AddYaw_Params params;
	params.Yaw = Yaw;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.CoherentCommonBinder.Test
// (Final, Native, Private)

void UCoherentCommonBinder::Test()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14800);

	UCoherentCommonBinder_Test_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.CoherentCommonBinder.OnWebPageOnPlatformFailed
// (Final, Native, Private)

void UCoherentCommonBinder::OnWebPageOnPlatformFailed()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14799);

	UCoherentCommonBinder_OnWebPageOnPlatformFailed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.CoherentCommonBinder.BindUI
// (Native, Protected)

void UCoherentCommonBinder::BindUI()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14798);

	UCoherentCommonBinder_BindUI_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.CoherentCommonBinder.BindDelegate
// (Native, Protected)

void UCoherentCommonBinder::BindDelegate()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(14797);

	UCoherentCommonBinder_BindDelegate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslBasePlayerController.Server_SetBPFactor
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          factor                         (Parm, ZeroConstructor, IsPlainOldData)

void ATslBasePlayerController::Server_SetBPFactor(float factor)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15267);

	ATslBasePlayerController_Server_SetBPFactor_Params params;
	params.factor = factor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslBasePlayerController.HandleClipboard
// (Native, Protected)

void ATslBasePlayerController::HandleClipboard()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15266);

	ATslBasePlayerController_HandleClipboard_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.UnreliablePong
// (Final, Net, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// int                            SeqID                          (Parm, ZeroConstructor, IsPlainOldData)
// int64_t                        DateTimeTickFromServer         (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::UnreliablePong(int SeqID, int64_t DateTimeTickFromServer)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15625);

	ATslPlayerController_UnreliablePong_Params params;
	params.SeqID = SeqID;
	params.DateTimeTickFromServer = DateTimeTickFromServer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.UnreliablePing
// (Final, Net, Native, Event, Private, NetClient)
// Parameters:
// int                            SeqID                          (Parm, ZeroConstructor, IsPlainOldData)
// int64_t                        DateTimeTick                   (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::UnreliablePing(int SeqID, int64_t DateTimeTick)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15622);

	ATslPlayerController_UnreliablePing_Params params;
	params.SeqID = SeqID;
	params.DateTimeTick = DateTimeTick;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ToggleInventory
// (Final, Native, Private, BlueprintCallable)

void ATslPlayerController::ToggleInventory()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15621);

	ATslPlayerController_ToggleInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.Suicide
// (Exec, Native, Public)

void ATslPlayerController::Suicide()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15620);

	ATslPlayerController_Suicide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.SimulateInputKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FKey                    Key                            (Parm)
// bool                           bPressed                       (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::SimulateInputKey(const struct FKey& Key, bool bPressed)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15617);

	ATslPlayerController_SimulateInputKey_Params params;
	params.Key = Key;
	params.bPressed = bPressed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ShowTslDebugInfomation
// (Final, Exec, Native, Public)

void ATslPlayerController::ShowTslDebugInfomation()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15616);

	ATslPlayerController_ShowTslDebugInfomation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ShowTeamDeathPopup
// (Final, Native, Private)

void ATslPlayerController::ShowTeamDeathPopup()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15615);

	ATslPlayerController_ShowTeamDeathPopup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ShowPlayerControllerBindActions_Admin
// (Final, Exec, Native, Public)

void ATslPlayerController::ShowPlayerControllerBindActions_Admin()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15614);

	ATslPlayerController_ShowPlayerControllerBindActions_Admin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ShowMatchResult
// (Final, Native, Private)

void ATslPlayerController::ShowMatchResult()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15613);

	ATslPlayerController_ShowMatchResult_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ShowInGameMenu_Gamepad
// (Final, Native, Private)

void ATslPlayerController::ShowInGameMenu_Gamepad()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15612);

	ATslPlayerController_ShowInGameMenu_Gamepad_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ShowInGameMenu
// (Final, Native, Private, BlueprintCallable)

void ATslPlayerController::ShowInGameMenu()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15611);

	ATslPlayerController_ShowInGameMenu_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ShowGotoLobbyPopUp
// (Final, Native, Public)
// Parameters:
// EPopupButtonID                 ButtonID                       (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::ShowGotoLobbyPopUp(EPopupButtonID ButtonID)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15608);

	ATslPlayerController_ShowGotoLobbyPopUp_Params params;
	params.ButtonID = ButtonID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.SetDefaultFOV
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          NewFOV                         (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::SetDefaultFOV(float NewFOV)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15606);

	ATslPlayerController_SetDefaultFOV_Params params;
	params.NewFOV = NewFOV;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.SetCustomDepth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bOn                            (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::SetCustomDepth(bool bOn)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15604);

	ATslPlayerController_SetCustomDepth_Params params;
	params.bOn = bOn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.SetCanSeeTerrainThroughFogInTheAir
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bCanSee                        (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::SetCanSeeTerrainThroughFogInTheAir(bool bCanSee)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15602);

	ATslPlayerController_SetCanSeeTerrainThroughFogInTheAir_Params params;
	params.bCanSee = bCanSee;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerViewTargetReplicateUpdate
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ATslPlayerController::ServerViewTargetReplicateUpdate()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15601);

	ATslPlayerController_ServerViewTargetReplicateUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerTryInteractByComponent
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class UActorComponent*         TargetComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ATslPlayerController::ServerTryInteractByComponent(class UActorComponent* TargetComponent)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15599);

	ATslPlayerController_ServerTryInteractByComponent_Params params;
	params.TargetComponent = TargetComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerTryInteract
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor*                  TargetObject                   (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::ServerTryInteract(class AActor* TargetObject)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15597);

	ATslPlayerController_ServerTryInteract_Params params;
	params.TargetObject = TargetObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerSystemInfo
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// struct FString                 OsLanguage                     (Parm, ZeroConstructor)
// struct FString                 GameLanguage                   (Parm, ZeroConstructor)
// struct FString                 OsVersion                      (Parm, ZeroConstructor)
// struct FString                 CpuName                        (Parm, ZeroConstructor)
// struct FString                 GpuName                        (Parm, ZeroConstructor)
// uint32_t                       RamInGB                        (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::ServerSystemInfo(const struct FString& OsLanguage, const struct FString& GameLanguage, const struct FString& OsVersion, const struct FString& CpuName, const struct FString& GpuName, uint32_t RamInGB)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15590);

	ATslPlayerController_ServerSystemInfo_Params params;
	params.OsLanguage = OsLanguage;
	params.GameLanguage = GameLanguage;
	params.OsVersion = OsVersion;
	params.CpuName = CpuName;
	params.GpuName = GpuName;
	params.RamInGB = RamInGB;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerSuicide
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ATslPlayerController::ServerSuicide()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15589);

	ATslPlayerController_ServerSuicide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerStopHoldRotation
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FRotator                DeltaRotation                  (Parm, IsPlainOldData)
// bool                           bUseInterp                     (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::ServerStopHoldRotation(const struct FRotator& DeltaRotation, bool bUseInterp)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15586);

	ATslPlayerController_ServerStopHoldRotation_Params params;
	params.DeltaRotation = DeltaRotation;
	params.bUseInterp = bUseInterp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerStat
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// TEnumAsByte<EServerStatType>   StatType                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 Password                       (Parm, ZeroConstructor)

void ATslPlayerController::ServerStat(TEnumAsByte<EServerStatType> StatType, const struct FString& Password)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15583);

	ATslPlayerController_ServerStat_Params params;
	params.StatType = StatType;
	params.Password = Password;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerStartInteractionByComponent
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class UActorComponent*         InteractionComponent           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ATslPlayerController::ServerStartInteractionByComponent(class UActorComponent* InteractionComponent)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15581);

	ATslPlayerController_ServerStartInteractionByComponent_Params params;
	params.InteractionComponent = InteractionComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerStartInteraction
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class UInteractionComponent*   InteractionComponent           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ATslPlayerController::ServerStartInteraction(class UInteractionComponent* InteractionComponent)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15579);

	ATslPlayerController_ServerStartInteraction_Params params;
	params.InteractionComponent = InteractionComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerStartHoldRotation
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FRotator                Current                        (Parm, IsPlainOldData)

void ATslPlayerController::ServerStartHoldRotation(const struct FRotator& Current)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15577);

	ATslPlayerController_ServerStartHoldRotation_Params params;
	params.Current = Current;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerSpawnVehicle
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void ATslPlayerController::ServerSpawnVehicle()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15576);

	ATslPlayerController_ServerSpawnVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerSetViewTarget
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class AActor*                  NewViewTarget                  (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::ServerSetViewTarget(class AActor* NewViewTarget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15574);

	ATslPlayerController_ServerSetViewTarget_Params params;
	params.NewViewTarget = NewViewTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerSetThirdPerson
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           bNewThirdPerson                (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::ServerSetThirdPerson(bool bNewThirdPerson)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15572);

	ATslPlayerController_ServerSetThirdPerson_Params params;
	params.bNewThirdPerson = bNewThirdPerson;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerSetIsReviving
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           InbIsReviving                  (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::ServerSetIsReviving(bool InbIsReviving)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15570);

	ATslPlayerController_ServerSetIsReviving_Params params;
	params.InbIsReviving = InbIsReviving;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerSetControlRotation
// (Net, NetReliable, Native, Event, Protected, HasDefaults, NetClient)
// Parameters:
// struct FRotator                Rotation                       (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ATslPlayerController::ServerSetControlRotation(const struct FRotator& Rotation)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15568);

	ATslPlayerController_ServerSetControlRotation_Params params;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerSetClientFps
// (Final, Net, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// float                          Fps                            (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::ServerSetClientFps(float Fps)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15566);

	ATslPlayerController_ServerSetClientFps_Params params;
	params.Fps = Fps;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerSetAccumViewRotation
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FVector_NetQuantizeNormal InAccumViewRotation            (ConstParm, Parm, ReferenceParm)

void ATslPlayerController::ServerSetAccumViewRotation(const struct FVector_NetQuantizeNormal& InAccumViewRotation)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15564);

	ATslPlayerController_ServerSetAccumViewRotation_Params params;
	params.InAccumViewRotation = InAccumViewRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerSendTPPacketReliable
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TArray<unsigned char>          Packet                         (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void ATslPlayerController::ServerSendTPPacketReliable(TArray<unsigned char> Packet)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15561);

	ATslPlayerController_ServerSendTPPacketReliable_Params params;
	params.Packet = Packet;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerSendPacketUnreliable
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TArray<unsigned char>          Packet                         (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void ATslPlayerController::ServerSendPacketUnreliable(TArray<unsigned char> Packet)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15558);

	ATslPlayerController_ServerSendPacketUnreliable_Params params;
	params.Packet = Packet;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerSendPacketReliable
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TArray<unsigned char>          Packet                         (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void ATslPlayerController::ServerSendPacketReliable(TArray<unsigned char> Packet)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15555);

	ATslPlayerController_ServerSendPacketReliable_Params params;
	params.Packet = Packet;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerSay
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 Msg                            (Parm, ZeroConstructor)

void ATslPlayerController::ServerSay(const struct FString& Msg)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15553);

	ATslPlayerController_ServerSay_Params params;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerPickUpItemFromPackage
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class UItem*                   Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AItemPackage*            Package                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   TargetContainer                (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 Options                        (Parm, ZeroConstructor)

void ATslPlayerController::ServerPickUpItemFromPackage(class UItem* Item, class AItemPackage* Package, const struct FName& TargetContainer, const struct FString& Options)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15548);

	ATslPlayerController_ServerPickUpItemFromPackage_Params params;
	params.Item = Item;
	params.Package = Package;
	params.TargetContainer = TargetContainer;
	params.Options = Options;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerPickUpDroppedItem
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class UObject*                 DroppedItemObject              (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   TargetContainer                (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 Options                        (Parm, ZeroConstructor)

void ATslPlayerController::ServerPickUpDroppedItem(class UObject* DroppedItemObject, const struct FName& TargetContainer, const struct FString& Options)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15544);

	ATslPlayerController_ServerPickUpDroppedItem_Params params;
	params.DroppedItemObject = DroppedItemObject;
	params.TargetContainer = TargetContainer;
	params.Options = Options;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerNotifyHitToGlassWindowInst
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class UTslInstancedGlassWindowComponent* GlassWindowInstComponent       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ATslPlayerController::ServerNotifyHitToGlassWindowInst(class UTslInstancedGlassWindowComponent* GlassWindowInstComponent, const struct FHitResult& Hit)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15541);

	ATslPlayerController_ServerNotifyHitToGlassWindowInst_Params params;
	params.GlassWindowInstComponent = GlassWindowInstComponent;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerNotifyHitToGlassWindow
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class UTslGlassWindowComponent* GlassWindowComponent           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ATslPlayerController::ServerNotifyHitToGlassWindow(class UTslGlassWindowComponent* GlassWindowComponent, const struct FHitResult& Hit)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15538);

	ATslPlayerController_ServerNotifyHitToGlassWindow_Params params;
	params.GlassWindowComponent = GlassWindowComponent;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerNextSetViewTarget
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           bIsPrev                        (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::ServerNextSetViewTarget(bool bIsPrev)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15536);

	ATslPlayerController_ServerNextSetViewTarget_Params params;
	params.bIsPrev = bIsPrev;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerMoveToVehicleSeat
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// int                            SeatIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::ServerMoveToVehicleSeat(int SeatIndex)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15534);

	ATslPlayerController_ServerMoveToVehicleSeat_Params params;
	params.SeatIndex = SeatIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerMapLoadFinishedOnClient
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ATslPlayerController::ServerMapLoadFinishedOnClient()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15533);

	ATslPlayerController_ServerMapLoadFinishedOnClient_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerLeaveMatchIntentionally
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ATslPlayerController::ServerLeaveMatchIntentionally()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15532);

	ATslPlayerController_ServerLeaveMatchIntentionally_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerKickCharacter
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ATslCharacter*           TslCharacter                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   Reason                         (ConstParm, Parm, ReferenceParm)

void ATslPlayerController::ServerKickCharacter(class ATslCharacter* TslCharacter, const struct FText& Reason)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15529);

	ATslPlayerController_ServerKickCharacter_Params params;
	params.TslCharacter = TslCharacter;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerCheat
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 Msg                            (Parm, ZeroConstructor)

void ATslPlayerController::ServerCheat(const struct FString& Msg)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15527);

	ATslPlayerController_ServerCheat_Params params;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerCancelInteraction
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class UActorComponent*         InteractionComponent           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ATslPlayerController::ServerCancelInteraction(class UActorComponent* InteractionComponent)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15525);

	ATslPlayerController_ServerCancelInteraction_Params params;
	params.InteractionComponent = InteractionComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerBroadCastUpdateCameraInfo
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           InbFirstPerson                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           InbIsInVehicle                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           InbIsScoping                   (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::ServerBroadCastUpdateCameraInfo(bool InbFirstPerson, bool InbIsInVehicle, bool InbIsScoping)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15521);

	ATslPlayerController_ServerBroadCastUpdateCameraInfo_Params params;
	params.InbFirstPerson = InbFirstPerson;
	params.InbIsInVehicle = InbIsInVehicle;
	params.InbIsScoping = InbIsScoping;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerBroadCastCastingBar
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          CastTime                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   CastName                       (ConstParm, Parm, ReferenceParm)
// bool                           OnOff                          (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::ServerBroadCastCastingBar(float CastTime, const struct FText& CastName, bool OnOff)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15517);

	ATslPlayerController_ServerBroadCastCastingBar_Params params;
	params.CastTime = CastTime;
	params.CastName = CastName;
	params.OnOff = OnOff;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerBEServerCommand
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// struct FString                 Command                        (Parm, ZeroConstructor)
// struct FString                 Arg0                           (Parm, ZeroConstructor)
// struct FString                 Arg1                           (Parm, ZeroConstructor)
// struct FString                 Arg2                           (Parm, ZeroConstructor)

void ATslPlayerController::ServerBEServerCommand(const struct FString& Command, const struct FString& Arg0, const struct FString& Arg1, const struct FString& Arg2)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15512);

	ATslPlayerController_ServerBEServerCommand_Params params;
	params.Command = Command;
	params.Arg0 = Arg0;
	params.Arg1 = Arg1;
	params.Arg2 = Arg2;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ServerAdmin
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FString                 AdminCommand                   (Parm, ZeroConstructor)

void ATslPlayerController::ServerAdmin(const struct FString& AdminCommand)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15510);

	ATslPlayerController_ServerAdmin_Params params;
	params.AdminCommand = AdminCommand;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.SendSystemMessage
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// ESystemMessageType             MessageType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   Message                        (ConstParm, Parm, ReferenceParm)
// float                          MessageDuration                (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::SendSystemMessage(ESystemMessageType MessageType, const struct FText& Message, float MessageDuration)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15505);

	ATslPlayerController_SendSystemMessage_Params params;
	params.MessageType = MessageType;
	params.Message = Message;
	params.MessageDuration = MessageDuration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.Say
// (Exec, Native, Public)
// Parameters:
// struct FString                 Msg                            (Parm, ZeroConstructor)

void ATslPlayerController::Say(const struct FString& Msg)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15503);

	ATslPlayerController_Say_Params params;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.SaveGearProfile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ProfileIndex                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          inArray                        (Parm, ZeroConstructor)

void ATslPlayerController::SaveGearProfile(int ProfileIndex, TArray<class UClass*> inArray)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15499);

	ATslPlayerController_SaveGearProfile_Params params;
	params.ProfileIndex = ProfileIndex;
	params.inArray = inArray;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ReliablePong
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// int                            SeqID                          (Parm, ZeroConstructor, IsPlainOldData)
// int64_t                        DateTimeTickFromServer         (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::ReliablePong(int SeqID, int64_t DateTimeTickFromServer)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15496);

	ATslPlayerController_ReliablePong_Params params;
	params.SeqID = SeqID;
	params.DateTimeTickFromServer = DateTimeTickFromServer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ReliablePing
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// int                            SeqID                          (Parm, ZeroConstructor, IsPlainOldData)
// int64_t                        DateTimeTick                   (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::ReliablePing(int SeqID, int64_t DateTimeTick)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15493);

	ATslPlayerController_ReliablePing_Params params;
	params.SeqID = SeqID;
	params.DateTimeTick = DateTimeTick;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.OnShowCastingBarWidget
// (Final, Native, Protected)
// Parameters:
// float                          CastTime                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   CastName                       (Parm)
// bool                           OnOff                          (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::OnShowCastingBarWidget(float CastTime, const struct FText& CastName, bool OnOff)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15489);

	ATslPlayerController_OnShowCastingBarWidget_Params params;
	params.CastTime = CastTime;
	params.CastName = CastName;
	params.OnOff = OnOff;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.OnRep_Team
// (Final, Native, Private)

void ATslPlayerController::OnRep_Team()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15488);

	ATslPlayerController_OnRep_Team_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.OnRep_CameraViewBehaviour
// (Final, Native, Private)

void ATslPlayerController::OnRep_CameraViewBehaviour()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15487);

	ATslPlayerController_OnRep_CameraViewBehaviour_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.OnRep_bUseTPAntibotClient
// (Final, Native, Private)

void ATslPlayerController::OnRep_bUseTPAntibotClient()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15486);

	ATslPlayerController_OnRep_bUseTPAntibotClient_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.OnMoveToVehicleSeat
// (Final, Native, Public)
// Parameters:
// unsigned char                  idx                            (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::OnMoveToVehicleSeat(unsigned char idx)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15484);

	ATslPlayerController_OnMoveToVehicleSeat_Params params;
	params.idx = idx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.OnItemStackCountHandlingMode
// (Final, Native, Public, BlueprintCallable)

void ATslPlayerController::OnItemStackCountHandlingMode()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15483);

	ATslPlayerController_OnItemStackCountHandlingMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.OnFinishInteractionCast
// (Final, Native, Private)
// Parameters:
// class UObject*                 CastObject                     (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::OnFinishInteractionCast(class UObject* CastObject)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15481);

	ATslPlayerController_OnFinishInteractionCast_Params params;
	params.CastObject = CastObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.OnExecuteExitCommand
// (Final, Native, Private)

void ATslPlayerController::OnExecuteExitCommand()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15480);

	ATslPlayerController_OnExecuteExitCommand_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.OnClickedReportButton
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EReportCause                   ReportCause                    (Parm, ZeroConstructor, IsPlainOldData)
// ESubjectToReport               SubjectToReport                (Parm, ZeroConstructor, IsPlainOldData)
// TArray<EReportDetailCauseType> ReportDetailCauseTypeList      (Parm, ZeroConstructor)

void ATslPlayerController::OnClickedReportButton(EReportCause ReportCause, ESubjectToReport SubjectToReport, TArray<EReportDetailCauseType> ReportDetailCauseTypeList)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15472);

	ATslPlayerController_OnClickedReportButton_Params params;
	params.ReportCause = ReportCause;
	params.SubjectToReport = SubjectToReport;
	params.ReportDetailCauseTypeList = ReportDetailCauseTypeList;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.OnCancelInteractionCast
// (Final, Native, Private)
// Parameters:
// class UObject*                 CastObject                     (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::OnCancelInteractionCast(class UObject* CastObject)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15470);

	ATslPlayerController_OnCancelInteractionCast_Params params;
	params.CastObject = CastObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.OffItemStackCountHandlingMode
// (Final, Native, Public, BlueprintCallable)

void ATslPlayerController::OffItemStackCountHandlingMode()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15469);

	ATslPlayerController_OffItemStackCountHandlingMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ObserverTeleportTo
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Location                       (Parm, IsPlainOldData)

void ATslPlayerController::ObserverTeleportTo(const struct FVector& Location)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15467);

	ATslPlayerController_ObserverTeleportTo_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.NextSetViewTarget
// (Final, Native, Public, BlueprintCallable)

void ATslPlayerController::NextSetViewTarget()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15466);

	ATslPlayerController_NextSetViewTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.KickCharacter
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class ATslCharacter*           TslCharacter                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   Reason                         (ConstParm, Parm, OutParm, ReferenceParm)

void ATslPlayerController::KickCharacter(class ATslCharacter* TslCharacter, const struct FText& Reason)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15463);

	ATslPlayerController_KickCharacter_Params params;
	params.TslCharacter = TslCharacter;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.IsSpectatorState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslPlayerController::IsSpectatorState()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15461);

	ATslPlayerController_IsSpectatorState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.IsSpectating
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslPlayerController::IsSpectating()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15459);

	ATslPlayerController_IsSpectating_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.IsSameObservingCameraMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EObserverCameraMode            CameraType                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslPlayerController::IsSameObservingCameraMode(EObserverCameraMode CameraType)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15455);

	ATslPlayerController_IsSameObservingCameraMode_Params params;
	params.CameraType = CameraType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.IsReplayingKillcam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslPlayerController::IsReplayingKillcam()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15453);

	ATslPlayerController_IsReplayingKillcam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.IsReplaying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslPlayerController::IsReplaying()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15451);

	ATslPlayerController_IsReplaying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.IsObserving
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslPlayerController::IsObserving()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15449);

	ATslPlayerController_IsObserving_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.IsItemStackCountHandlingMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslPlayerController::IsItemStackCountHandlingMode()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15447);

	ATslPlayerController_IsItemStackCountHandlingMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.IsHighPing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslPlayerController::IsHighPing()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15445);

	ATslPlayerController_IsHighPing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.IsGroggying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslPlayerController::IsGroggying()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15443);

	ATslPlayerController_IsGroggying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.IsGamepadHoldProcessing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslPlayerController::IsGamepadHoldProcessing()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15441);

	ATslPlayerController_IsGamepadHoldProcessing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.IsGameInputAllowed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslPlayerController::IsGameInputAllowed()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15439);

	ATslPlayerController_IsGameInputAllowed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.HideTslDebugInfomation
// (Final, Exec, Native, Public)

void ATslPlayerController::HideTslDebugInfomation()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15438);

	ATslPlayerController_HideTslDebugInfomation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.HideMatchResult
// (Final, Native, Private)

void ATslPlayerController::HideMatchResult()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15437);

	ATslPlayerController_HideMatchResult_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.GetVivoxComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UVivoxComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UVivoxComponent* ATslPlayerController::GetVivoxComponent()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15435);

	ATslPlayerController_GetVivoxComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.GetViewTargetTslCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslCharacter*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslCharacter* ATslPlayerController::GetViewTargetTslCharacter()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15433);

	ATslPlayerController_GetViewTargetTslCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.GetViewTargetTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATeam*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATeam* ATslPlayerController::GetViewTargetTeam()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15431);

	ATslPlayerController_GetViewTargetTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.GetTslZombieMatchResultInfos
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FTslPlayerMatchResultInfo> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FTslPlayerMatchResultInfo> ATslPlayerController::GetTslZombieMatchResultInfos()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15428);

	ATslPlayerController_GetTslZombieMatchResultInfos_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.GetTslPlayerMatchResultInfos
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FTslPlayerMatchResultInfo> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FTslPlayerMatchResultInfo> ATslPlayerController::GetTslPlayerMatchResultInfos()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15425);

	ATslPlayerController_GetTslPlayerMatchResultInfos_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.GetTslHumanMatchResultInfos
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FTslPlayerMatchResultInfo> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FTslPlayerMatchResultInfo> ATslPlayerController::GetTslHumanMatchResultInfos()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15422);

	ATslPlayerController_GetTslHumanMatchResultInfos_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.GetTslCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslCharacter*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslCharacter* ATslPlayerController::GetTslCharacter()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15420);

	ATslPlayerController_GetTslCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.GetTeamOverallKillCountAtObserving
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ATslPlayerController::GetTeamOverallKillCountAtObserving()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15418);

	ATslPlayerController_GetTeamOverallKillCountAtObserving_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.GetTeamMemberCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ATslPlayerController::GetTeamMemberCount()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15416);

	ATslPlayerController_GetTeamMemberCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.GetTargetViewRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator ATslPlayerController::GetTargetViewRotation()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15414);

	ATslPlayerController_GetTargetViewRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.GetSpectatingPlayerName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ATslPlayerController::GetSpectatingPlayerName()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15412);

	ATslPlayerController_GetSpectatingPlayerName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.GetReplicateTeamMembers
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class ATslCharacter*>   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class ATslCharacter*> ATslPlayerController::GetReplicateTeamMembers()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15409);

	ATslPlayerController_GetReplicateTeamMembers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.GetReplicateCharacters
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class ATslCharacter*>   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class ATslCharacter*> ATslPlayerController::GetReplicateCharacters()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15406);

	ATslPlayerController_GetReplicateCharacters_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.GetReplicateCarePackageItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class ACarePackageItem*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class ACarePackageItem*> ATslPlayerController::GetReplicateCarePackageItems()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15403);

	ATslPlayerController_GetReplicateCarePackageItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.GetOtherElapsedCastTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslPlayerController::GetOtherElapsedCastTime()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15401);

	ATslPlayerController_GetOtherElapsedCastTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.GetOtherCastTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslPlayerController::GetOtherCastTime()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15399);

	ATslPlayerController_GetOtherCastTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.GetOtherCastingName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText ATslPlayerController::GetOtherCastingName()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15397);

	ATslPlayerController_GetOtherCastingName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.GetObserverCameraMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EObserverCameraMode            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EObserverCameraMode ATslPlayerController::GetObserverCameraMode()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15394);

	ATslPlayerController_GetObserverCameraMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.GetObserverAuthorityType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EObserverAuthorityType         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EObserverAuthorityType ATslPlayerController::GetObserverAuthorityType()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15391);

	ATslPlayerController_GetObserverAuthorityType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.GetKillerName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ATslPlayerController::GetKillerName()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15389);

	ATslPlayerController_GetKillerName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.GetHudDebugText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText ATslPlayerController::GetHudDebugText()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15387);

	ATslPlayerController_GetHudDebugText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.GetGearProfile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ProfileIndex                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> ATslPlayerController::GetGearProfile(int ProfileIndex)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15383);

	ATslPlayerController_GetGearProfile_Params params;
	params.ProfileIndex = ProfileIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.GetCurrentHoldProgressRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslPlayerController::GetCurrentHoldProgressRate()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15381);

	ATslPlayerController_GetCurrentHoldProgressRate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.GetClientTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           IncludeSelf                    (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class ATeam*>           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class ATeam*> ATslPlayerController::GetClientTeam(bool IncludeSelf)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15377);

	ATslPlayerController_GetClientTeam_Params params;
	params.IncludeSelf = IncludeSelf;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.GetCanAllSpectate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslPlayerController::GetCanAllSpectate()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15375);

	ATslPlayerController_GetCanAllSpectate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.GetAliveTeamMemberCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ATslPlayerController::GetAliveTeamMemberCount()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15373);

	ATslPlayerController_GetAliveTeamMemberCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.DumpActorDetailByRaycast
// (Final, Exec, Native, Public)

void ATslPlayerController::DumpActorDetailByRaycast()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15372);

	ATslPlayerController_DumpActorDetailByRaycast_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.DropItem
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 ItemTypeName                   (Parm, ZeroConstructor)

void ATslPlayerController::DropItem(const struct FString& ItemTypeName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15370);

	ATslPlayerController_DropItem_Params params;
	params.ItemTypeName = ItemTypeName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.CompleteReportKiller
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslPlayerController::CompleteReportKiller()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15368);

	ATslPlayerController_CompleteReportKiller_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.ClientWasWarnedTobeKicked
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FText                   KickReason                     (ConstParm, Parm, ReferenceParm)

void ATslPlayerController::ClientWasWarnedTobeKicked(const struct FText& KickReason)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15366);

	ATslPlayerController_ClientWasWarnedTobeKicked_Params params;
	params.KickReason = KickReason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ClientWasKickedAndExit
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FText                   KickReason                     (ConstParm, Parm, ReferenceParm)

void ATslPlayerController::ClientWasKickedAndExit(const struct FText& KickReason)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15364);

	ATslPlayerController_ClientWasKickedAndExit_Params params;
	params.KickReason = KickReason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ClientUpdateSpectatorCameraMode
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FName                   InCameraName                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           InbFirstPerson                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           InbIsInVehicle                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           InbIsScoping                   (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::ClientUpdateSpectatorCameraMode(const struct FName& InCameraName, bool InbFirstPerson, bool InbIsInVehicle, bool InbIsScoping)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15359);

	ATslPlayerController_ClientUpdateSpectatorCameraMode_Params params;
	params.InCameraName = InCameraName;
	params.InbFirstPerson = InbFirstPerson;
	params.InbIsInVehicle = InbIsInVehicle;
	params.InbIsScoping = InbIsScoping;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ClientStartOnlineGame
// (Net, NetReliable, Native, Event, Public, NetClient)

void ATslPlayerController::ClientStartOnlineGame()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15358);

	ATslPlayerController_ClientStartOnlineGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ClientShowMatchResult
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)

void ATslPlayerController::ClientShowMatchResult()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15357);

	ATslPlayerController_ClientShowMatchResult_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ClientShowCastingBar
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// float                          CastTime                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   CastName                       (ConstParm, Parm, ReferenceParm)
// bool                           OnOff                          (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::ClientShowCastingBar(float CastTime, const struct FText& CastName, bool OnOff)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15353);

	ATslPlayerController_ClientShowCastingBar_Params params;
	params.CastTime = CastTime;
	params.CastName = CastName;
	params.OnOff = OnOff;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ClientSetTslPlayerMatchResultInfos
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<struct FTslPlayerMatchResultInfo> InTslPlayerMatchResultInfos    (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void ATslPlayerController::ClientSetTslPlayerMatchResultInfos(TArray<struct FTslPlayerMatchResultInfo> InTslPlayerMatchResultInfos)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15350);

	ATslPlayerController_ClientSetTslPlayerMatchResultInfos_Params params;
	params.InTslPlayerMatchResultInfos = InTslPlayerMatchResultInfos;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ClientSetCanAllSpectate
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                           InbCanSpectate                 (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::ClientSetCanAllSpectate(bool InbCanSpectate)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15348);

	ATslPlayerController_ClientSetCanAllSpectate_Params params;
	params.InbCanSpectate = InbCanSpectate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ClientSendTPPacketReliable
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<unsigned char>          Packet                         (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void ATslPlayerController::ClientSendTPPacketReliable(TArray<unsigned char> Packet)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15345);

	ATslPlayerController_ClientSendTPPacketReliable_Params params;
	params.Packet = Packet;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ClientSendRoundEndEvent
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                           bIsWinner                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ExpendedTimeInSeconds          (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::ClientSendRoundEndEvent(bool bIsWinner, int ExpendedTimeInSeconds)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15342);

	ATslPlayerController_ClientSendRoundEndEvent_Params params;
	params.bIsWinner = bIsWinner;
	params.ExpendedTimeInSeconds = ExpendedTimeInSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ClientSendPacketUnreliable
// (Net, Native, Event, Public, NetClient)
// Parameters:
// TArray<unsigned char>          Packet                         (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void ATslPlayerController::ClientSendPacketUnreliable(TArray<unsigned char> Packet)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15339);

	ATslPlayerController_ClientSendPacketUnreliable_Params params;
	params.Packet = Packet;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ClientSendPacketReliable
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<unsigned char>          Packet                         (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void ATslPlayerController::ClientSendPacketReliable(TArray<unsigned char> Packet)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15336);

	ATslPlayerController_ClientSendPacketReliable_Params params;
	params.Packet = Packet;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ClientOnCharacterRestart
// (Net, NetReliable, Native, Event, Public, NetClient)

void ATslPlayerController::ClientOnCharacterRestart()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15335);

	ATslPlayerController_ClientOnCharacterRestart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ClientOnCharacterDeath
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                           bIsTeamMatch                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bHasAliveTeamMember            (Parm, ZeroConstructor, IsPlainOldData)
// struct FTslReportUserInfo      InKillerInfo                   (Parm)
// bool                           InbCanReport                   (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::ClientOnCharacterDeath(bool bIsTeamMatch, bool bHasAliveTeamMember, const struct FTslReportUserInfo& InKillerInfo, bool InbCanReport)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15330);

	ATslPlayerController_ClientOnCharacterDeath_Params params;
	params.bIsTeamMatch = bIsTeamMatch;
	params.bHasAliveTeamMember = bHasAliveTeamMember;
	params.InKillerInfo = InKillerInfo;
	params.InbCanReport = InbCanReport;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ClientNotifyStartBuff
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// struct FName                   BuffName                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bStart                         (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::ClientNotifyStartBuff(const struct FName& BuffName, bool bStart)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15327);

	ATslPlayerController_ClientNotifyStartBuff_Params params;
	params.BuffName = BuffName;
	params.bStart = bStart;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ClientNotifySpeedBoost
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// float                          Boost                          (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::ClientNotifySpeedBoost(float Boost)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15325);

	ATslPlayerController_ClientNotifySpeedBoost_Params params;
	params.Boost = Boost;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ClientNotifyRestrictingPlayArea
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)

void ATslPlayerController::ClientNotifyRestrictingPlayArea()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15324);

	ATslPlayerController_ClientNotifyRestrictingPlayArea_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ClientNotifyPlayerEndWithoutHitInfo
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int                            Ranking                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FTslPlayerStatistics    Statistics                     (Parm)
// struct FTslPlayerStatisticsForOwner StatisticsForOwner             (Parm)

void ATslPlayerController::ClientNotifyPlayerEndWithoutHitInfo(int Ranking, const struct FTslPlayerStatistics& Statistics, const struct FTslPlayerStatisticsForOwner& StatisticsForOwner)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15320);

	ATslPlayerController_ClientNotifyPlayerEndWithoutHitInfo_Params params;
	params.Ranking = Ranking;
	params.Statistics = Statistics;
	params.StatisticsForOwner = StatisticsForOwner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ClientNotifyPlayerEnd
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int                            Ranking                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FTslPlayerStatistics    Statistics                     (Parm)
// struct FTslPlayerStatisticsForOwner StatisticsForOwner             (Parm)
// struct FTakeHitInfo            LastTakeHitInfo                (Parm)

void ATslPlayerController::ClientNotifyPlayerEnd(int Ranking, const struct FTslPlayerStatistics& Statistics, const struct FTslPlayerStatisticsForOwner& StatisticsForOwner, const struct FTakeHitInfo& LastTakeHitInfo)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15315);

	ATslPlayerController_ClientNotifyPlayerEnd_Params params;
	params.Ranking = Ranking;
	params.Statistics = Statistics;
	params.StatisticsForOwner = StatisticsForOwner;
	params.LastTakeHitInfo = LastTakeHitInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ClientNotifyNextGasIn
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// struct FVector_NetQuantize     PoisonGasWarningPosition       (Parm)
// float                          PoisonGasWarningRadius         (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::ClientNotifyNextGasIn(const struct FVector_NetQuantize& PoisonGasWarningPosition, float PoisonGasWarningRadius)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15312);

	ATslPlayerController_ClientNotifyNextGasIn_Params params;
	params.PoisonGasWarningPosition = PoisonGasWarningPosition;
	params.PoisonGasWarningRadius = PoisonGasWarningRadius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ClientNotifyHealAmount_Unreliable
// (Net, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// float                          Heal                           (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::ClientNotifyHealAmount_Unreliable(float Heal)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15310);

	ATslPlayerController_ClientNotifyHealAmount_Unreliable_Params params;
	params.Heal = Heal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ClientNotifyHealAmount_Reliable
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// float                          Heal                           (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::ClientNotifyHealAmount_Reliable(float Heal)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15308);

	ATslPlayerController_ClientNotifyHealAmount_Reliable_Params params;
	params.Heal = Heal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ClientNotifyHealAmount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Heal                           (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::ClientNotifyHealAmount(float Heal)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15306);

	ATslPlayerController_ClientNotifyHealAmount_Params params;
	params.Heal = Heal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ClientNotifyHeal_Unreliable
// (Net, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// float                          HealthStart                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          Health                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaxHealth                      (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::ClientNotifyHeal_Unreliable(float HealthStart, float Health, float MaxHealth)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15302);

	ATslPlayerController_ClientNotifyHeal_Unreliable_Params params;
	params.HealthStart = HealthStart;
	params.Health = Health;
	params.MaxHealth = MaxHealth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ClientNotifyHeal_Reliable
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// float                          HealthStart                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          Health                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaxHealth                      (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::ClientNotifyHeal_Reliable(float HealthStart, float Health, float MaxHealth)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15298);

	ATslPlayerController_ClientNotifyHeal_Reliable_Params params;
	params.HealthStart = HealthStart;
	params.Health = Health;
	params.MaxHealth = MaxHealth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ClientNotifyHeal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          HealthStart                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          Health                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaxHealth                      (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::ClientNotifyHeal(float HealthStart, float Health, float MaxHealth)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15294);

	ATslPlayerController_ClientNotifyHeal_Params params;
	params.HealthStart = HealthStart;
	params.Health = Health;
	params.MaxHealth = MaxHealth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ClientInteractByComponent
// (Net, Native, Event, Public, NetClient)
// Parameters:
// class UActorComponent*         TargetComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ATslPlayerController::ClientInteractByComponent(class UActorComponent* TargetComponent)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15292);

	ATslPlayerController_ClientInteractByComponent_Params params;
	params.TargetComponent = TargetComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ClientInteract
// (Net, Native, Event, Public, NetClient)
// Parameters:
// class AActor*                  TargetObject                   (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::ClientInteract(class AActor* TargetObject)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15290);

	ATslPlayerController_ClientInteract_Params params;
	params.TargetObject = TargetObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ClientGameStarted
// (Net, NetReliable, Native, Event, Public, NetClient)

void ATslPlayerController::ClientGameStarted()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15289);

	ATslPlayerController_ClientGameStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ClientEndOnlineGame
// (Net, NetReliable, Native, Event, Public, NetClient)

void ATslPlayerController::ClientEndOnlineGame()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15288);

	ATslPlayerController_ClientEndOnlineGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.ClientAdminCopyString
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// struct FString                 inString                       (Parm, ZeroConstructor)

void ATslPlayerController::ClientAdminCopyString(const struct FString& inString)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15286);

	ATslPlayerController_ClientAdminCopyString_Params params;
	params.inString = inString;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.Cheat_ServerSpawnVehicle
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// int                            VehicleIndex                   (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::Cheat_ServerSpawnVehicle(int VehicleIndex)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15284);

	ATslPlayerController_Cheat_ServerSpawnVehicle_Params params;
	params.VehicleIndex = VehicleIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.CanSeeTerrainThroughFogInTheAir
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslPlayerController::CanSeeTerrainThroughFogInTheAir()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15282);

	ATslPlayerController_CanSeeTerrainThroughFogInTheAir_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.CanReport
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslPlayerController::CanReport()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15280);

	ATslPlayerController_CanReport_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerController.BP_Test_SpawnVehicle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            VehicleIndex                   (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerController::BP_Test_SpawnVehicle(int VehicleIndex)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15278);

	ATslPlayerController_BP_Test_SpawnVehicle_Params params;
	params.VehicleIndex = VehicleIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.BEServer
// (Final, Exec, Native, Private)
// Parameters:
// struct FString                 Command                        (Parm, ZeroConstructor)
// struct FString                 Arg0                           (Parm, ZeroConstructor)
// struct FString                 Arg1                           (Parm, ZeroConstructor)
// struct FString                 Arg2                           (Parm, ZeroConstructor)

void ATslPlayerController::BEServer(const struct FString& Command, const struct FString& Arg0, const struct FString& Arg1, const struct FString& Arg2)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15273);

	ATslPlayerController_BEServer_Params params;
	params.Command = Command;
	params.Arg0 = Arg0;
	params.Arg1 = Arg1;
	params.Arg2 = Arg2;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.BEClient
// (Final, Exec, Native, Private)
// Parameters:
// struct FString                 Command                        (Parm, ZeroConstructor)

void ATslPlayerController::BEClient(const struct FString& Command)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15271);

	ATslPlayerController_BEClient_Params params;
	params.Command = Command;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerController.Admin
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 ServerAdminCommand             (Parm, ZeroConstructor)

void ATslPlayerController::Admin(const struct FString& ServerAdminCommand)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15269);

	ATslPlayerController_Admin_Params params;
	params.ServerAdminCommand = ServerAdminCommand;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ConsoleCommandExecutor.ExecuteConsoleCommands
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FString>         Commands                       (Parm, ZeroConstructor)

void AConsoleCommandExecutor::ExecuteConsoleCommands(TArray<struct FString> Commands)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15657);

	AConsoleCommandExecutor_ExecuteConsoleCommands_Params params;
	params.Commands = Commands;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.SlotInterface.IsWeapon
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USlotInterface::IsWeapon()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15702);

	USlotInterface_IsWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SlotInterface.IsStackable
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USlotInterface::IsStackable()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15700);

	USlotInterface_IsStackable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SlotInterface.IsPackageItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USlotInterface::IsPackageItem()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15698);

	USlotInterface_IsPackageItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SlotInterface.IsEquipable
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USlotInterface::IsEquipable()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15696);

	USlotInterface_IsEquipable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SlotInterface.IsCastableItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USlotInterface::IsCastableItem()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15694);

	USlotInterface_IsCastableItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SlotInterface.IsAttachment
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USlotInterface::IsAttachment()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15692);

	USlotInterface_IsAttachment_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SlotInterface.GetUnitSpace
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USlotInterface::GetUnitSpace()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15690);

	USlotInterface_GetUnitSpace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SlotInterface.GetToolTipIconTexture
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture* USlotInterface::GetToolTipIconTexture()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15688);

	USlotInterface_GetToolTipIconTexture_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SlotInterface.GetToolTipIconSizeRatio
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USlotInterface::GetToolTipIconSizeRatio()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15686);

	USlotInterface_GetToolTipIconSizeRatio_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SlotInterface.GetStackCountMax
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int USlotInterface::GetStackCountMax()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15684);

	USlotInterface_GetStackCountMax_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SlotInterface.GetStackCount
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int USlotInterface::GetStackCount()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15682);

	USlotInterface_GetStackCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SlotInterface.GetSpace
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USlotInterface::GetSpace()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15680);

	USlotInterface_GetSpace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SlotInterface.GetSortPriority
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int USlotInterface::GetSortPriority()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15678);

	USlotInterface_GetSortPriority_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SlotInterface.GetSlotName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText USlotInterface::GetSlotName()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15676);

	USlotInterface_GetSlotName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SlotInterface.GetSlotDetailedName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText USlotInterface::GetSlotDetailedName()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15674);

	USlotInterface_GetSlotDetailedName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SlotInterface.GetSlotDescription
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText USlotInterface::GetSlotDescription()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15672);

	USlotInterface_GetSlotDescription_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SlotInterface.GetSlotCategory
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText USlotInterface::GetSlotCategory()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15670);

	USlotInterface_GetSlotCategory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SlotInterface.GetIconTexture
// (Native, Public, BlueprintCallable)
// Parameters:
// class UTexture*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture* USlotInterface::GetIconTexture()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15668);

	USlotInterface_GetIconTexture_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SlotInterface.GetIconSizeRatio
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USlotInterface::GetIconSizeRatio()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15666);

	USlotInterface_GetIconSizeRatio_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SlotInterface.GetDropSound
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAkAudioEvent*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAkAudioEvent* USlotInterface::GetDropSound()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15664);

	USlotInterface_GetDropSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SlotContainerInterface.ShowSlotContextMenu
// (Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class USlotInterface> Slot                           (Parm, ZeroConstructor, IsPlainOldData)

void USlotContainerInterface::ShowSlotContextMenu(const TScriptInterface<class USlotInterface>& Slot)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15744);

	USlotContainerInterface_ShowSlotContextMenu_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.SlotContainerInterface.IsEnableAction
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class USlotInterface> Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// TScriptInterface<class USlotContainerInterface> OtherContainer                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 Options                        (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USlotContainerInterface::IsEnableAction(const TScriptInterface<class USlotInterface>& Slot, const TScriptInterface<class USlotContainerInterface>& OtherContainer, const struct FString& Options)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15739);

	USlotContainerInterface_IsEnableAction_Params params;
	params.Slot = Slot;
	params.OtherContainer = OtherContainer;
	params.Options = Options;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SlotContainerInterface.HideSlotContextMenu
// (Native, Public, BlueprintCallable)

void USlotContainerInterface::HideSlotContextMenu()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15738);

	USlotContainerInterface_HideSlotContextMenu_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.SlotContainerInterface.GetSlotContext
// (Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class USlotInterface> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TScriptInterface<class USlotInterface> USlotContainerInterface::GetSlotContext()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15736);

	USlotContainerInterface_GetSlotContext_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SlotContainerInterface.GetSlotContainerOwner
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* USlotContainerInterface::GetSlotContainerOwner()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15734);

	USlotContainerInterface_GetSlotContainerOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SlotContainerInterface.GetSlotContainerName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName USlotContainerInterface::GetSlotContainerName()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15732);

	USlotContainerInterface_GetSlotContainerName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SlotContainerInterface.GetDefaultActionName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class USlotInterface> Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName USlotContainerInterface::GetDefaultActionName(const TScriptInterface<class USlotInterface>& Slot)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15729);

	USlotContainerInterface_GetDefaultActionName_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SlotContainerInterface.GetAvailableSlotActions
// (Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class USlotInterface> Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FName>           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FName> USlotContainerInterface::GetAvailableSlotActions(const TScriptInterface<class USlotInterface>& Slot)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15725);

	USlotContainerInterface_GetAvailableSlotActions_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SlotContainerInterface.GetAllSlots
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<TScriptInterface<class USlotInterface>> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<TScriptInterface<class USlotInterface>> USlotContainerInterface::GetAllSlots()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15722);

	USlotContainerInterface_GetAllSlots_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SlotContainerInterface.GetActionName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class USlotInterface> Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// TScriptInterface<class USlotContainerInterface> OtherContainer                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 Options                        (Parm, ZeroConstructor)
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName USlotContainerInterface::GetActionName(const TScriptInterface<class USlotInterface>& Slot, const TScriptInterface<class USlotContainerInterface>& OtherContainer, const struct FString& Options)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15717);

	USlotContainerInterface_GetActionName_Params params;
	params.Slot = Slot;
	params.OtherContainer = OtherContainer;
	params.Options = Options;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SlotContainerInterface.DropSlotOnOtherContainer
// (Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class USlotInterface> Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// TScriptInterface<class USlotContainerInterface> OtherContainer                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 Options                        (Parm, ZeroConstructor)

void USlotContainerInterface::DropSlotOnOtherContainer(const TScriptInterface<class USlotInterface>& Slot, const TScriptInterface<class USlotContainerInterface>& OtherContainer, const struct FString& Options)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15713);

	USlotContainerInterface_DropSlotOnOtherContainer_Params params;
	params.Slot = Slot;
	params.OtherContainer = OtherContainer;
	params.Options = Options;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.SlotContainerInterface.DoSlotActionDefault
// (Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class USlotInterface> Slot                           (Parm, ZeroConstructor, IsPlainOldData)

void USlotContainerInterface::DoSlotActionDefault(const TScriptInterface<class USlotInterface>& Slot)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15711);

	USlotContainerInterface_DoSlotActionDefault_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.SlotContainerInterface.DoSlotAction
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   ActionName                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 Options                        (Parm, ZeroConstructor)

void USlotContainerInterface::DoSlotAction(const struct FName& ActionName, const struct FString& Options)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15708);

	USlotContainerInterface_DoSlotAction_Params params;
	params.ActionName = ActionName;
	params.Options = Options;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.SlotContainerInterface.DoActionWithSlot
// (Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class USlotInterface> Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ActionName                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 Options                        (Parm, ZeroConstructor)

void USlotContainerInterface::DoActionWithSlot(const TScriptInterface<class USlotInterface>& Slot, const struct FName& ActionName, const struct FString& Options)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15704);

	USlotContainerInterface_DoActionWithSlot_Params params;
	params.Slot = Slot;
	params.ActionName = ActionName;
	params.Options = Options;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ItemExplorerInterface.UpdateItemList
// (Native, Public, BlueprintCallable)

void UItemExplorerInterface::UpdateItemList()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15751);

	UItemExplorerInterface_UpdateItemList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ItemExplorerInterface.GetExplorableItemSlotList
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<TScriptInterface<class USlotInterface>> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<TScriptInterface<class USlotInterface>> UItemExplorerInterface::GetExplorableItemSlotList()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15748);

	UItemExplorerInterface_GetExplorableItemSlotList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.ExplorableItemInterface.IsValidExplorableItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UExplorableItemInterface::IsValidExplorableItem()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15758);

	UExplorableItemInterface_IsValidExplorableItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.ExplorableItemInterface.GetInteractiveActionName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName UExplorableItemInterface::GetInteractiveActionName()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15756);

	UExplorableItemInterface_GetInteractiveActionName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.ExplorableItemInterface.GetExplorationDistance
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UExplorableItemInterface::GetExplorationDistance()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15754);

	UExplorableItemInterface_GetExplorationDistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Item.UseBy
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ATslCharacter*           Character                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UItem::UseBy(class ATslCharacter* Character)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15779);

	UItem_UseBy_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Item.PickUpBy
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ATslCharacter*           Character                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   TargetContainer                (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 Options                        (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UItem::PickUpBy(class ATslCharacter* Character, const struct FName& TargetContainer, const struct FString& Options)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15774);

	UItem_PickUpBy_Params params;
	params.Character = Character;
	params.TargetContainer = TargetContainer;
	params.Options = Options;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Item.IsWeapon
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UItem::IsWeapon()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15772);

	UItem_IsWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Item.IsToy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UItem::IsToy()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15770);

	UItem_IsToy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Item.IsPackageItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UItem::IsPackageItem()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15768);

	UItem_IsPackageItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Item.IsEquipable
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UItem::IsEquipable()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15766);

	UItem_IsEquipable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Item.IsCastableItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UItem::IsCastableItem()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15764);

	UItem_IsCastableItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Item.IsAttachment
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UItem::IsAttachment()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15762);

	UItem_IsAttachment_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Item.GetIconTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture* UItem::GetIconTexture()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15760);

	UItem_GetIconTexture_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.ItemPackage.Items_RepNotify
// (Final, Native, Private)

void AItemPackage::Items_RepNotify()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15819);

	AItemPackage_Items_RepNotify_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ItemPackage.IsOpenedBy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslCharacter*           Character                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AItemPackage::IsOpenedBy(class ATslCharacter* Character)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15816);

	AItemPackage_IsOpenedBy_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.ItemPackage.ClientOnInteractBy
// (Native, Protected)
// Parameters:
// class ATslCharacter*           OtherCharacter                 (Parm, ZeroConstructor, IsPlainOldData)

void AItemPackage::ClientOnInteractBy(class ATslCharacter* OtherCharacter)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15814);

	AItemPackage_ClientOnInteractBy_Params params;
	params.OtherCharacter = OtherCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ItemPackage.AllowInteract
// (Final, Native, Protected)
// Parameters:
// class ATslCharacter*           OtherCharacter                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AItemPackage::AllowInteract(class ATslCharacter* OtherCharacter)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15811);

	AItemPackage_AllowInteract_Params params;
	params.OtherCharacter = OtherCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.DoorFrameComponent.GetDoorStaticMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UStaticMesh*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UStaticMesh* UDoorFrameComponent::GetDoorStaticMesh()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15859);

	UDoorFrameComponent_GetDoorStaticMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.DoorFrameComponent.DisableSubComponents
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bDisable                       (Parm, ZeroConstructor, IsPlainOldData)

void UDoorFrameComponent::DisableSubComponents(bool bDisable)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15857);

	UDoorFrameComponent_DisableSubComponents_Params params;
	params.bDisable = bDisable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.DroppedItem.Item_RepNotify
// (Final, Native, Protected)

void ADroppedItem::Item_RepNotify()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15868);

	ADroppedItem_Item_RepNotify_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.DroppedItemGroup.OnItemEndPlay
// (Final, Native, Private)

void ADroppedItemGroup::OnItemEndPlay()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15878);

	ADroppedItemGroup_OnItemEndPlay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.DroppedItemGroup.OnItemBeginPlay
// (Final, Native, Private)

void ADroppedItemGroup::OnItemBeginPlay()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15877);

	ADroppedItemGroup_OnItemBeginPlay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.DroppedItemGroup.AddItem
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UItem*                   NewItem                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 NewWorldLocation               (Parm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ADroppedItemGroup::AddItem(class UItem* NewItem, const struct FVector& NewWorldLocation)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15873);

	ADroppedItemGroup_AddItem_Params params;
	params.NewItem = NewItem;
	params.NewWorldLocation = NewWorldLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.DroppedItemInterface.GetDroppedItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UItem*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UItem* UDroppedItemInterface::GetDroppedItem()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15881);

	UDroppedItemInterface_GetDroppedItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.FlashBangCaptureActor.CaptureScreen
// (Final, Native, Public)

void AFlashBangCaptureActor::CaptureScreen()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15897);

	AFlashBangCaptureActor_CaptureScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.FlashBangCaptureActor.CaptureINIT
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// bool                           bDoDelay                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          CaptureDelay                   (Parm, ZeroConstructor, IsPlainOldData)
// class APawn*                   PlayerRef                      (Parm, ZeroConstructor, IsPlainOldData)
// class UTextureRenderTarget2D*  RenderTexture                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FPostProcessSettings    PP_Settings                    (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           bHidePawn                      (Parm, ZeroConstructor, IsPlainOldData)

void AFlashBangCaptureActor::CaptureINIT(bool bDoDelay, float CaptureDelay, class APawn* PlayerRef, class UTextureRenderTarget2D* RenderTexture, const struct FPostProcessSettings& PP_Settings, bool bHidePawn)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15890);

	AFlashBangCaptureActor_CaptureINIT_Params params;
	params.bDoDelay = bDoDelay;
	params.CaptureDelay = CaptureDelay;
	params.PlayerRef = PlayerRef;
	params.RenderTexture = RenderTexture;
	params.PP_Settings = PP_Settings;
	params.bHidePawn = bHidePawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.GeneralItemSpawner.CreateItems
// (Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UItem*>           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UItem*> UGeneralItemSpawner::CreateItems()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15919);

	UGeneralItemSpawner_CreateItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.GeneralItemSpawner.CreateItemInitiators
// (Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FItemInitiator>  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FItemInitiator> UGeneralItemSpawner::CreateItemInitiators()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15916);

	UGeneralItemSpawner_CreateItemInitiators_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.HackReporterComponent.ServerOnWallHackDetected
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class ATslCharacter*           Victim                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          Distance                       (Parm, ZeroConstructor, IsPlainOldData)

void UHackReporterComponent::ServerOnWallHackDetected(class ATslCharacter* Victim, float Distance)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15926);

	UHackReporterComponent_ServerOnWallHackDetected_Params params;
	params.Victim = Victim;
	params.Distance = Distance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.HighlightSession.RecordRemainEvents
// (Final, Native, Private)

void UHighlightSession::RecordRemainEvents()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15936);

	UHighlightSession_RecordRemainEvents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.HighlightSession.MatchEnded
// (Final, Native, Private)

void UHighlightSession::MatchEnded()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15935);

	UHighlightSession_MatchEnded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.HighlightSession.KillOtherPlayer
// (Final, Native, Private)
// Parameters:
// bool                           bGroggy                        (Parm, ZeroConstructor, IsPlainOldData)

void UHighlightSession::KillOtherPlayer(bool bGroggy)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15933);

	UHighlightSession_KillOtherPlayer_Params params;
	params.bGroggy = bGroggy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.HighlightSession.Die
// (Final, Native, Private)
// Parameters:
// bool                           bGroggy                        (Parm, ZeroConstructor, IsPlainOldData)

void UHighlightSession::Die(bool bGroggy)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15931);

	UHighlightSession_Die_Params params;
	params.bGroggy = bGroggy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.HighlightSession.DeathCamFinished
// (Final, Native, Private)
// Parameters:
// float                          DeathCamRunningTime            (Parm, ZeroConstructor, IsPlainOldData)

void UHighlightSession::DeathCamFinished(float DeathCamRunningTime)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15929);

	UHighlightSession_DeathCamFinished_Params params;
	params.DeathCamRunningTime = DeathCamRunningTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.InteractionInterface.GetInteractiveObjectName
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UInteractionInterface::GetInteractiveObjectName()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15949);

	UInteractionInterface_GetInteractiveObjectName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.InteractionInterface.GetInteractionVerb
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UInteractionInterface::GetInteractionVerb()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15947);

	UInteractionInterface_GetInteractionVerb_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.InteractionInterface.AllowInteractBy
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ATslCharacter*           Character                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInteractionInterface::AllowInteractBy(class ATslCharacter* Character)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15944);

	UInteractionInterface_AllowInteractBy_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.InteractionComponent.GetInteractiveObjectName
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UInteractionComponent::GetInteractiveObjectName()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15956);

	UInteractionComponent_GetInteractiveObjectName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.InteractionComponent.GetInteractionVerb
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UInteractionComponent::GetInteractionVerb()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15954);

	UInteractionComponent_GetInteractionVerb_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.InteractionComponent.AllowInteractBy
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ATslCharacter*           Character                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UInteractionComponent::AllowInteractBy(class ATslCharacter* Character)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15951);

	UInteractionComponent_AllowInteractBy_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.DroppedItemActorComponent.OnInteractDelegate
// (Final, Native, Protected)
// Parameters:
// class ATslCharacter*           OtherCharacter                 (Parm, ZeroConstructor, IsPlainOldData)

void UDroppedItemActorComponent::OnInteractDelegate(class ATslCharacter* OtherCharacter)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15974);

	UDroppedItemActorComponent_OnInteractDelegate_Params params;
	params.OtherCharacter = OtherCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.DroppedItemActorComponent.AllowInteractDelegate
// (Final, Native, Protected)
// Parameters:
// class ATslCharacter*           OtherCharacter                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDroppedItemActorComponent::AllowInteractDelegate(class ATslCharacter* OtherCharacter)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15971);

	UDroppedItemActorComponent_AllowInteractDelegate_Params params;
	params.OtherCharacter = OtherCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.AttachableItem.GetAttachmentSlotID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   WeaponTag                      (Parm, ZeroConstructor, IsPlainOldData)
// EWeaponAttachmentSlotID        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EWeaponAttachmentSlotID UAttachableItem::GetAttachmentSlotID(const struct FName& WeaponTag)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15983);

	UAttachableItem_GetAttachmentSlotID_Params params;
	params.WeaponTag = WeaponTag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.AttachableItem.GetAttachmentData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   WeaponTag                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FWeaponAttachmentData   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FWeaponAttachmentData UAttachableItem::GetAttachmentData(const struct FName& WeaponTag)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15980);

	UAttachableItem_GetAttachmentData_Params params;
	params.WeaponTag = WeaponTag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.HealItem.GetHealLimit
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslCharacter*           TslCharacter                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UHealItem::GetHealLimit(class ATslCharacter* TslCharacter)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(15997);

	UHealItem_GetHealLimit_Params params;
	params.TslCharacter = TslCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SkinItem.CheckSkin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class USkinnableInterface> SkinnableInterface             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USkinItem::CheckSkin(const TScriptInterface<class USkinnableInterface>& SkinnableInterface)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16005);

	USkinItem_CheckSkin_Params params;
	params.SkinnableInterface = SkinnableInterface;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SkinItem.ApplySkin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class USkinnableInterface> SkinnableInterface             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USkinItem::ApplySkin(const TScriptInterface<class USkinnableInterface>& SkinnableInterface)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16002);

	USkinItem_ApplySkin_Params params;
	params.SkinnableInterface = SkinnableInterface;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.EquipableItem.UnequipBy
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ATslCharacter*           Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UEquipableItem::UnequipBy(class ATslCharacter* Character)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16017);

	UEquipableItem_UnequipBy_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.EquipableItem.EquipBy
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ATslCharacter*           Character                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FEquipPosition          Position                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UEquipableItem::EquipBy(class ATslCharacter* Character, const struct FEquipPosition& Position)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16013);

	UEquipableItem_EquipBy_Params params;
	params.Character = Character;
	params.Position = Position;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.EquipableItem.CanEquipTo
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ATslCharacter*           Character                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UEquipableItem::CanEquipTo(class ATslCharacter* Character)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16010);

	UEquipableItem_CanEquipTo_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CustomEquipableItem.GetOffset_Thrown
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FTransform UCustomEquipableItem::GetOffset_Thrown()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16050);

	UCustomEquipableItem_GetOffset_Thrown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CustomEquipableItem.GetOffset_SideArm
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FTransform UCustomEquipableItem::GetOffset_SideArm()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16048);

	UCustomEquipableItem_GetOffset_SideArm_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CustomEquipableItem.GetOffset_Secondary
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FTransform UCustomEquipableItem::GetOffset_Secondary()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16046);

	UCustomEquipableItem_GetOffset_Secondary_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CustomEquipableItem.GetOffset_Primary
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FTransform UCustomEquipableItem::GetOffset_Primary()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16044);

	UCustomEquipableItem_GetOffset_Primary_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CustomEquipableItem.GetOffset_Melee
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FTransform UCustomEquipableItem::GetOffset_Melee()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16042);

	UCustomEquipableItem_GetOffset_Melee_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CustomEquipableItem.GetItemLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UCustomEquipableItem::GetItemLevel()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16040);

	UCustomEquipableItem_GetItemLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.ThrowableItem.GetEquippedWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslWeapon*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslWeapon* UThrowableItem::GetEquippedWeapon()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16061);

	UThrowableItem_GetEquippedWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.ThrowableItem.GetDefaultWeaponObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslWeapon*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslWeapon* UThrowableItem::GetDefaultWeaponObject()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16059);

	UThrowableItem_GetDefaultWeaponObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SkinnableInterface.HasSkin
// (Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSkinData               InSkinData                     (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USkinnableInterface::HasSkin(const struct FSkinData& InSkinData)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16066);

	USkinnableInterface_HasSkin_Params params;
	params.InSkinData = InSkinData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SkinnableInterface.ClearSkin
// (Native, Public, BlueprintCallable)

void USkinnableInterface::ClearSkin()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16065);

	USkinnableInterface_ClearSkin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon.Weapon_AttachShoulder
// (Final, Native, Public, BlueprintCallable)

void ATslWeapon::Weapon_AttachShoulder()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16158);

	ATslWeapon_Weapon_AttachShoulder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon.Weapon_AttachHand
// (Final, Native, Public, BlueprintCallable)

void ATslWeapon::Weapon_AttachHand()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16157);

	ATslWeapon_Weapon_AttachHand_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon.SimulatePhysicalBodyHit
// (Final, Native, Protected, HasOutParms, HasDefaults)
// Parameters:
// struct FHitResult              Impact                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 ShotDirection                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ATslWeapon::SimulatePhysicalBodyHit(const struct FHitResult& Impact, const struct FVector& ShotDirection)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16154);

	ATslWeapon_SimulatePhysicalBodyHit_Params params;
	params.Impact = Impact;
	params.ShotDirection = ShotDirection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon.ServerLogFireWeapon
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FAttackId               AttackId                       (Parm)

void ATslWeapon::ServerLogFireWeapon(const struct FAttackId& AttackId)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16152);

	ATslWeapon_ServerLogFireWeapon_Params params;
	params.AttackId = AttackId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon.OnRep_SkinData
// (Final, Native, Private)

void ATslWeapon::OnRep_SkinData()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16151);

	ATslWeapon_OnRep_SkinData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon.OnRep_MyPawn
// (Native, Protected)

void ATslWeapon::OnRep_MyPawn()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16150);

	ATslWeapon_OnRep_MyPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon.OnRep_AttachedItemClasses
// (Native, Protected, HasOutParms)
// Parameters:
// TArray<class UClass*>          OldVal                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void ATslWeapon::OnRep_AttachedItemClasses(TArray<class UClass*> OldVal)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16147);

	ATslWeapon_OnRep_AttachedItemClasses_Params params;
	params.OldVal = OldVal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon.OnAnimationNotify
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   NotifyName                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void ATslWeapon::OnAnimationNotify(const struct FName& NotifyName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16145);

	ATslWeapon_OnAnimationNotify_Params params;
	params.NotifyName = NotifyName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon.IsWeaponAttachedToShoulder
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslWeapon::IsWeaponAttachedToShoulder()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16143);

	ATslWeapon_IsWeaponAttachedToShoulder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon.IsCustomSightAttached
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EWeaponAttachmentSlotID        SlotID                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslWeapon::IsCustomSightAttached(EWeaponAttachmentSlotID SlotID)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16139);

	ATslWeapon_IsCustomSightAttached_Params params;
	params.SlotID = SlotID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon.GetWeaponReadyDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslWeapon::GetWeaponReadyDuration()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16137);

	ATslWeapon_GetWeaponReadyDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon.GetWeaponMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USkeletalMeshComponent* ATslWeapon::GetWeaponMesh()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16135);

	ATslWeapon_GetWeaponMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon.GetWeaponGripTypeLeft
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EWeaponGripLeftHand            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EWeaponGripLeftHand ATslWeapon::GetWeaponGripTypeLeft()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16132);

	ATslWeapon_GetWeaponGripTypeLeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon.GetWeaponEquipDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslWeapon::GetWeaponEquipDuration()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16130);

	ATslWeapon_GetWeaponEquipDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon.GetWeaponDamage
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslWeapon::GetWeaponDamage()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16128);

	ATslWeapon_GetWeaponDamage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon.GetWeaponConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FWeaponData             ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FWeaponData ATslWeapon::GetWeaponConfig()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16126);

	ATslWeapon_GetWeaponConfig_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon.GetWeaponClassEnum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EWeaponClass                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EWeaponClass ATslWeapon::GetWeaponClassEnum()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16123);

	ATslWeapon_GetWeaponClassEnum_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon.GetWeaponAttachmentPoint
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EWeaponAttachmentSlotID        SlotID                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   Tag                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName ATslWeapon::GetWeaponAttachmentPoint(EWeaponAttachmentSlotID SlotID, const struct FName& Tag)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16118);

	ATslWeapon_GetWeaponAttachmentPoint_Params params;
	params.SlotID = SlotID;
	params.Tag = Tag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon.GetWeaponAttachmentData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EWeaponAttachmentSlotID        SlotID                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FWeaponAttachmentData   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm)

struct FWeaponAttachmentData ATslWeapon::GetWeaponAttachmentData(EWeaponAttachmentSlotID SlotID)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16114);

	ATslWeapon_GetWeaponAttachmentData_Params params;
	params.SlotID = SlotID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon.GetWeaponAttachmentAssetDatas
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FWeaponAttachmentAssetData> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FWeaponAttachmentAssetData> ATslWeapon::GetWeaponAttachmentAssetDatas()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16111);

	ATslWeapon_GetWeaponAttachmentAssetDatas_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon.GetWeaponAttachmentAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EWeaponAttachmentSlotID        SlotID                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FWeaponAttachmentAssetData ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm)

struct FWeaponAttachmentAssetData ATslWeapon::GetWeaponAttachmentAsset(EWeaponAttachmentSlotID SlotID)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16107);

	ATslWeapon_GetWeaponAttachmentAsset_Params params;
	params.SlotID = SlotID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon.GetWeaponAnimationKick
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslWeapon::GetWeaponAnimationKick()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16105);

	ATslWeapon_GetWeaponAnimationKick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon.GetThrownType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EThrownWeaponType              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EThrownWeaponType ATslWeapon::GetThrownType()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16102);

	ATslWeapon_GetThrownType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon.GetSwayModifier
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ATslWeapon::GetSwayModifier()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16100);

	ATslWeapon_GetSwayModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon.GetStanceSwayModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAnimStance                    Stance                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslWeapon::GetStanceSwayModifier(EAnimStance Stance)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16096);

	ATslWeapon_GetStanceSwayModifier_Params params;
	params.Stance = Stance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon.GetRecoilMontage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimMontage*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimMontage* ATslWeapon::GetRecoilMontage()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16094);

	ATslWeapon_GetRecoilMontage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon.GetPawnOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslCharacter*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslCharacter* ATslWeapon::GetPawnOwner()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16092);

	ATslWeapon_GetPawnOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon.GetLowerRailOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ATslWeapon::GetLowerRailOffset()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16090);

	ATslWeapon_GetLowerRailOffset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon.GetItemName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText ATslWeapon::GetItemName()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16088);

	ATslWeapon_GetItemName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon.GetDoGripPose
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslWeapon::GetDoGripPose()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16086);

	ATslWeapon_GetDoGripPose_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon.GetAttachedMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UAsyncStaticMeshComponent*> ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UAsyncStaticMeshComponent*> ATslWeapon::GetAttachedMesh()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16083);

	ATslWeapon_GetAttachedMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon.GetAnimWeaponType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAnimWeaponType                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EAnimWeaponType ATslWeapon::GetAnimWeaponType()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16080);

	ATslWeapon_GetAnimWeaponType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon.GetAllWeaponAttachmentData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FWeaponAttachmentData> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FWeaponAttachmentData> ATslWeapon::GetAllWeaponAttachmentData()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16077);

	ATslWeapon_GetAllWeaponAttachmentData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon.GetAllWeaponAttachmentAssets
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FWeaponAttachmentAssetData> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FWeaponAttachmentAssetData> ATslWeapon::GetAllWeaponAttachmentAssets()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16074);

	ATslWeapon_GetAllWeaponAttachmentAssets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon.ClientInitByReconnection
// (Final, Net, NetReliable, Native, Event, Private, NetClient, NetValidate)
// Parameters:
// bool                           bIsArmed                       (Parm, ZeroConstructor, IsPlainOldData)

void ATslWeapon::ClientInitByReconnection(bool bIsArmed)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16072);

	ATslWeapon_ClientInitByReconnection_Params params;
	params.bIsArmed = bIsArmed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon.AttachWeaponToSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void ATslWeapon::AttachWeaponToSlot(int SlotIndex)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16070);

	ATslWeapon_AttachWeaponToSlot_Params params;
	params.SlotIndex = SlotIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon.AttachWeaponToMesh
// (Final, Native, Public, BlueprintCallable)

void ATslWeapon::AttachWeaponToMesh()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16069);

	ATslWeapon_AttachWeaponToMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.WeaponItem.SetFiringMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFiringMode                    fMode                          (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponItem::SetFiringMode(EFiringMode fMode)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16255);

	UWeaponItem_SetFiringMode_Params params;
	params.fMode = fMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.WeaponItem.IsAttachable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAttachableItem*         Item                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWeaponItem::IsAttachable(class UAttachableItem* Item)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16252);

	UWeaponItem_IsAttachable_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.WeaponItem.HasAttachmentSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EWeaponAttachmentSlotID        SlotID                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWeaponItem::HasAttachmentSlot(EWeaponAttachmentSlotID SlotID)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16248);

	UWeaponItem_HasAttachmentSlot_Params params;
	params.SlotID = SlotID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.WeaponItem.GetFiringMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFiringMode                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EFiringMode UWeaponItem::GetFiringMode()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16245);

	UWeaponItem_GetFiringMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.WeaponItem.GetEquippedWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslWeapon*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslWeapon* UWeaponItem::GetEquippedWeapon()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16243);

	UWeaponItem_GetEquippedWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.WeaponItem.GetDefaultWeaponObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslWeapon*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslWeapon* UWeaponItem::GetDefaultWeaponObject()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16241);

	UWeaponItem_GetDefaultWeaponObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.WeaponItem.GetAttachedItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EWeaponAttachmentSlotID        SlotID                         (Parm, ZeroConstructor, IsPlainOldData)
// class UAttachableItem*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAttachableItem* UWeaponItem::GetAttachedItem(EWeaponAttachmentSlotID SlotID)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16237);

	UWeaponItem_GetAttachedItem_Params params;
	params.SlotID = SlotID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.WeaponItem.GetAttachableItemCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UWeaponItem::GetAttachableItemCount()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16235);

	UWeaponItem_GetAttachableItemCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.WeaponItem.GetAllAttachedItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UAttachableItem*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UAttachableItem*> UWeaponItem::GetAllAttachedItems()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16232);

	UWeaponItem_GetAllAttachedItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.WeaponItem.DetachItem
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// EWeaponAttachmentSlotID        SlotID                         (Parm, ZeroConstructor, IsPlainOldData)
// class UAttachableItem*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAttachableItem* UWeaponItem::DetachItem(EWeaponAttachmentSlotID SlotID)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16228);

	UWeaponItem_DetachItem_Params params;
	params.SlotID = SlotID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.WeaponItem.AttachItem
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UAttachableItem*         Item                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWeaponItem::AttachItem(class UAttachableItem* Item)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16225);

	UWeaponItem_AttachItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.ItemSpawnProcessor.ProcessSpawnItem
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UItemSpotGroupComponent* Spawner                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UItemSpawnProcessor::ProcessSpawnItem(class UItemSpotGroupComponent* Spawner)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16287);

	UItemSpawnProcessor_ProcessSpawnItem_Params params;
	params.Spawner = Spawner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ItemSpawnProcessor.ProcessGroup
// (Native, Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// class UItemSpotGroupComponent* SpotGroup                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TArray<class UItemSpotComponent*> Spots                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UItemSpawnProcessor::ProcessGroup(class UItemSpotGroupComponent* SpotGroup, TArray<class UItemSpotComponent*> Spots)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16283);

	UItemSpawnProcessor_ProcessGroup_Params params;
	params.SpotGroup = SpotGroup;
	params.Spots = Spots;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ItemSpawnProcessor.CheckItemGroup
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class UItemSpotGroupComponent* SpotGroup                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UItemSpawnProcessor::CheckItemGroup(class UItemSpotGroupComponent* SpotGroup)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16280);

	UItemSpawnProcessor_CheckItemGroup_Params params;
	params.SpotGroup = SpotGroup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.ItemStudio.UpdateComponentToWorld
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMeshComponent*          Mesh                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AItemStudio::UpdateComponentToWorld(class UMeshComponent* Mesh)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16305);

	AItemStudio_UpdateComponentToWorld_Params params;
	params.Mesh = Mesh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ItemStudio.SetTextureRenderTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*  NewTextureTarget               (Parm, ZeroConstructor, IsPlainOldData)

void AItemStudio::SetTextureRenderTarget(class UTextureRenderTarget2D* NewTextureTarget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16303);

	AItemStudio_SetTextureRenderTarget_Params params;
	params.NewTextureTarget = NewTextureTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ItemStudio.SetItem
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UItem*                   Item                           (Parm, ZeroConstructor, IsPlainOldData)

void AItemStudio::SetItem(class UItem* Item)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16301);

	AItemStudio_SetItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ItemStudio.AddYaw
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void AItemStudio::AddYaw(float Value)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16299);

	AItemStudio_AddYaw_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ItemToolTipWidget.UpdateVicinityOrInventorySlotItemToolTip
// (Event, Public, BlueprintEvent)
// Parameters:
// class UEquipableItem*          EquipableItem                  (Parm, ZeroConstructor, IsPlainOldData)
// class UEquipableItem*          EquipmentSlotItem              (Parm, ZeroConstructor, IsPlainOldData)

void UItemToolTipWidget::UpdateVicinityOrInventorySlotItemToolTip(class UEquipableItem* EquipableItem, class UEquipableItem* EquipmentSlotItem)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16561);

	UItemToolTipWidget_UpdateVicinityOrInventorySlotItemToolTip_Params params;
	params.EquipableItem = EquipableItem;
	params.EquipmentSlotItem = EquipmentSlotItem;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ItemToolTipWidget.UpdateToolTipBySlotInterface
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class USlotInterface> SlotInterface                  (Parm, ZeroConstructor, IsPlainOldData)
// TScriptInterface<class USlotContainerInterface> Container                      (Parm, ZeroConstructor, IsPlainOldData)

void UItemToolTipWidget::UpdateToolTipBySlotInterface(const TScriptInterface<class USlotInterface>& SlotInterface, const TScriptInterface<class USlotContainerInterface>& Container)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16558);

	UItemToolTipWidget_UpdateToolTipBySlotInterface_Params params;
	params.SlotInterface = SlotInterface;
	params.Container = Container;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ItemToolTipWidget.UpdateSlotInfo
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TScriptInterface<class USlotInterface> SlotInterface                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UItemToolTipWidget::UpdateSlotInfo(const TScriptInterface<class USlotInterface>& SlotInterface)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16556);

	UItemToolTipWidget_UpdateSlotInfo_Params params;
	params.SlotInterface = SlotInterface;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ItemToolTipWidget.UpdateEquipmentSlotItemToolTip
// (Event, Public, BlueprintEvent)
// Parameters:
// class UEquipableItem*          EquipableItem                  (Parm, ZeroConstructor, IsPlainOldData)

void UItemToolTipWidget::UpdateEquipmentSlotItemToolTip(class UEquipableItem* EquipableItem)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16554);

	UItemToolTipWidget_UpdateEquipmentSlotItemToolTip_Params params;
	params.EquipableItem = EquipableItem;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyWidget.GameStateChanging
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FName                   NewState                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   OldState                       (Parm, ZeroConstructor, IsPlainOldData)

void ULobbyWidget::GameStateChanging(const struct FName& NewState, const struct FName& OldState)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16568);

	ULobbyWidget_GameStateChanging_Params params;
	params.NewState = NewState;
	params.OldState = OldState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.MatchPreparer.TimerGameStartCountDown
// (Native, Protected)

void UMatchPreparer::TimerGameStartCountDown()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16571);

	UMatchPreparer_TimerGameStartCountDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.AirborneMatchPreparer.AllowDealDamage
// (Final, Native, Private)

void UAirborneMatchPreparer::AllowDealDamage()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16574);

	UAirborneMatchPreparer_AllowDealDamage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ModeController.SendSystemMessageToAll
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESystemMessageType             MessageType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   Message                        (Parm)
// float                          MessageDuration                (Parm, ZeroConstructor, IsPlainOldData)

void AModeController::SendSystemMessageToAll(ESystemMessageType MessageType, const struct FText& Message, float MessageDuration)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16680);

	AModeController_SendSystemMessageToAll_Params params;
	params.MessageType = MessageType;
	params.Message = Message;
	params.MessageDuration = MessageDuration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ModeController.IsPlayInEditor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AModeController::IsPlayInEditor()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16678);

	AModeController_IsPlayInEditor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.ModeController.HandleServerAdminBlueprint
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FString                 AdminCommand                   (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AModeController::HandleServerAdminBlueprint(const struct FString& AdminCommand)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16675);

	AModeController_HandleServerAdminBlueprint_Params params;
	params.AdminCommand = AdminCommand;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.ModeController.GetGameState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslGameState*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslGameState* AModeController::GetGameState()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16673);

	AModeController_GetGameState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.ModeController.GetGameMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslGameMode*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslGameMode* AModeController::GetGameMode()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16671);

	AModeController_GetGameMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.ModeController.CanDealDamage
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class ATslPlayerState*         DamageInstigator               (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class ATslPlayerState*         DamagedPlayer                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AModeController::CanDealDamage(class ATslPlayerState* DamageInstigator, class ATslPlayerState* DamagedPlayer)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16667);

	AModeController_CanDealDamage_Params params;
	params.DamageInstigator = DamageInstigator;
	params.DamagedPlayer = DamagedPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.BattleRoyaleModeController.SetNextGasInBlackboard
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ABattleRoyaleModeController::SetNextGasInBlackboard()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16693);

	ABattleRoyaleModeController_SetNextGasInBlackboard_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.BattleRoyaleModeController.InitRadius
// (Final, Native, Public, BlueprintCallable)

void ABattleRoyaleModeController::InitRadius()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16692);

	ABattleRoyaleModeController_InitRadius_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.BattleRoyaleModeController.GetPoisonGasDamagePerSecond
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          CharaterToCenterDistance       (Parm, ZeroConstructor, IsPlainOldData)
// float                          SafetyZoneRadius               (Parm, ZeroConstructor, IsPlainOldData)
// float                          PoisonGasWarningRadius         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ABattleRoyaleModeController::GetPoisonGasDamagePerSecond(float CharaterToCenterDistance, float SafetyZoneRadius, float PoisonGasWarningRadius)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16687);

	ABattleRoyaleModeController_GetPoisonGasDamagePerSecond_Params params;
	params.CharaterToCenterDistance = CharaterToCenterDistance;
	params.SafetyZoneRadius = SafetyZoneRadius;
	params.PoisonGasWarningRadius = PoisonGasWarningRadius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.BattleRoyaleModeController.GetMaxPhaseCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ABattleRoyaleModeController::GetMaxPhaseCount()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16685);

	ABattleRoyaleModeController_GetMaxPhaseCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CarePackageController.SpawnAircraftCarePackageCustom
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 DropLocation                   (Parm, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ACarePackageController::SpawnAircraftCarePackageCustom(const struct FVector& DropLocation)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16718);

	ACarePackageController_SpawnAircraftCarePackageCustom_Params params;
	params.DropLocation = DropLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CarePackageController.SpawnAircraftCarePackage
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// bool                           CopyIntersectionInfo           (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ACarePackageController::SpawnAircraftCarePackage(bool CopyIntersectionInfo)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16715);

	ACarePackageController_SpawnAircraftCarePackage_Params params;
	params.CopyIntersectionInfo = CopyIntersectionInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CarePackageController.SetNextCarePackageInBlackboard
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACarePackageController::SetNextCarePackageInBlackboard()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16713);

	ACarePackageController_SetNextCarePackageInBlackboard_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CarePackageController.InitCarePackageSetting
// (Final, Native, Public, BlueprintCallable)

void ACarePackageController::InitCarePackageSetting()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16712);

	ACarePackageController_InitCarePackageSetting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.CarePackageController.GetSpawnInterval
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ACarePackageController::GetSpawnInterval()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16710);

	ACarePackageController_GetSpawnInterval_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.RedZoneController.SpawnBombProjectile
// (Final, Native, Public, BlueprintCallable)

void ARedZoneController::SpawnBombProjectile()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16735);

	ARedZoneController_SpawnBombProjectile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.RedZoneController.SetNextRedZoneInBlackboard
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ARedZoneController::SetNextRedZoneInBlackboard()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16733);

	ARedZoneController_SetNextRedZoneInBlackboard_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.RedZoneController.OnBombingStart
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 RedZonePosition                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ARedZoneController::OnBombingStart(const struct FVector& RedZonePosition)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16731);

	ARedZoneController_OnBombingStart_Params params;
	params.RedZonePosition = RedZonePosition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.RedZoneController.InitRedZoneSetting
// (Final, Native, Public, BlueprintCallable)

void ARedZoneController::InitRedZoneSetting()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16730);

	ARedZoneController_InitRedZoneSetting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.RedZoneController.GetRandomBombingInterval
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ARedZoneController::GetRandomBombingInterval()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16728);

	ARedZoneController_GetRandomBombingInterval_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.MutableCharacter.UpdateAppearence
// (Final, Native, Public, BlueprintCallable)

void AMutableCharacter::UpdateAppearence()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16947);

	AMutableCharacter_UpdateAppearence_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.MutableCharacter.OnRep_InstanceDescriptor
// (Final, Native, Protected)

void AMutableCharacter::OnRep_InstanceDescriptor()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16946);

	AMutableCharacter_OnRep_InstanceDescriptor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.MutableCharacter.GetGender
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGender                        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EGender AMutableCharacter::GetGender()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16943);

	AMutableCharacter_GetGender_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.LobbyCharacter.GetSlotId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ALobbyCharacter::GetSlotId()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16958);

	ALobbyCharacter_GetSlotId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.LobbyCharacter.GetNickName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ALobbyCharacter::GetNickName()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16956);

	ALobbyCharacter_GetNickName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.LobbyCharacter.GetNetId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ALobbyCharacter::GetNetId()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16954);

	ALobbyCharacter_GetNetId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslVaultingHelper.GetActorAttachScene
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ATslVaultingHelper::GetActorAttachScene()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16967);

	ATslVaultingHelper_GetActorAttachScene_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.WeaponCycleDone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslWeapon_Gun::WeaponCycleDone()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17129);

	ATslWeapon_Gun_WeaponCycleDone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.StopReloadAnimByOne
// (Net, NetReliable, Native, Event, NetMulticast, Protected)

void ATslWeapon_Gun::StopReloadAnimByOne()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17128);

	ATslWeapon_Gun_StopReloadAnimByOne_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.StartManualFireCycle
// (Final, Native, Protected)

void ATslWeapon_Gun::StartManualFireCycle()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17127);

	ATslWeapon_Gun_StartManualFireCycle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.SimulateWeaponReload
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// EWeaponReloadAnimExec          ReloadAnimExec                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void ATslWeapon_Gun::SimulateWeaponReload(EWeaponReloadAnimExec ReloadAnimExec)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17124);

	ATslWeapon_Gun_SimulateWeaponReload_Params params;
	params.ReloadAnimExec = ReloadAnimExec;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.SetWeaponReloadInterrupted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bIsInterrupted                 (Parm, ZeroConstructor, IsPlainOldData)

void ATslWeapon_Gun::SetWeaponReloadInterrupted(bool bIsInterrupted)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17122);

	ATslWeapon_Gun_SetWeaponReloadInterrupted_Params params;
	params.bIsInterrupted = bIsInterrupted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.SetSpawnBulletFromBarrel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           DoSpawnBulletFromBarrel        (Parm, ZeroConstructor, IsPlainOldData)

void ATslWeapon_Gun::SetSpawnBulletFromBarrel(bool DoSpawnBulletFromBarrel)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17120);

	ATslWeapon_Gun_SetSpawnBulletFromBarrel_Params params;
	params.DoSpawnBulletFromBarrel = DoSpawnBulletFromBarrel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.SetFiringMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFiringMode                    FiringMode                     (Parm, ZeroConstructor, IsPlainOldData)

void ATslWeapon_Gun::SetFiringMode(EFiringMode FiringMode)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17117);

	ATslWeapon_Gun_SetFiringMode_Params params;
	params.FiringMode = FiringMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.ServerStopReload
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void ATslWeapon_Gun::ServerStopReload()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17116);

	ATslWeapon_Gun_ServerStopReload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.ServerStopFire
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void ATslWeapon_Gun::ServerStopFire()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17115);

	ATslWeapon_Gun_ServerStopFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.ServerStartReload
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void ATslWeapon_Gun::ServerStartReload()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17114);

	ATslWeapon_Gun_ServerStartReload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.ServerStartFire
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void ATslWeapon_Gun::ServerStartFire()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17113);

	ATslWeapon_Gun_ServerStartFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.ServerSetHip
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                           bNewIsHipped                   (Parm, ZeroConstructor, IsPlainOldData)

void ATslWeapon_Gun::ServerSetHip(bool bNewIsHipped)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17111);

	ATslWeapon_Gun_ServerSetHip_Params params;
	params.bNewIsHipped = bNewIsHipped;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.ServerSetCurrentZeroLevel
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int                            ZeroLevel                      (Parm, ZeroConstructor, IsPlainOldData)

void ATslWeapon_Gun::ServerSetCurrentZeroLevel(int ZeroLevel)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17109);

	ATslWeapon_Gun_ServerSetCurrentZeroLevel_Params params;
	params.ZeroLevel = ZeroLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.ServerHandleFiring
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FHitResult              ExceptTrajectoryHitResult      (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ATslWeapon_Gun::ServerHandleFiring(const struct FHitResult& ExceptTrajectoryHitResult)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17107);

	ATslWeapon_Gun_ServerHandleFiring_Params params;
	params.ExceptTrajectoryHitResult = ExceptTrajectoryHitResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.ServerCancelReload
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ATslWeapon_Gun::ServerCancelReload()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17106);

	ATslWeapon_Gun_ServerCancelReload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.Server_StartManualFireCycle
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void ATslWeapon_Gun::Server_StartManualFireCycle()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17105);

	ATslWeapon_Gun_Server_StartManualFireCycle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.ProcessBoltAction
// (Final, Native, Protected)

void ATslWeapon_Gun::ProcessBoltAction()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17104);

	ATslWeapon_Gun_ProcessBoltAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.PlayWeaponCycleCameraAnim
// (Final, Native, Protected)

void ATslWeapon_Gun::PlayWeaponCycleCameraAnim()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17103);

	ATslWeapon_Gun_PlayWeaponCycleCameraAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.PlayLongTailSound
// (Final, Native, Protected)

void ATslWeapon_Gun::PlayLongTailSound()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17102);

	ATslWeapon_Gun_PlayLongTailSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.OnRep_TimeBetweenShots
// (Final, Native, Protected)
// Parameters:
// float                          LastTimeBetweenShots           (Parm, ZeroConstructor, IsPlainOldData)

void ATslWeapon_Gun::OnRep_TimeBetweenShots(float LastTimeBetweenShots)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17100);

	ATslWeapon_Gun_OnRep_TimeBetweenShots_Params params;
	params.LastTimeBetweenShots = LastTimeBetweenShots;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.OnRep_MyPawn
// (Native, Protected)

void ATslWeapon_Gun::OnRep_MyPawn()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17099);

	ATslWeapon_Gun_OnRep_MyPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.OnRep_FiringModeIndex
// (Final, Native, Public)

void ATslWeapon_Gun::OnRep_FiringModeIndex()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17098);

	ATslWeapon_Gun_OnRep_FiringModeIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.OnRep_CurrentZeroLevel
// (Final, Native, Protected)
// Parameters:
// int                            LastCurrentZeroLevel           (Parm, ZeroConstructor, IsPlainOldData)

void ATslWeapon_Gun::OnRep_CurrentZeroLevel(int LastCurrentZeroLevel)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17096);

	ATslWeapon_Gun_OnRep_CurrentZeroLevel_Params params;
	params.LastCurrentZeroLevel = LastCurrentZeroLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.OnRep_AttachedItemClasses
// (Native, Protected, HasOutParms)
// Parameters:
// TArray<class UClass*>          OldVal                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void ATslWeapon_Gun::OnRep_AttachedItemClasses(TArray<class UClass*> OldVal)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17093);

	ATslWeapon_Gun_OnRep_AttachedItemClasses_Params params;
	params.OldVal = OldVal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.OnRep_AmmoCount
// (Final, Native, Protected)
// Parameters:
// int                            LastCurrentAmmoInClip          (Parm, ZeroConstructor, IsPlainOldData)

void ATslWeapon_Gun::OnRep_AmmoCount(int LastCurrentAmmoInClip)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17091);

	ATslWeapon_Gun_OnRep_AmmoCount_Params params;
	params.LastCurrentAmmoInClip = LastCurrentAmmoInClip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.OnInventoryUpdated
// (Final, Native, Protected)

void ATslWeapon_Gun::OnInventoryUpdated()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17090);

	ATslWeapon_Gun_OnInventoryUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.OnAttachmentScopeLoaded
// (Final, Native, Protected)

void ATslWeapon_Gun::OnAttachmentScopeLoaded()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17089);

	ATslWeapon_Gun_OnAttachmentScopeLoaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.OnAnimationNotify
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   NotifyName                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void ATslWeapon_Gun::OnAnimationNotify(const struct FName& NotifyName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17087);

	ATslWeapon_Gun_OnAnimationNotify_Params params;
	params.NotifyName = NotifyName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.ManualFireCycleFinished
// (Final, Native, Protected)

void ATslWeapon_Gun::ManualFireCycleFinished()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17086);

	ATslWeapon_Gun_ManualFireCycleFinished_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.IsWeaponCycleInProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslWeapon_Gun::IsWeaponCycleInProgress()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17084);

	ATslWeapon_Gun_IsWeaponCycleInProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.IsReloadInterrupted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslWeapon_Gun::IsReloadInterrupted()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17082);

	ATslWeapon_Gun_IsReloadInterrupted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.IsReloading
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslWeapon_Gun::IsReloading()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17080);

	ATslWeapon_Gun_IsReloading_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetWeaponTacticalReload
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimMontage*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimMontage* ATslWeapon_Gun::GetWeaponTacticalReload()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17078);

	ATslWeapon_Gun_GetWeaponTacticalReload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetWeaponPostprocessSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FWeaponPPSettings       ReturnValue                    (Parm, OutParm, ReturnParm)

struct FWeaponPPSettings ATslWeapon_Gun::GetWeaponPostprocessSettings()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17076);

	ATslWeapon_Gun_GetWeaponPostprocessSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetWeaponOrScopePostprocessSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FWeaponPPSettings       ReturnValue                    (Parm, OutParm, ReturnParm)

struct FWeaponPPSettings ATslWeapon_Gun::GetWeaponOrScopePostprocessSettings()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17074);

	ATslWeapon_Gun_GetWeaponOrScopePostprocessSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetWeaponHandOffsetFPP
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ATslWeapon_Gun::GetWeaponHandOffsetFPP()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17072);

	ATslWeapon_Gun_GetWeaponHandOffsetFPP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetWeaponHandOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ATslWeapon_Gun::GetWeaponHandOffset()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17070);

	ATslWeapon_Gun_GetWeaponHandOffset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetWeaponGunConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FWeaponGunData          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FWeaponGunData ATslWeapon_Gun::GetWeaponGunConfig()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17068);

	ATslWeapon_Gun_GetWeaponGunConfig_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetWeaponGunAnimConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FWeaponGunAnim          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FWeaponGunAnim ATslWeapon_Gun::GetWeaponGunAnimConfig()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17066);

	ATslWeapon_Gun_GetWeaponGunAnimConfig_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetWeaponFullReloadTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslWeapon_Gun::GetWeaponFullReloadTime()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17064);

	ATslWeapon_Gun_GetWeaponFullReloadTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetWeaponFullRealoadTimeWithAttachments
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslWeapon_Gun::GetWeaponFullRealoadTimeWithAttachments()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17062);

	ATslWeapon_Gun_GetWeaponFullRealoadTimeWithAttachments_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetWeaponCurrentRecoilValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslWeapon_Gun::GetWeaponCurrentRecoilValue()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17060);

	ATslWeapon_Gun_GetWeaponCurrentRecoilValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetWeaponCurrentDeviationValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslWeapon_Gun::GetWeaponCurrentDeviationValue()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17058);

	ATslWeapon_Gun_GetWeaponCurrentDeviationValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetWeaponChargeReload
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimMontage*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimMontage* ATslWeapon_Gun::GetWeaponChargeReload()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17056);

	ATslWeapon_Gun_GetWeaponChargeReload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetReloadAnimationPlayRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslWeapon_Gun::GetReloadAnimationPlayRate()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17054);

	ATslWeapon_Gun_GetReloadAnimationPlayRate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetRecoilADSSocketOffsetScale
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ATslWeapon_Gun::GetRecoilADSSocketOffsetScale()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17052);

	ATslWeapon_Gun_GetRecoilADSSocketOffsetScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetNumOfFiringMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ATslWeapon_Gun::GetNumOfFiringMode()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17050);

	ATslWeapon_Gun_GetNumOfFiringMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetMovementModifierScope
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslWeapon_Gun::GetMovementModifierScope()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17048);

	ATslWeapon_Gun_GetMovementModifierScope_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetMovementModifierAim
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslWeapon_Gun::GetMovementModifierAim()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17046);

	ATslWeapon_Gun_GetMovementModifierAim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetMaxAmmo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ATslWeapon_Gun::GetMaxAmmo()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17044);

	ATslWeapon_Gun_GetMaxAmmo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetMagOutDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslWeapon_Gun::GetMagOutDuration()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17042);

	ATslWeapon_Gun_GetMagOutDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetMagDropLinearVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ATslWeapon_Gun::GetMagDropLinearVelocity()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17040);

	ATslWeapon_Gun_GetMagDropLinearVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetMagDropAngularVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ATslWeapon_Gun::GetMagDropAngularVelocity()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17038);

	ATslWeapon_Gun_GetMagDropAngularVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetGripTypeIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ATslWeapon_Gun::GetGripTypeIndex()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17036);

	ATslWeapon_Gun_GetGripTypeIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetFiringMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFiringMode                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EFiringMode ATslWeapon_Gun::GetFiringMode()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17033);

	ATslWeapon_Gun_GetFiringMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetDefaultAmmoObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAmmoItem*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAmmoItem* ATslWeapon_Gun::GetDefaultAmmoObject()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17031);

	ATslWeapon_Gun_GetDefaultAmmoObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetCurrentDeviation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslWeapon_Gun::GetCurrentDeviation()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17029);

	ATslWeapon_Gun_GetCurrentDeviation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetCurrentAmmoInInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ATslWeapon_Gun::GetCurrentAmmoInInventory()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17027);

	ATslWeapon_Gun_GetCurrentAmmoInInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetCurrentAmmoInClip
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ATslWeapon_Gun::GetCurrentAmmoInClip()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17025);

	ATslWeapon_Gun_GetCurrentAmmoInClip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetCurrentAmmo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ATslWeapon_Gun::GetCurrentAmmo()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17023);

	ATslWeapon_Gun_GetCurrentAmmo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetCharacterTacticalReloadFromAttach
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimMontage*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimMontage* ATslWeapon_Gun::GetCharacterTacticalReloadFromAttach()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17021);

	ATslWeapon_Gun_GetCharacterTacticalReloadFromAttach_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetCharacterReloadTacticalMontage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimMontage*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimMontage* ATslWeapon_Gun::GetCharacterReloadTacticalMontage()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17019);

	ATslWeapon_Gun_GetCharacterReloadTacticalMontage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetCharacterReloadChargeMontage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimMontage*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimMontage* ATslWeapon_Gun::GetCharacterReloadChargeMontage()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17017);

	ATslWeapon_Gun_GetCharacterReloadChargeMontage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetCharacterReloadByOneStopMontage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimMontage*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimMontage* ATslWeapon_Gun::GetCharacterReloadByOneStopMontage()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17015);

	ATslWeapon_Gun_GetCharacterReloadByOneStopMontage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetCharacterReloadByOneStartMontage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimMontage*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimMontage* ATslWeapon_Gun::GetCharacterReloadByOneStartMontage()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17013);

	ATslWeapon_Gun_GetCharacterReloadByOneStartMontage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetCharacterReloadByOneSingleMontage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimMontage*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimMontage* ATslWeapon_Gun::GetCharacterReloadByOneSingleMontage()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17011);

	ATslWeapon_Gun_GetCharacterReloadByOneSingleMontage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetCharacterLHGripBlendspace
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBlendSpaceBase*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UBlendSpaceBase* ATslWeapon_Gun::GetCharacterLHGripBlendspace()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17009);

	ATslWeapon_Gun_GetCharacterLHGripBlendspace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetCharacterGripBlendspace
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBlendSpace1D*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UBlendSpace1D* ATslWeapon_Gun::GetCharacterGripBlendspace()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17007);

	ATslWeapon_Gun_GetCharacterGripBlendspace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetCharacterFireSelectorMontage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimMontage*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimMontage* ATslWeapon_Gun::GetCharacterFireSelectorMontage()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17005);

	ATslWeapon_Gun_GetCharacterFireSelectorMontage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetCharacterFireMontage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimMontage*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimMontage* ATslWeapon_Gun::GetCharacterFireMontage()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17003);

	ATslWeapon_Gun_GetCharacterFireMontage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetCharacterFireCycle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimMontage*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimMontage* ATslWeapon_Gun::GetCharacterFireCycle()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17001);

	ATslWeapon_Gun_GetCharacterFireCycle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetCharacterChargeReloadFromAttach
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimMontage*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimMontage* ATslWeapon_Gun::GetCharacterChargeReloadFromAttach()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16999);

	ATslWeapon_Gun_GetCharacterChargeReloadFromAttach_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetAmmoPerClip
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ATslWeapon_Gun::GetAmmoPerClip()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16997);

	ATslWeapon_Gun_GetAmmoPerClip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetAmmoItemClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* ATslWeapon_Gun::GetAmmoItemClass()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16995);

	ATslWeapon_Gun_GetAmmoItemClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.GetADSRecoilKick
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslWeapon_Gun::GetADSRecoilKick()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16993);

	ATslWeapon_Gun_GetADSRecoilKick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.ClientStopSimulatingWeaponFire
// (Net, Native, Event, NetMulticast, Protected)

void ATslWeapon_Gun::ClientStopSimulatingWeaponFire()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16992);

	ATslWeapon_Gun_ClientStopSimulatingWeaponFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.ClientSimulateWeaponFire
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// struct FHitResult              ExceptTrajectoryHitResult      (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ATslWeapon_Gun::ClientSimulateWeaponFire(const struct FHitResult& ExceptTrajectoryHitResult)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16990);

	ATslWeapon_Gun_ClientSimulateWeaponFire_Params params;
	params.ExceptTrajectoryHitResult = ExceptTrajectoryHitResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.ClientSetFiringMode
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// EFiringMode                    FiringMode                     (Parm, ZeroConstructor, IsPlainOldData)

void ATslWeapon_Gun::ClientSetFiringMode(EFiringMode FiringMode)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16987);

	ATslWeapon_Gun_ClientSetFiringMode_Params params;
	params.FiringMode = FiringMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.ClientNotifyStopReloadByOne
// (Net, NetReliable, Native, Event, NetMulticast, Protected)

void ATslWeapon_Gun::ClientNotifyStopReloadByOne()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16986);

	ATslWeapon_Gun_ClientNotifyStopReloadByOne_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.ClientNotifyOutOfAmmo
// (Net, NetReliable, Native, Event, NetMulticast, Protected, NetClient, NetValidate)

void ATslWeapon_Gun::ClientNotifyOutOfAmmo()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16985);

	ATslWeapon_Gun_ClientNotifyOutOfAmmo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.ClientNotifyAmmo
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// int                            InCurrentAmmoInClip            (Parm, ZeroConstructor, IsPlainOldData)

void ATslWeapon_Gun::ClientNotifyAmmo(int InCurrentAmmoInClip)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16983);

	ATslWeapon_Gun_ClientNotifyAmmo_Params params;
	params.InCurrentAmmoInClip = InCurrentAmmoInClip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.ClientCancelReload
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ATslWeapon_Gun::ClientCancelReload()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16982);

	ATslWeapon_Gun_ClientCancelReload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.Client_StartManualFireCycle
// (Net, NetReliable, Native, Event, NetMulticast, Protected)

void ATslWeapon_Gun::Client_StartManualFireCycle()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16981);

	ATslWeapon_Gun_Client_StartManualFireCycle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.CheckMiddlePointCollision
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslWeapon_Gun::CheckMiddlePointCollision()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16979);

	ATslWeapon_Gun_CheckMiddlePointCollision_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Gun.CancelReloadImpl
// (Final, Native, Public)

void ATslWeapon_Gun::CancelReloadImpl()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16978);

	ATslWeapon_Gun_CancelReloadImpl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.BroadcastOutOfAmmo
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void ATslWeapon_Gun::BroadcastOutOfAmmo()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16977);

	ATslWeapon_Gun_BroadcastOutOfAmmo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.AnimCall_ToggleFireMode
// (Final, Native, Public, BlueprintCallable)

void ATslWeapon_Gun::AnimCall_ToggleFireMode()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16976);

	ATslWeapon_Gun_AnimCall_ToggleFireMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.AnimCall_ReloadTacticalWeapon
// (Final, Native, Public, BlueprintCallable)

void ATslWeapon_Gun::AnimCall_ReloadTacticalWeapon()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16975);

	ATslWeapon_Gun_AnimCall_ReloadTacticalWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.AnimCall_ReloadChargeWeapon
// (Final, Native, Public, BlueprintCallable)

void ATslWeapon_Gun::AnimCall_ReloadChargeWeapon()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16974);

	ATslWeapon_Gun_AnimCall_ReloadChargeWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.AnimCall_ReloadByOneStop
// (Final, Native, Public, BlueprintCallable)

void ATslWeapon_Gun::AnimCall_ReloadByOneStop()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16973);

	ATslWeapon_Gun_AnimCall_ReloadByOneStop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.AnimCall_FireWeaponCycle
// (Final, Native, Public, BlueprintCallable)

void ATslWeapon_Gun::AnimCall_FireWeaponCycle()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16972);

	ATslWeapon_Gun_AnimCall_FireWeaponCycle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun.AnimCall_FireWeapon
// (Final, Native, Public, BlueprintCallable)

void ATslWeapon_Gun::AnimCall_FireWeapon()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(16971);

	ATslWeapon_Gun_AnimCall_FireWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VehicleSeatActor.OnRep_Rider
// (Final, Native, Private)

void AVehicleSeatActor::OnRep_Rider()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17188);

	AVehicleSeatActor_OnRep_Rider_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VehicleSeatActor.IsWeaponClassAllowed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EWeaponClass                   InClass                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AVehicleSeatActor::IsWeaponClassAllowed(EWeaponClass InClass)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17184);

	AVehicleSeatActor_IsWeaponClassAllowed_Params params;
	params.InClass = InClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatActor.IsEntryAllowedByVelocity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AVehicleSeatActor::IsEntryAllowedByVelocity()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17182);

	AVehicleSeatActor_IsEntryAllowedByVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatActor.GetVehicleSeatComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTslVehicleSeatComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UTslVehicleSeatComponent* AVehicleSeatActor::GetVehicleSeatComponent()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17180);

	AVehicleSeatActor_GetVehicleSeatComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatActor.GetVehiclePawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APawn*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APawn* AVehicleSeatActor::GetVehiclePawn()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17178);

	AVehicleSeatActor_GetVehiclePawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatActor.GetVehicleInterface
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class UTslVehicleInterface> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TScriptInterface<class UTslVehicleInterface> AVehicleSeatActor::GetVehicleInterface()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17176);

	AVehicleSeatActor_GetVehicleInterface_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatActor.GetVehicleAnimType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EVehicleAnimType               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EVehicleAnimType AVehicleSeatActor::GetVehicleAnimType()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17173);

	AVehicleSeatActor_GetVehicleAnimType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatActor.GetTransitionOutBlendspace
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBlendSpaceBase*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UBlendSpaceBase* AVehicleSeatActor::GetTransitionOutBlendspace()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17171);

	AVehicleSeatActor_GetTransitionOutBlendspace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatActor.GetTransitionInBlendspace
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBlendSpaceBase*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UBlendSpaceBase* AVehicleSeatActor::GetTransitionInBlendspace()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17169);

	AVehicleSeatActor_GetTransitionInBlendspace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatActor.GetSeatIdleAO
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAimOffsetBlendSpace*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAimOffsetBlendSpace* AVehicleSeatActor::GetSeatIdleAO()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17167);

	AVehicleSeatActor_GetSeatIdleAO_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatActor.GetSeatIdleAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequenceBase*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimSequenceBase* AVehicleSeatActor::GetSeatIdleAnimation()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17165);

	AVehicleSeatActor_GetSeatIdleAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatActor.GetSeatAimingBlendspace
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBlendSpaceBase*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UBlendSpaceBase* AVehicleSeatActor::GetSeatAimingBlendspace()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17163);

	AVehicleSeatActor_GetSeatAimingBlendspace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatActor.GetRider
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslCharacter*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslCharacter* AVehicleSeatActor::GetRider()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17161);

	AVehicleSeatActor_GetRider_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatActor.GetMinPitchByYaw
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          CurrentYaw                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AVehicleSeatActor::GetMinPitchByYaw(float CurrentYaw)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17158);

	AVehicleSeatActor_GetMinPitchByYaw_Params params;
	params.CurrentYaw = CurrentYaw;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatActor.GetMaxPitchByYaw
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          CurrentYaw                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AVehicleSeatActor::GetMaxPitchByYaw(float CurrentYaw)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17155);

	AVehicleSeatActor_GetMaxPitchByYaw_Params params;
	params.CurrentYaw = CurrentYaw;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatActor.GetCanFireOnlyWhileAimed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AVehicleSeatActor::GetCanFireOnlyWhileAimed()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17153);

	AVehicleSeatActor_GetCanFireOnlyWhileAimed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatActor.GetAdditionalMessage
// (Final, Native, Public)
// Parameters:
// class ATslCharacter*           Character                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText AVehicleSeatActor::GetAdditionalMessage(class ATslCharacter* Character)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17150);

	AVehicleSeatActor_GetAdditionalMessage_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatActor.AllowInteract
// (Final, Native, Protected)
// Parameters:
// class ATslCharacter*           OtherCharacter                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AVehicleSeatActor::AllowInteract(class ATslCharacter* OtherCharacter)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17147);

	AVehicleSeatActor_AllowInteract_Params params;
	params.OtherCharacter = OtherCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.WeaponProcessor.SimulateUnArmWeapon
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// int                            WeaponIndex                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bNeedAnimation                 (Parm, ZeroConstructor, IsPlainOldData)

void AWeaponProcessor::SimulateUnArmWeapon(int WeaponIndex, bool bNeedAnimation)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17252);

	AWeaponProcessor_SimulateUnArmWeapon_Params params;
	params.WeaponIndex = WeaponIndex;
	params.bNeedAnimation = bNeedAnimation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.WeaponProcessor.SimulateArmWeapon
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// int                            WeaponIndex                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bNeedAnimation                 (Parm, ZeroConstructor, IsPlainOldData)

void AWeaponProcessor::SimulateArmWeapon(int WeaponIndex, bool bNeedAnimation)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17249);

	AWeaponProcessor_SimulateArmWeapon_Params params;
	params.WeaponIndex = WeaponIndex;
	params.bNeedAnimation = bNeedAnimation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.WeaponProcessor.ServerUnarmCurrentWeapon
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                           bNeedAnimation                 (Parm, ZeroConstructor, IsPlainOldData)

void AWeaponProcessor::ServerUnarmCurrentWeapon(bool bNeedAnimation)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17247);

	AWeaponProcessor_ServerUnarmCurrentWeapon_Params params;
	params.bNeedAnimation = bNeedAnimation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.WeaponProcessor.ServerArmWeapon
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int                            WeaponIndex                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bNeedAnimation                 (Parm, ZeroConstructor, IsPlainOldData)

void AWeaponProcessor::ServerArmWeapon(int WeaponIndex, bool bNeedAnimation)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17244);

	AWeaponProcessor_ServerArmWeapon_Params params;
	params.WeaponIndex = WeaponIndex;
	params.bNeedAnimation = bNeedAnimation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.WeaponProcessor.OnRep_EquippedWeapons
// (Final, Native, Protected)
// Parameters:
// TArray<class ATslWeapon*>      LastEquippedWeapons            (Parm, ZeroConstructor)

void AWeaponProcessor::OnRep_EquippedWeapons(TArray<class ATslWeapon*> LastEquippedWeapons)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17241);

	AWeaponProcessor_OnRep_EquippedWeapons_Params params;
	params.LastEquippedWeapons = LastEquippedWeapons;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.WeaponProcessor.OnRep_CurrentWeaponIndex
// (Final, Native, Protected)

void AWeaponProcessor::OnRep_CurrentWeaponIndex()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17240);

	AWeaponProcessor_OnRep_CurrentWeaponIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.WeaponProcessor.NotifyWeaponUpdate
// (Final, Native, Private)

void AWeaponProcessor::NotifyWeaponUpdate()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17239);

	AWeaponProcessor_NotifyWeaponUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.WeaponProcessor.IsUnarmedWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            WeaponIndex                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AWeaponProcessor::IsUnarmedWeapon(int WeaponIndex)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17236);

	AWeaponProcessor_IsUnarmedWeapon_Params params;
	params.WeaponIndex = WeaponIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.WeaponProcessor.IsUnarmed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AWeaponProcessor::IsUnarmed()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17234);

	AWeaponProcessor_IsUnarmed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.WeaponProcessor.GetWeaponThrowable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslWeapon_Throwable*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslWeapon_Throwable* AWeaponProcessor::GetWeaponThrowable()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17232);

	AWeaponProcessor_GetWeaponThrowable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.WeaponProcessor.GetWeaponIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AWeaponProcessor::GetWeaponIndex()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17230);

	AWeaponProcessor_GetWeaponIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.WeaponProcessor.GetWeaponGun
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslWeapon_Gun*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslWeapon_Gun* AWeaponProcessor::GetWeaponGun()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17228);

	AWeaponProcessor_GetWeaponGun_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.WeaponProcessor.GetWeaponByIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// class ATslWeapon*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslWeapon* AWeaponProcessor::GetWeaponByIndex(int Index)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17225);

	AWeaponProcessor_GetWeaponByIndex_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.WeaponProcessor.GetWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslWeapon*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslWeapon* AWeaponProcessor::GetWeapon()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17223);

	AWeaponProcessor_GetWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.WeaponProcessor.GetUnarmedWeaponIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AWeaponProcessor::GetUnarmedWeaponIndex()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17221);

	AWeaponProcessor_GetUnarmedWeaponIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.WeaponProcessor.GetCurrentWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslWeapon*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslWeapon* AWeaponProcessor::GetCurrentWeapon()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17219);

	AWeaponProcessor_GetCurrentWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.WeaponProcessor.FindWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  WeaponClass                    (Parm, ZeroConstructor, IsPlainOldData)
// class ATslWeapon*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslWeapon* AWeaponProcessor::FindWeapon(class UClass* WeaponClass)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17216);

	AWeaponProcessor_FindWeapon_Params params;
	params.WeaponClass = WeaponClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.WeaponProcessor.ClientSetWeaponIndex
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// int                            WeaponIndex                    (Parm, ZeroConstructor, IsPlainOldData)

void AWeaponProcessor::ClientSetWeaponIndex(int WeaponIndex)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17214);

	AWeaponProcessor_ClientSetWeaponIndex_Params params;
	params.WeaponIndex = WeaponIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.WeaponProcessor.ClientInitByReconnection
// (Net, NetReliable, Native, Event, Protected, NetClient, NetValidate)
// Parameters:
// int                            InitWeaponIndex                (Parm, ZeroConstructor, IsPlainOldData)

void AWeaponProcessor::ClientInitByReconnection(int InitWeaponIndex)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17212);

	AWeaponProcessor_ClientInitByReconnection_Params params;
	params.InitWeaponIndex = InitWeaponIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.WeaponProcessor.ClientForceRemoveWeapon
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// int                            WeaponIndex                    (Parm, ZeroConstructor, IsPlainOldData)

void AWeaponProcessor::ClientForceRemoveWeapon(int WeaponIndex)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17210);

	AWeaponProcessor_ClientForceRemoveWeapon_Params params;
	params.WeaponIndex = WeaponIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VaultingData.GetVaultAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           bHasRifle                      (Parm, ZeroConstructor, IsPlainOldData)
// class UAnimSequenceBase*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimSequenceBase* UVaultingData::GetVaultAnimation(bool bHasRifle)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17266);

	UVaultingData_GetVaultAnimation_Params params;
	params.bHasRifle = bHasRifle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VaultingData.GetBlendSpeedByDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          InDistance                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UVaultingData::GetBlendSpeedByDistance(float InDistance)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17263);

	UVaultingData_GetBlendSpeedByDistance_Params params;
	params.InDistance = InDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VaultingData.GetAnimationLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UVaultingData::GetAnimationLength()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17261);

	UVaultingData_GetAnimationLength_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VaultingData.GetAnimationCurve
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCurveFloat*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UCurveFloat* UVaultingData::GetAnimationCurve()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17259);

	UVaultingData_GetAnimationCurve_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.UpdateWeaponAttachPoint
// (Final, Native, Public, BlueprintCallable)

void ATslCharacter::UpdateWeaponAttachPoint()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18017);

	ATslCharacter_UpdateWeaponAttachPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.UnBindCallbackToHUD
// (Final, Native, Public)
// Parameters:
// class ATslPlayerController*    InController                   (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::UnBindCallbackToHUD(class ATslPlayerController* InController)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18015);

	ATslCharacter_UnBindCallbackToHUD_Params params;
	params.InController = InController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ToggleInvincibility
// (Event, Public, BlueprintEvent)

void ATslCharacter::ToggleInvincibility()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18014);

	ATslCharacter_ToggleInvincibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ToggleFreeMode
// (Event, Public, BlueprintEvent)

void ATslCharacter::ToggleFreeMode()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18013);

	ATslCharacter_ToggleFreeMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ToggleAnimDynamics
// (Final, Exec, Native, Public)

void ATslCharacter::ToggleAnimDynamics()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18012);

	ATslCharacter_ToggleAnimDynamics_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.TickOptimization_ShouldRunMovementUpdate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::TickOptimization_ShouldRunMovementUpdate()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18010);

	ATslCharacter_TickOptimization_ShouldRunMovementUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.TickOptimization_ShouldRunAnimUpdate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::TickOptimization_ShouldRunAnimUpdate()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18008);

	ATslCharacter_TickOptimization_ShouldRunAnimUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.TickOptimization_IsOverMinimumDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::TickOptimization_IsOverMinimumDistance()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18006);

	ATslCharacter_TickOptimization_IsOverMinimumDistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.TickOptimization_Eval
// (Final, Native, Public, BlueprintCallable)

void ATslCharacter::TickOptimization_Eval()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18005);

	ATslCharacter_TickOptimization_Eval_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.StopAllAnimMontages
// (Final, Native, Public, BlueprintCallable)

void ATslCharacter::StopAllAnimMontages()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18004);

	ATslCharacter_StopAllAnimMontages_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.STAT_TickEnd
// (Final, Native, Public, BlueprintCallable)

void ATslCharacter::STAT_TickEnd()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18003);

	ATslCharacter_STAT_TickEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.STAT_TickBegin
// (Final, Native, Public, BlueprintCallable)

void ATslCharacter::STAT_TickBegin()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18002);

	ATslCharacter_STAT_TickBegin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SpawnPunchImpact_Reliable
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 InLocation                     (Parm, IsPlainOldData)
// struct FRotator                InRotation                     (Parm, IsPlainOldData)

void ATslCharacter::SpawnPunchImpact_Reliable(const struct FVector& InLocation, const struct FRotator& InRotation)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17999);

	ATslCharacter_SpawnPunchImpact_Reliable_Params params;
	params.InLocation = InLocation;
	params.InRotation = InRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SpawnPunchImpact
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector                 InLocation                     (Parm, IsPlainOldData)
// struct FRotator                InRotation                     (Parm, IsPlainOldData)

void ATslCharacter::SpawnPunchImpact(const struct FVector& InLocation, const struct FRotator& InRotation)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17996);

	ATslCharacter_SpawnPunchImpact_Params params;
	params.InLocation = InLocation;
	params.InRotation = InRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SpawnBulletPassByEffect
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Location                       (Parm, IsPlainOldData)
// float                          BulletVelocity                 (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::SpawnBulletPassByEffect(const struct FVector& Location, float BulletVelocity)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17993);

	ATslCharacter_SpawnBulletPassByEffect_Params params;
	params.Location = Location;
	params.BulletVelocity = BulletVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SimulatePhysicalHitRecovery
// (Final, Native, Protected)

void ATslCharacter::SimulatePhysicalHitRecovery()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17992);

	ATslCharacter_SimulatePhysicalHitRecovery_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SimulateHeadShot
// (Event, Protected, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FTransform              SpawnTransform                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FTransform              ImpactTransform                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ATslCharacter::SimulateHeadShot(const struct FTransform& SpawnTransform, const struct FTransform& ImpactTransform)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17989);

	ATslCharacter_SimulateHeadShot_Params params;
	params.SpawnTransform = SpawnTransform;
	params.ImpactTransform = ImpactTransform;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ShowDynamicCrosshair
// (Final, Exec, Native, Public)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::ShowDynamicCrosshair(bool bShow)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17987);

	ATslCharacter_ShowDynamicCrosshair_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ShowCharacterInformation
// (Final, Exec, Native, Public)
// Parameters:
// bool                           bFullInfo                      (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::ShowCharacterInformation(bool bFullInfo)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17985);

	ATslCharacter_ShowCharacterInformation_Params params;
	params.bFullInfo = bFullInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SetWorldTransformIdentity
// (Final, Native, Public, BlueprintCallable)

void ATslCharacter::SetWorldTransformIdentity()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17984);

	ATslCharacter_SetWorldTransformIdentity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SetWeaponInertia
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                InInertia                      (Parm, IsPlainOldData)

void ATslCharacter::SetWeaponInertia(const struct FRotator& InInertia)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17982);

	ATslCharacter_SetWeaponInertia_Params params;
	params.InInertia = InInertia;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SetupWeaponBlueprint
// (Event, Public, BlueprintEvent)

void ATslCharacter::SetupWeaponBlueprint()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17981);

	ATslCharacter_SetupWeaponBlueprint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SetTPPSpringarmOffset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          VerticalOffset                 (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::SetTPPSpringarmOffset(float VerticalOffset)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17979);

	ATslCharacter_SetTPPSpringarmOffset_Params params;
	params.VerticalOffset = VerticalOffset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SetTickOptimization_Movement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bActivate                      (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::SetTickOptimization_Movement(bool bActivate)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17977);

	ATslCharacter_SetTickOptimization_Movement_Params params;
	params.bActivate = bActivate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SetTickOptimization_Anim
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bActivate                      (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::SetTickOptimization_Anim(bool bActivate)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17975);

	ATslCharacter_SetTickOptimization_Anim_Params params;
	params.bActivate = bActivate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SetTickOptimization_Actor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bActivate                      (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::SetTickOptimization_Actor(bool bActivate)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17973);

	ATslCharacter_SetTickOptimization_Actor_Params params;
	params.bActivate = bActivate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SetSwayDebuffParameters
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          SwaySpeed                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          SwayVerticalMultiplier         (Parm, ZeroConstructor, IsPlainOldData)
// float                          SwayHorizontalMultiplier       (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::SetSwayDebuffParameters(float SwaySpeed, float SwayVerticalMultiplier, float SwayHorizontalMultiplier)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17969);

	ATslCharacter_SetSwayDebuffParameters_Params params;
	params.SwaySpeed = SwaySpeed;
	params.SwayVerticalMultiplier = SwayVerticalMultiplier;
	params.SwayHorizontalMultiplier = SwayHorizontalMultiplier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SetServerVaultFinished
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           InFinished                     (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::SetServerVaultFinished(bool InFinished)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17967);

	ATslCharacter_SetServerVaultFinished_Params params;
	params.InFinished = InFinished;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SetParachuteLandingAssist
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bAssistActive                  (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::SetParachuteLandingAssist(bool bAssistActive)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17965);

	ATslCharacter_SetParachuteLandingAssist_Params params;
	params.bAssistActive = bAssistActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SetMovementEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsEnabled                      (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::SetMovementEnabled(bool IsEnabled)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17963);

	ATslCharacter_SetMovementEnabled_Params params;
	params.IsEnabled = IsEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SetLaunchEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FAttackId               AttackId                       (Parm)
// class ATslPlayerState*         InPlayerState                  (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Causer                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::SetLaunchEvent(const struct FAttackId& AttackId, class ATslPlayerState* InPlayerState, class AActor* Causer, class UClass* DamageTypeClass)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17958);

	ATslCharacter_SetLaunchEvent_Params params;
	params.AttackId = AttackId;
	params.InPlayerState = InPlayerState;
	params.Causer = Causer;
	params.DamageTypeClass = DamageTypeClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SetJumpStartLocationAndFallheight
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 JumpStartLoc                   (Parm, IsPlainOldData)
// float                          FallHeight                     (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::SetJumpStartLocationAndFallheight(const struct FVector& JumpStartLoc, float FallHeight)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17955);

	ATslCharacter_SetJumpStartLocationAndFallheight_Params params;
	params.JumpStartLoc = JumpStartLoc;
	params.FallHeight = FallHeight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SetCustomDepth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bOn                            (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::SetCustomDepth(bool bOn)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17953);

	ATslCharacter_SetCustomDepth_Params params;
	params.bOn = bOn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SetCharacterVaultingData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InVaultTimer                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           InIsVaulting                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           InIsClimbing                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           InEndVaultToFall               (Parm, ZeroConstructor, IsPlainOldData)
// float                          InDirection                    (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::SetCharacterVaultingData(float InVaultTimer, bool InIsVaulting, bool InIsClimbing, bool InEndVaultToFall, float InDirection)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17947);

	ATslCharacter_SetCharacterVaultingData_Params params;
	params.InVaultTimer = InVaultTimer;
	params.InIsVaulting = InIsVaulting;
	params.InIsClimbing = InIsClimbing;
	params.InEndVaultToFall = InEndVaultToFall;
	params.InDirection = InDirection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SetCanGroggyDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bInCanGroggyDamage             (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::SetCanGroggyDamage(bool bInCanGroggyDamage)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17945);

	ATslCharacter_SetCanGroggyDamage_Params params;
	params.bInCanGroggyDamage = bInCanGroggyDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SetBulletSpawnOverride
// (Final, Native, Public)
// Parameters:
// bool                           InOverride                     (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::SetBulletSpawnOverride(bool InOverride)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17943);

	ATslCharacter_SetBulletSpawnOverride_Params params;
	params.InOverride = InOverride;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SetBuffFinalSpreadFactor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          FinalSpreadFactor              (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::SetBuffFinalSpreadFactor(float FinalSpreadFactor)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17941);

	ATslCharacter_SetBuffFinalSpreadFactor_Params params;
	params.FinalSpreadFactor = FinalSpreadFactor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SetBoostGauge
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          NewBoostGauge                  (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::SetBoostGauge(float NewBoostGauge)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17939);

	ATslCharacter_SetBoostGauge_Params params;
	params.NewBoostGauge = NewBoostGauge;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SetAnimationAkSwitch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 SwitchGroup                    (Parm, ZeroConstructor)
// struct FString                 SwitchState                    (Parm, ZeroConstructor)

void ATslCharacter::SetAnimationAkSwitch(const struct FString& SwitchGroup, const struct FString& SwitchState)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17936);

	ATslCharacter_SetAnimationAkSwitch_Params params;
	params.SwitchGroup = SwitchGroup;
	params.SwitchState = SwitchState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SetAnimationAkRTPC
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 RTPCName                       (Parm, ZeroConstructor)
// float                          RTPCValue                      (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::SetAnimationAkRTPC(const struct FString& RTPCName, float RTPCValue)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17933);

	ATslCharacter_SetAnimationAkRTPC_Params params;
	params.RTPCName = RTPCName;
	params.RTPCValue = RTPCValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SetAimStateActive
// (Final, Native, Protected)
// Parameters:
// bool                           IsActive                       (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::SetAimStateActive(bool IsActive)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17931);

	ATslCharacter_SetAimStateActive_Params params;
	params.IsActive = IsActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SetADSSocketOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 NewOffset                      (Parm, IsPlainOldData)

void ATslCharacter::SetADSSocketOffset(const struct FVector& NewOffset)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17929);

	ATslCharacter_SetADSSocketOffset_Params params;
	params.NewOffset = NewOffset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SetActiveRagdoll
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bIsActive                      (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::SetActiveRagdoll(bool bIsActive)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17927);

	ATslCharacter_SetActiveRagdoll_Params params;
	params.bIsActive = bIsActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SetAccessorySlot_Thrown
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTslAccessoryComponent*  AccessoryComponent             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ATslCharacter::SetAccessorySlot_Thrown(class UTslAccessoryComponent* AccessoryComponent)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17925);

	ATslCharacter_SetAccessorySlot_Thrown_Params params;
	params.AccessoryComponent = AccessoryComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SetAccessorySlot_SideArm
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTslAccessoryComponent*  AccessoryComponent             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ATslCharacter::SetAccessorySlot_SideArm(class UTslAccessoryComponent* AccessoryComponent)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17923);

	ATslCharacter_SetAccessorySlot_SideArm_Params params;
	params.AccessoryComponent = AccessoryComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SetAccessorySlot_Secondary
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTslAccessoryComponent*  AccessoryComponent             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ATslCharacter::SetAccessorySlot_Secondary(class UTslAccessoryComponent* AccessoryComponent)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17921);

	ATslCharacter_SetAccessorySlot_Secondary_Params params;
	params.AccessoryComponent = AccessoryComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SetAccessorySlot_Primary
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTslAccessoryComponent*  AccessoryComponent             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ATslCharacter::SetAccessorySlot_Primary(class UTslAccessoryComponent* AccessoryComponent)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17919);

	ATslCharacter_SetAccessorySlot_Primary_Params params;
	params.AccessoryComponent = AccessoryComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SetAccessorySlot_Melee
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTslAccessoryComponent*  AccessoryComponent             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ATslCharacter::SetAccessorySlot_Melee(class UTslAccessoryComponent* AccessoryComponent)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17917);

	ATslCharacter_SetAccessorySlot_Melee_Params params;
	params.AccessoryComponent = AccessoryComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SetAccessorySlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTslAccessoryComponent*  AccessoryComponent             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// EAccessorySlot                 Slot                           (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::SetAccessorySlot(class UTslAccessoryComponent* AccessoryComponent, EAccessorySlot Slot)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17913);

	ATslCharacter_SetAccessorySlot_Params params;
	params.AccessoryComponent = AccessoryComponent;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ServerSetVariableZoomLevel
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int                            ZoomLevel                      (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::ServerSetVariableZoomLevel(int ZoomLevel)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17911);

	ATslCharacter_ServerSetVariableZoomLevel_Params params;
	params.ZoomLevel = ZoomLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ServerSetTargeting
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// ETargetingType                 NewTargetingType               (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::ServerSetTargeting(ETargetingType NewTargetingType)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17908);

	ATslCharacter_ServerSetTargeting_Params params;
	params.NewTargetingType = NewTargetingType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ServerSetSprintingAuto
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                           bNewSprintingAuto              (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::ServerSetSprintingAuto(bool bNewSprintingAuto)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17906);

	ATslCharacter_ServerSetSprintingAuto_Params params;
	params.bNewSprintingAuto = bNewSprintingAuto;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ServerSetSprinting
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                           bNewSprinting                  (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::ServerSetSprinting(bool bNewSprinting)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17904);

	ATslCharacter_ServerSetSprinting_Params params;
	params.bNewSprinting = bNewSprinting;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ServerSetRunning
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                           bNewRunning                    (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::ServerSetRunning(bool bNewRunning)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17902);

	ATslCharacter_ServerSetRunning_Params params;
	params.bNewRunning = bNewRunning;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ServerSetRolling
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                           bNewRolling                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIsLeft                        (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::ServerSetRolling(bool bNewRolling, bool bIsLeft)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17899);

	ATslCharacter_ServerSetRolling_Params params;
	params.bNewRolling = bNewRolling;
	params.bIsLeft = bIsLeft;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ServerSetPeekRight
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                           bNewPeekRight                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           InbUseRightShoulderAiming      (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::ServerSetPeekRight(bool bNewPeekRight, bool InbUseRightShoulderAiming)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17896);

	ATslCharacter_ServerSetPeekRight_Params params;
	params.bNewPeekRight = bNewPeekRight;
	params.InbUseRightShoulderAiming = InbUseRightShoulderAiming;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ServerSetPeekLeft
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                           bNewPeekLeft                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           InbUseRightShoulderAiming      (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::ServerSetPeekLeft(bool bNewPeekLeft, bool InbUseRightShoulderAiming)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17893);

	ATslCharacter_ServerSetPeekLeft_Params params;
	params.bNewPeekLeft = bNewPeekLeft;
	params.InbUseRightShoulderAiming = InbUseRightShoulderAiming;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ServerSetHoldingBreath
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                           bNewHoldingBreath              (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::ServerSetHoldingBreath(bool bNewHoldingBreath)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17891);

	ATslCharacter_ServerSetHoldingBreath_Params params;
	params.bNewHoldingBreath = bNewHoldingBreath;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ServerSetGunDirectionSway
// (Net, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FRotator                InGunDirectionSway             (Parm, IsPlainOldData)

void ATslCharacter::ServerSetGunDirectionSway(const struct FRotator& InGunDirectionSway)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17889);

	ATslCharacter_ServerSetGunDirectionSway_Params params;
	params.InGunDirectionSway = InGunDirectionSway;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ServerSetAimOffsets
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FVector_NetQuantizeNormal NewAimOffsets                  (Parm)

void ATslCharacter::ServerSetAimOffsets(const struct FVector_NetQuantizeNormal& NewAimOffsets)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17887);

	ATslCharacter_ServerSetAimOffsets_Params params;
	params.NewAimOffsets = NewAimOffsets;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ServerBroadCastAimingRemote
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           InbIsAming                     (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::ServerBroadCastAimingRemote(bool InbIsAming)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17885);

	ATslCharacter_ServerBroadCastAimingRemote_Params params;
	params.InbIsAming = InbIsAming;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.Server_UnarmedHitNotify
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FHitResult              Hit                            (Parm, IsPlainOldData)
// TEnumAsByte<EPunchDamageType>  PunchDamageType                (Parm, ZeroConstructor, IsPlainOldData)
// TArray<float>                  AimSpeeds                      (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// uint32_t                       HitSeq                         (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::Server_UnarmedHitNotify(const struct FHitResult& Hit, TEnumAsByte<EPunchDamageType> PunchDamageType, TArray<float> AimSpeeds, uint32_t HitSeq)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17879);

	ATslCharacter_Server_UnarmedHitNotify_Params params;
	params.Hit = Hit;
	params.PunchDamageType = PunchDamageType;
	params.AimSpeeds = AimSpeeds;
	params.HitSeq = HitSeq;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.Server_SetWeaponObstruction
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                           bNewObstruction                (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::Server_SetWeaponObstruction(bool bNewObstruction)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17877);

	ATslCharacter_Server_SetWeaponObstruction_Params params;
	params.bNewObstruction = bNewObstruction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.Server_SetVaultCancel
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           InCancel                       (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::Server_SetVaultCancel(bool InCancel)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17875);

	ATslCharacter_Server_SetVaultCancel_Params params;
	params.InCancel = InCancel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.Server_SetThrowMode
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           bNewVal                        (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::Server_SetThrowMode(bool bNewVal)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17873);

	ATslCharacter_Server_SetThrowMode_Params params;
	params.bNewVal = bNewVal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.Server_SetParachuteLandingAssist
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// bool                           bAssistActive                  (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::Server_SetParachuteLandingAssist(bool bAssistActive)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17871);

	ATslCharacter_Server_SetParachuteLandingAssist_Params params;
	params.bAssistActive = bAssistActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.Server_SetFiringMode
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// EFiringMode                    fMode                          (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::Server_SetFiringMode(EFiringMode fMode)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17868);

	ATslCharacter_Server_SetFiringMode_Params params;
	params.fMode = fMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.Server_SetCoatEquipped
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           IsEquipped                     (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::Server_SetCoatEquipped(bool IsEquipped)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17866);

	ATslCharacter_Server_SetCoatEquipped_Params params;
	params.IsEquipped = IsEquipped;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.Server_SetCastAnim
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// ECastAnim                      InCastAnim                     (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::Server_SetCastAnim(ECastAnim InCastAnim)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17863);

	ATslCharacter_Server_SetCastAnim_Params params;
	params.InCastAnim = InCastAnim;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.Server_SetCanGroggyDamage
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           bInCanGroggyDamage             (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::Server_SetCanGroggyDamage(bool bInCanGroggyDamage)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17861);

	ATslCharacter_Server_SetCanGroggyDamage_Params params;
	params.bInCanGroggyDamage = bInCanGroggyDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.Server_SetAimState
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                           IsActive                       (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::Server_SetAimState(bool IsActive)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17859);

	ATslCharacter_Server_SetAimState_Params params;
	params.IsActive = IsActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.Server_PlayUnarmedAttack
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            AnimationIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::Server_PlayUnarmedAttack(int AnimationIndex)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17857);

	ATslCharacter_Server_PlayUnarmedAttack_Params params;
	params.AnimationIndex = AnimationIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.Server_CastFinishNotify
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ATslCharacter::Server_CastFinishNotify()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17856);

	ATslCharacter_Server_CastFinishNotify_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.Server_CastCancelNotify
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ATslCharacter::Server_CastCancelNotify()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17855);

	ATslCharacter_Server_CastCancelNotify_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.SendSystemMessage
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// ESystemMessageType             MessageType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   Message                        (ConstParm, Parm, OutParm, ReferenceParm)

void ATslCharacter::SendSystemMessage(ESystemMessageType MessageType, const struct FText& Message)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17851);

	ATslCharacter_SendSystemMessage_Params params;
	params.MessageType = MessageType;
	params.Message = Message;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.RunVaultCheck_BP
// (Native, Event, Public, BlueprintEvent)

void ATslCharacter::RunVaultCheck_BP()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17850);

	ATslCharacter_RunVaultCheck_BP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ResetUnarmedAttack
// (Final, Native, Public)

void ATslCharacter::ResetUnarmedAttack()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17849);

	ATslCharacter_ResetUnarmedAttack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ResetParachute
// (Final, Native, Public, BlueprintCallable)

void ATslCharacter::ResetParachute()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17848);

	ATslCharacter_ResetParachute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.RemoveCrosshair
// (Event, Public, BlueprintEvent)

void ATslCharacter::RemoveCrosshair()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17847);

	ATslCharacter_RemoveCrosshair_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ReevaluaeTargetingState
// (Final, Native, Public)

void ATslCharacter::ReevaluaeTargetingState()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17846);

	ATslCharacter_ReevaluaeTargetingState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.PunchStart
// (Final, Native, Public, HasOutParms)
// Parameters:
// TEnumAsByte<EPunchDamageType>  PunchDamageType                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float                          PunchDistance                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          PunchRadius                    (Parm, ZeroConstructor, IsPlainOldData)
// TArray<float>                  InAimSpeeds                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void ATslCharacter::PunchStart(TEnumAsByte<EPunchDamageType> PunchDamageType, float PunchDistance, float PunchRadius, TArray<float> InAimSpeeds)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17840);

	ATslCharacter_PunchStart_Params params;
	params.PunchDamageType = PunchDamageType;
	params.PunchDistance = PunchDistance;
	params.PunchRadius = PunchRadius;
	params.InAimSpeeds = InAimSpeeds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ProcessRevive
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          RemainGroggyHealthPercent      (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::ProcessRevive(float RemainGroggyHealthPercent)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17838);

	ATslCharacter_ProcessRevive_Params params;
	params.RemainGroggyHealthPercent = RemainGroggyHealthPercent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ProcessDBNO
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          GroggyHealthPercent            (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::ProcessDBNO(float GroggyHealthPercent)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17836);

	ATslCharacter_ProcessDBNO_Params params;
	params.GroggyHealthPercent = GroggyHealthPercent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.PrepareParachute
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  ParachuteType                  (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::PrepareParachute(class UClass* ParachuteType)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17834);

	ATslCharacter_PrepareParachute_Params params;
	params.ParachuteType = ParachuteType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.PlayCameraAnim
// (Final, Native, Public)
// Parameters:
// class UCameraAnim*             CameraAnim                     (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::PlayCameraAnim(class UCameraAnim* CameraAnim)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17832);

	ATslCharacter_PlayCameraAnim_Params params;
	params.CameraAnim = CameraAnim;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.PickUpItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UItem*                   Item                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   TargetContainer                (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 Options                        (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::PickUpItem(class UItem* Item, const struct FName& TargetContainer, const struct FString& Options)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17827);

	ATslCharacter_PickUpItem_Params params;
	params.Item = Item;
	params.TargetContainer = TargetContainer;
	params.Options = Options;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.OnWeaponChanged
// (Event, Protected, BlueprintEvent)

void ATslCharacter::OnWeaponChanged()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17826);

	ATslCharacter_OnWeaponChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnWeapon_6
// (Final, Native, Public, BlueprintCallable)

void ATslCharacter::OnWeapon_6()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17825);

	ATslCharacter_OnWeapon_6_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnWeapon_5
// (Final, Native, Public, BlueprintCallable)

void ATslCharacter::OnWeapon_5()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17824);

	ATslCharacter_OnWeapon_5_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnWeapon_4
// (Final, Native, Public, BlueprintCallable)

void ATslCharacter::OnWeapon_4()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17823);

	ATslCharacter_OnWeapon_4_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnWeapon_3
// (Final, Native, Public, BlueprintCallable)

void ATslCharacter::OnWeapon_3()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17822);

	ATslCharacter_OnWeapon_3_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnWeapon_2
// (Final, Native, Public, BlueprintCallable)

void ATslCharacter::OnWeapon_2()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17821);

	ATslCharacter_OnWeapon_2_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnUnarmPad
// (Final, Native, Public, BlueprintCallable)

void ATslCharacter::OnUnarmPad()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17820);

	ATslCharacter_OnUnarmPad_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnUnarm
// (Final, Native, Public, BlueprintCallable)

void ATslCharacter::OnUnarm()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17819);

	ATslCharacter_OnUnarm_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnThrowWeaponPad
// (Final, Native, Public, BlueprintCallable)

void ATslCharacter::OnThrowWeaponPad()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17818);

	ATslCharacter_OnThrowWeaponPad_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnTest_SetupWeapon
// (Event, Public, BlueprintEvent)

void ATslCharacter::OnTest_SetupWeapon()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17817);

	ATslCharacter_OnTest_SetupWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnTest_InspectObject
// (Event, Public, BlueprintEvent)

void ATslCharacter::OnTest_InspectObject()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17816);

	ATslCharacter_OnTest_InspectObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnStopTargeting
// (Final, Native, Public, BlueprintCallable)

void ATslCharacter::OnStopTargeting()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17815);

	ATslCharacter_OnStopTargeting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnStopFire
// (Final, Native, Public, BlueprintCallable)

void ATslCharacter::OnStopFire()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17814);

	ATslCharacter_OnStopFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnStartInteractBy
// (Final, Native, Protected)
// Parameters:
// class ATslCharacter*           OtherCharacter                 (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::OnStartInteractBy(class ATslCharacter* OtherCharacter)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17812);

	ATslCharacter_OnStartInteractBy_Params params;
	params.OtherCharacter = OtherCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnShowDynamicCrosshair
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::OnShowDynamicCrosshair(bool bShow)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17810);

	ATslCharacter_OnShowDynamicCrosshair_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnRep_WeaponProcessor
// (Final, Native, Protected)

void ATslCharacter::OnRep_WeaponProcessor()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17809);

	ATslCharacter_OnRep_WeaponProcessor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnRep_VariableZoomLevel
// (Final, Native, Protected)

void ATslCharacter::OnRep_VariableZoomLevel()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17808);

	ATslCharacter_OnRep_VariableZoomLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnRep_TargetingType
// (Final, Native, Protected)

void ATslCharacter::OnRep_TargetingType()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17807);

	ATslCharacter_OnRep_TargetingType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnRep_ShoesSoundType
// (Final, Native, Protected)

void ATslCharacter::OnRep_ShoesSoundType()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17806);

	ATslCharacter_OnRep_ShoesSoundType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnRep_ReviveCastingTime
// (Final, Native, Protected)

void ATslCharacter::OnRep_ReviveCastingTime()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17805);

	ATslCharacter_OnRep_ReviveCastingTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnRep_LastTakeHitInfo
// (Final, Native, Protected)

void ATslCharacter::OnRep_LastTakeHitInfo()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17804);

	ATslCharacter_OnRep_LastTakeHitInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnRep_IsWeaponObstructed
// (Final, Native, Protected)

void ATslCharacter::OnRep_IsWeaponObstructed()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17803);

	ATslCharacter_OnRep_IsWeaponObstructed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnRep_IsThrowHigh
// (Final, Native, Protected)

void ATslCharacter::OnRep_IsThrowHigh()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17802);

	ATslCharacter_OnRep_IsThrowHigh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnRep_IsThirdPerson
// (Final, Native, Protected)

void ATslCharacter::OnRep_IsThirdPerson()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17801);

	ATslCharacter_OnRep_IsThirdPerson_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnRep_IsScopingRemote
// (Final, Native, Protected)

void ATslCharacter::OnRep_IsScopingRemote()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17800);

	ATslCharacter_OnRep_IsScopingRemote_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnRep_IsReviving
// (Final, Native, Protected)

void ATslCharacter::OnRep_IsReviving()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17799);

	ATslCharacter_OnRep_IsReviving_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnRep_IsPeekRight
// (Final, Native, Protected)

void ATslCharacter::OnRep_IsPeekRight()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17798);

	ATslCharacter_OnRep_IsPeekRight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnRep_IsPeekLeft
// (Final, Native, Protected)

void ATslCharacter::OnRep_IsPeekLeft()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17797);

	ATslCharacter_OnRep_IsPeekLeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnRep_IsInVehicleRemote
// (Final, Native, Protected)

void ATslCharacter::OnRep_IsInVehicleRemote()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17796);

	ATslCharacter_OnRep_IsInVehicleRemote_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnRep_IsGroggying
// (Final, Native, Protected)

void ATslCharacter::OnRep_IsGroggying()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17795);

	ATslCharacter_OnRep_IsGroggying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnRep_IsFirstPersonRemote
// (Final, Native, Protected)

void ATslCharacter::OnRep_IsFirstPersonRemote()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17794);

	ATslCharacter_OnRep_IsFirstPersonRemote_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnRep_IsDemoVaulting
// (Final, Native, Protected)

void ATslCharacter::OnRep_IsDemoVaulting()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17793);

	ATslCharacter_OnRep_IsDemoVaulting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnRep_IsCrouched
// (Native, Public)

void ATslCharacter::OnRep_IsCrouched()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17792);

	ATslCharacter_OnRep_IsCrouched_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnRep_IsCoatEquipped
// (Final, Native, Protected)

void ATslCharacter::OnRep_IsCoatEquipped()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17791);

	ATslCharacter_OnRep_IsCoatEquipped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnRep_IsAimingRemote
// (Final, Native, Protected)

void ATslCharacter::OnRep_IsAimingRemote()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17790);

	ATslCharacter_OnRep_IsAimingRemote_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnRep_IgnoreRotation
// (Final, Native, Protected)

void ATslCharacter::OnRep_IgnoreRotation()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17789);

	ATslCharacter_OnRep_IgnoreRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnRep_Health
// (Final, Native, Protected)
// Parameters:
// float                          LastHealth                     (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::OnRep_Health(float LastHealth)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17787);

	ATslCharacter_OnRep_Health_Params params;
	params.LastHealth = LastHealth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnRep_GroggyHealth
// (Final, Native, Protected)
// Parameters:
// float                          LastGroggyHealth               (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::OnRep_GroggyHealth(float LastGroggyHealth)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17785);

	ATslCharacter_OnRep_GroggyHealth_Params params;
	params.LastGroggyHealth = LastGroggyHealth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnRep_CharacterState
// (Final, Native, Protected)

void ATslCharacter::OnRep_CharacterState()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17784);

	ATslCharacter_OnRep_CharacterState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnRep_CastAnim
// (Final, Native, Protected)

void ATslCharacter::OnRep_CastAnim()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17783);

	ATslCharacter_OnRep_CastAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnRep_BoostGauge
// (Final, Native, Protected)
// Parameters:
// float                          LastBoostGauge                 (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::OnRep_BoostGauge(float LastBoostGauge)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17781);

	ATslCharacter_OnRep_BoostGauge_Params params;
	params.LastBoostGauge = LastBoostGauge;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnRep_AimStateActive
// (Final, Native, Protected)

void ATslCharacter::OnRep_AimStateActive()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17780);

	ATslCharacter_OnRep_AimStateActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnRep_AimOffsets
// (Final, Native, Protected)
// Parameters:
// struct FVector_NetQuantizeNormal PrevAimOffsets                 (Parm)

void ATslCharacter::OnRep_AimOffsets(const struct FVector_NetQuantizeNormal& PrevAimOffsets)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17778);

	ATslCharacter_OnRep_AimOffsets_Params params;
	params.PrevAimOffsets = PrevAimOffsets;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnReloadGamepad
// (Final, Native, Public)

void ATslCharacter::OnReloadGamepad()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17777);

	ATslCharacter_OnReloadGamepad_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnMeleeWeaponPad
// (Final, Native, Public, BlueprintCallable)

void ATslCharacter::OnMeleeWeaponPad()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17776);

	ATslCharacter_OnMeleeWeaponPad_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnInvulnerable
// (Event, Public, BlueprintEvent)

void ATslCharacter::OnInvulnerable()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17775);

	ATslCharacter_OnInvulnerable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnInteractBy
// (Final, Native, Protected)
// Parameters:
// class ATslCharacter*           OtherCharacter                 (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::OnInteractBy(class ATslCharacter* OtherCharacter)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17773);

	ATslCharacter_OnInteractBy_Params params;
	params.OtherCharacter = OtherCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnIncreaseMaxFlyAccerleration
// (Event, Public, BlueprintEvent)

void ATslCharacter::OnIncreaseMaxFlyAccerleration()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17772);

	ATslCharacter_OnIncreaseMaxFlyAccerleration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnFreeMoveMode
// (Event, Public, BlueprintEvent)

void ATslCharacter::OnFreeMoveMode()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17771);

	ATslCharacter_OnFreeMoveMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnDecreaseMaxFlyAccerleration
// (Event, Public, BlueprintEvent)

void ATslCharacter::OnDecreaseMaxFlyAccerleration()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17770);

	ATslCharacter_OnDecreaseMaxFlyAccerleration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnChangeBreath
// (Final, Native, Private)
// Parameters:
// float                          Breath                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          LastBreath                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          BreathMax                      (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::OnChangeBreath(float Breath, float LastBreath, float BreathMax)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17766);

	ATslCharacter_OnChangeBreath_Params params;
	params.Breath = Breath;
	params.LastBreath = LastBreath;
	params.BreathMax = BreathMax;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnCancelInteractBy
// (Final, Native, Protected)
// Parameters:
// class ATslCharacter*           OtherCharacter                 (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::OnCancelInteractBy(class ATslCharacter* OtherCharacter)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17764);

	ATslCharacter_OnCancelInteractBy_Params params;
	params.OtherCharacter = OtherCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.OnBlockingWidgetOpened
// (Final, Native, Public)
// Parameters:
// class UWidget*                 Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ATslCharacter::OnBlockingWidgetOpened(class UWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17762);

	ATslCharacter_OnBlockingWidgetOpened_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.NotHaveThrowItemNotifyMessage
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FText                   ItemName                       (ConstParm, Parm, OutParm, ReferenceParm)

void ATslCharacter::NotHaveThrowItemNotifyMessage(const struct FText& ItemName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17760);

	ATslCharacter_NotHaveThrowItemNotifyMessage_Params params;
	params.ItemName = ItemName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.NotHaveHealItemNotifyMessage
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FText                   ItemName                       (ConstParm, Parm, OutParm, ReferenceParm)

void ATslCharacter::NotHaveHealItemNotifyMessage(const struct FText& ItemName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17758);

	ATslCharacter_NotHaveHealItemNotifyMessage_Params params;
	params.ItemName = ItemName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.NotHaveBoostItemNotifyMessage
// (Event, Public, BlueprintEvent)

void ATslCharacter::NotHaveBoostItemNotifyMessage()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17757);

	ATslCharacter_NotHaveBoostItemNotifyMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.NativeOnWeaponChanged
// (Final, Native, Private)

void ATslCharacter::NativeOnWeaponChanged()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17756);

	ATslCharacter_NativeOnWeaponChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.LocalMagazineDrop
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                 InitialVelocity                (Parm, IsPlainOldData)

void ATslCharacter::LocalMagazineDrop(const struct FVector& InitialVelocity)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17754);

	ATslCharacter_LocalMagazineDrop_Params params;
	params.InitialVelocity = InitialVelocity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.LocalHandleVault_CP
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 V_Start                        (Parm, IsPlainOldData)
// struct FVector                 V_Apex                         (Parm, IsPlainOldData)
// struct FVector                 V_ApexAdditive                 (Parm, IsPlainOldData)
// struct FVector                 V_End                          (Parm, IsPlainOldData)
// bool                           bIsClimb                       (Parm, ZeroConstructor, IsPlainOldData)
// EVaultAnimType                 InVaultType                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bEndToFall                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          Direction                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          PlayerVelocity                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          DistanceFromObject             (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::LocalHandleVault_CP(const struct FVector& V_Start, const struct FVector& V_Apex, const struct FVector& V_ApexAdditive, const struct FVector& V_End, bool bIsClimb, EVaultAnimType InVaultType, bool bEndToFall, float Direction, float PlayerVelocity, float DistanceFromObject)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17742);

	ATslCharacter_LocalHandleVault_CP_Params params;
	params.V_Start = V_Start;
	params.V_Apex = V_Apex;
	params.V_ApexAdditive = V_ApexAdditive;
	params.V_End = V_End;
	params.bIsClimb = bIsClimb;
	params.InVaultType = InVaultType;
	params.bEndToFall = bEndToFall;
	params.Direction = Direction;
	params.PlayerVelocity = PlayerVelocity;
	params.DistanceFromObject = DistanceFromObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.IsZooming
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsZooming()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17740);

	ATslCharacter_IsZooming_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsZombie
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsZombie()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17738);

	ATslCharacter_IsZombie_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsWeaponUsingHighMagnificationScope
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsWeaponUsingHighMagnificationScope()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17736);

	ATslCharacter_IsWeaponUsingHighMagnificationScope_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsVehiclePassenger
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsVehiclePassenger()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17734);

	ATslCharacter_IsVehiclePassenger_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsVehicleDriver
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsVehicleDriver()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17732);

	ATslCharacter_IsVehicleDriver_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsVaultingEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsVaultingEnabled()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17730);

	ATslCharacter_IsVaultingEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsVaultingDebugEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsVaultingDebugEnabled()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17728);

	ATslCharacter_IsVaultingDebugEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsVaulting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsVaulting()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17726);

	ATslCharacter_IsVaulting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsVaultCancelled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsVaultCancelled()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17724);

	ATslCharacter_IsVaultCancelled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsUsingRightShoulderAiming
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsUsingRightShoulderAiming()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17722);

	ATslCharacter_IsUsingRightShoulderAiming_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsUpperCollision
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsUpperCollision()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17720);

	ATslCharacter_IsUpperCollision_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsUnderwater
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsUnderwater()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17718);

	ATslCharacter_IsUnderwater_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsUnderRoof
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsUnderRoof()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17716);

	ATslCharacter_IsUnderRoof_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsTeamMatch
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsTeamMatch()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17714);

	ATslCharacter_IsTeamMatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsTargeting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsTargeting()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17712);

	ATslCharacter_IsTargeting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsSwimming
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsSwimming()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17710);

	ATslCharacter_IsSwimming_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsSprinting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsSprinting()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17708);

	ATslCharacter_IsSprinting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsSpectatingCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsSpectatingCharacter()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17706);

	ATslCharacter_IsSpectatingCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsSitting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsSitting()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17704);

	ATslCharacter_IsSitting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsScoping
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsScoping()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17702);

	ATslCharacter_IsScoping_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsRunning
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsRunning()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17700);

	ATslCharacter_IsRunning_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsRolling
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsRolling()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17698);

	ATslCharacter_IsRolling_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsReviving
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsReviving()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17696);

	ATslCharacter_IsReviving_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsQuitter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsQuitter()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17694);

	ATslCharacter_IsQuitter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsQuickThrowHigh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsQuickThrowHigh()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17692);

	ATslCharacter_IsQuickThrowHigh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsPlayingPickUpAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsPlayingPickUpAnimation()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17690);

	ATslCharacter_IsPlayingPickUpAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsPeekRight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsPeekRight()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17688);

	ATslCharacter_IsPeekRight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsPeekLeft
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsPeekLeft()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17686);

	ATslCharacter_IsPeekLeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsParachuting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsParachuting()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17684);

	ATslCharacter_IsParachuting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsMoving
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsMoving()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17682);

	ATslCharacter_IsMoving_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsMouseUse
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsMouseUse()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17680);

	ATslCharacter_IsMouseUse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsMeleeAttacking
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsMeleeAttacking()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17678);

	ATslCharacter_IsMeleeAttacking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsMagazineHandAttached
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsMagazineHandAttached()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17676);

	ATslCharacter_IsMagazineHandAttached_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsMagazineGunAttached
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsMagazineGunAttached()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17674);

	ATslCharacter_IsMagazineGunAttached_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsLocalOrSpectating
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsLocalOrSpectating()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17672);

	ATslCharacter_IsLocalOrSpectating_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsInWaterVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsInWaterVolume()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17670);

	ATslCharacter_IsInWaterVolume_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsInVehicle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsInVehicle()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17668);

	ATslCharacter_IsInVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsInteracting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsInteracting()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17666);

	ATslCharacter_IsInteracting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsIndoor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsIndoor()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17664);

	ATslCharacter_IsIndoor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsInAircraft
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsInAircraft()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17662);

	ATslCharacter_IsInAircraft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsHoldingBreath
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsHoldingBreath()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17660);

	ATslCharacter_IsHoldingBreath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsHitted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsHitted()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17658);

	ATslCharacter_IsHitted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsHipped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsHipped()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17656);

	ATslCharacter_IsHipped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsGroggying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsGroggying()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17654);

	ATslCharacter_IsGroggying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsFreelooking
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsFreelooking()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17652);

	ATslCharacter_IsFreelooking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsForcingFall
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsForcingFall()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17650);

	ATslCharacter_IsForcingFall_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsForceRotation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsForceRotation()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17648);

	ATslCharacter_IsForceRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsForcedProneAfterFall
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsForcedProneAfterFall()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17646);

	ATslCharacter_IsForcedProneAfterFall_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsFollowingCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsFollowingCharacter()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17644);

	ATslCharacter_IsFollowingCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsFloating
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsFloating()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17642);

	ATslCharacter_IsFloating_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsFirstPerson
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsFirstPerson()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17640);

	ATslCharacter_IsFirstPerson_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsFiring
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsFiring()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17638);

	ATslCharacter_IsFiring_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsFallingWithParachute
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsFallingWithParachute()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17636);

	ATslCharacter_IsFallingWithParachute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsFallingFromHighAltitude
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsFallingFromHighAltitude()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17634);

	ATslCharacter_IsFallingFromHighAltitude_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsDying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsDying()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17632);

	ATslCharacter_IsDying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsCycleInProgress
// (Final, Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsCycleInProgress()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17630);

	ATslCharacter_IsCycleInProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsCoatEquipped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsCoatEquipped()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17628);

	ATslCharacter_IsCoatEquipped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsCasting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsCasting()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17626);

	ATslCharacter_IsCasting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsCameraUnderwater
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsCameraUnderwater()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17624);

	ATslCharacter_IsCameraUnderwater_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsAudioTestEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsAudioTestEnabled()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17622);

	ATslCharacter_IsAudioTestEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsAttacked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsAttacked()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17620);

	ATslCharacter_IsAttacked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsAnimDynamicsEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsAnimDynamicsEnabled()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17618);

	ATslCharacter_IsAnimDynamicsEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsAlive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsAlive()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17616);

	ATslCharacter_IsAlive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.IsActiveRagdoll
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::IsActiveRagdoll()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17614);

	ATslCharacter_IsActiveRagdoll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.HaveNotAnyHealItemNotifyMessage
// (Event, Public, BlueprintEvent)

void ATslCharacter::HaveNotAnyHealItemNotifyMessage()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17613);

	ATslCharacter_HaveNotAnyHealItemNotifyMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.HasWeaponLeftHandIKSocket
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::HasWeaponLeftHandIKSocket()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17611);

	ATslCharacter_HasWeaponLeftHandIKSocket_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.HasWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  WeaponClass                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::HasWeapon(class UClass* WeaponClass)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17608);

	ATslCharacter_HasWeapon_Params params;
	params.WeaponClass = WeaponClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.HasAnimatableObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAnimatableCustomizableTypes   InParamType                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::HasAnimatableObject(EAnimatableCustomizableTypes InParamType)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17604);

	ATslCharacter_HasAnimatableObject_Params params;
	params.InParamType = InParamType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.HandleVaulting_BP
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 ImpactLocation                 (Parm, IsPlainOldData)
// struct FVector                 CapsulePredictedLocation       (Parm, IsPlainOldData)
// struct FVector                 Normal2D                       (Parm, IsPlainOldData)
// struct FVector                 DirectionVecotor               (Parm, IsPlainOldData)
// bool                           bForceVault                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          JumpDistance                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bBlockVault                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bBlockClimb                    (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::HandleVaulting_BP(const struct FVector& ImpactLocation, const struct FVector& CapsulePredictedLocation, const struct FVector& Normal2D, const struct FVector& DirectionVecotor, bool bForceVault, float JumpDistance, bool bBlockVault, bool bBlockClimb)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17595);

	ATslCharacter_HandleVaulting_BP_Params params;
	params.ImpactLocation = ImpactLocation;
	params.CapsulePredictedLocation = CapsulePredictedLocation;
	params.Normal2D = Normal2D;
	params.DirectionVecotor = DirectionVecotor;
	params.bForceVault = bForceVault;
	params.JumpDistance = JumpDistance;
	params.bBlockVault = bBlockVault;
	params.bBlockClimb = bBlockClimb;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.HandleVaultEnd_CP
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 InVaultEndVelocity             (Parm, IsPlainOldData)

void ATslCharacter::HandleVaultEnd_CP(const struct FVector& InVaultEndVelocity)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17593);

	ATslCharacter_HandleVaultEnd_CP_Params params;
	params.InVaultEndVelocity = InVaultEndVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.HandleCapsuleCollision
// (Final, Native, Public, BlueprintCallable)

void ATslCharacter::HandleCapsuleCollision()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17592);

	ATslCharacter_HandleCapsuleCollision_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.GiveWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  WeaponClass                    (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::GiveWeapon(class UClass* WeaponClass)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17590);

	ATslCharacter_GiveWeapon_Params params;
	params.WeaponClass = WeaponClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.GetWeaponThrowable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslWeapon_Throwable*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslWeapon_Throwable* ATslCharacter::GetWeaponThrowable()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17588);

	ATslCharacter_GetWeaponThrowable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetWeaponReloadPlayRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslCharacter::GetWeaponReloadPlayRate()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17586);

	ATslCharacter_GetWeaponReloadPlayRate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetWeaponProcessor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AWeaponProcessor*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AWeaponProcessor* ATslCharacter::GetWeaponProcessor()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17584);

	ATslCharacter_GetWeaponProcessor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetWeaponObstructionRemote
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::GetWeaponObstructionRemote()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17582);

	ATslCharacter_GetWeaponObstructionRemote_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetWeaponMovementModifierScope
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslCharacter::GetWeaponMovementModifierScope()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17580);

	ATslCharacter_GetWeaponMovementModifierScope_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetWeaponMovementModifierAim
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslCharacter::GetWeaponMovementModifierAim()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17578);

	ATslCharacter_GetWeaponMovementModifierAim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetWeaponLeftHandIKTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FTransform ATslCharacter::GetWeaponLeftHandIKTransform()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17576);

	ATslCharacter_GetWeaponLeftHandIKTransform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetWeaponInertia
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator ATslCharacter::GetWeaponInertia()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17574);

	ATslCharacter_GetWeaponInertia_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetWeaponHandIK_Right
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FTransform ATslCharacter::GetWeaponHandIK_Right()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17572);

	ATslCharacter_GetWeaponHandIK_Right_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetWeaponHandIK_Left
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FTransform ATslCharacter::GetWeaponHandIK_Left()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17570);

	ATslCharacter_GetWeaponHandIK_Left_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetWeaponGunCollisionAlpha
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslCharacter::GetWeaponGunCollisionAlpha()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17568);

	ATslCharacter_GetWeaponGunCollisionAlpha_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetWeaponGun
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslWeapon_Gun*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslWeapon_Gun* ATslCharacter::GetWeaponGun()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17566);

	ATslCharacter_GetWeaponGun_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetWeaponADSTimeModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslCharacter::GetWeaponADSTimeModifier()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17564);

	ATslCharacter_GetWeaponADSTimeModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslWeapon*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslWeapon* ATslCharacter::GetWeapon()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17562);

	ATslCharacter_GetWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetWantsToJump
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::GetWantsToJump()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17560);

	ATslCharacter_GetWantsToJump_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetVehicleSeatComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTslVehicleSeatComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UTslVehicleSeatComponent* ATslCharacter::GetVehicleSeatComponent()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17558);

	ATslCharacter_GetVehicleSeatComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetVehicleSeat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UVehicleSeatInteractionComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UVehicleSeatInteractionComponent* ATslCharacter::GetVehicleSeat()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17556);

	ATslCharacter_GetVehicleSeat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetVehicleRiderComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UVehicleRiderComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UVehicleRiderComponent* ATslCharacter::GetVehicleRiderComponent()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17554);

	ATslCharacter_GetVehicleRiderComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetVehiclePawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APawn*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APawn* ATslCharacter::GetVehiclePawn()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17552);

	ATslCharacter_GetVehiclePawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetVehicleInterface
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class UTslVehicleInterface> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TScriptInterface<class UTslVehicleInterface> ATslCharacter::GetVehicleInterface()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17550);

	ATslCharacter_GetVehicleInterface_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetVaultTimer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslCharacter::GetVaultTimer()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17548);

	ATslCharacter_GetVaultTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetVaultingDirection
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslCharacter::GetVaultingDirection()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17546);

	ATslCharacter_GetVaultingDirection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetVaultingDebugType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ATslCharacter::GetVaultingDebugType()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17544);

	ATslCharacter_GetVaultingDebugType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetVaultingDataByEnum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EVaultAnimType                 InVaultType                    (Parm, ZeroConstructor, IsPlainOldData)
// class UVaultingData*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UVaultingData* ATslCharacter::GetVaultingDataByEnum(EVaultAnimType InVaultType)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17540);

	ATslCharacter_GetVaultingDataByEnum_Params params;
	params.InVaultType = InVaultType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetTslPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslPlayerState*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslPlayerState* ATslCharacter::GetTslPlayerState()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17538);

	ATslCharacter_GetTslPlayerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetTslPlayerController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslPlayerController*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslPlayerController* ATslCharacter::GetTslPlayerController()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17536);

	ATslCharacter_GetTslPlayerController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetTslCharacterMovement
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTslCharacterMovement*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UTslCharacterMovement* ATslCharacter::GetTslCharacterMovement()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17534);

	ATslCharacter_GetTslCharacterMovement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetTPPSpringarmOffset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslCharacter::GetTPPSpringarmOffset()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17532);

	ATslCharacter_GetTPPSpringarmOffset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetTPPCameraCurve
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCurveFloat*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UCurveFloat* ATslCharacter::GetTPPCameraCurve()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17530);

	ATslCharacter_GetTPPCameraCurve_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATeam*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATeam* ATslCharacter::GetTeam()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17528);

	ATslCharacter_GetTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetTargetingSpeedModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslCharacter::GetTargetingSpeedModifier()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17526);

	ATslCharacter_GetTargetingSpeedModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetStance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EStanceMode>       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EStanceMode> ATslCharacter::GetStance()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17524);

	ATslCharacter_GetStance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetSprintingSpeedModifier_Stand
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslCharacter::GetSprintingSpeedModifier_Stand()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17522);

	ATslCharacter_GetSprintingSpeedModifier_Stand_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetSprintingSpeedModifier_Prone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslCharacter::GetSprintingSpeedModifier_Prone()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17520);

	ATslCharacter_GetSprintingSpeedModifier_Prone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetSprintingSpeedModifier_Crouch
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslCharacter::GetSprintingSpeedModifier_Crouch()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17518);

	ATslCharacter_GetSprintingSpeedModifier_Crouch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetSprintCurrentValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslCharacter::GetSprintCurrentValue()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17516);

	ATslCharacter_GetSprintCurrentValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetSpeedModifierByWeaponClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslCharacter::GetSpeedModifierByWeaponClass()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17514);

	ATslCharacter_GetSpeedModifierByWeaponClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetSpeedKmPerHour2D
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslCharacter::GetSpeedKmPerHour2D()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17512);

	ATslCharacter_GetSpeedKmPerHour2D_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetShortPlayerName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ATslCharacter::GetShortPlayerName()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17510);

	ATslCharacter_GetShortPlayerName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetServerVaultFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::GetServerVaultFinished()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17508);

	ATslCharacter_GetServerVaultFinished_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetRunningSpeedModifier_Stand
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslCharacter::GetRunningSpeedModifier_Stand()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17506);

	ATslCharacter_GetRunningSpeedModifier_Stand_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetRunningSpeedModifier_Prone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslCharacter::GetRunningSpeedModifier_Prone()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17504);

	ATslCharacter_GetRunningSpeedModifier_Prone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetRunningSpeedModifier_Crouch
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslCharacter::GetRunningSpeedModifier_Crouch()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17502);

	ATslCharacter_GetRunningSpeedModifier_Crouch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetReactionBone
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   BoneName                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName ATslCharacter::GetReactionBone(const struct FName& BoneName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17499);

	ATslCharacter_GetReactionBone_Params params;
	params.BoneName = BoneName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetPlayerName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ATslCharacter::GetPlayerName()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17497);

	ATslCharacter_GetPlayerName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetParachuteLandingAssist
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::GetParachuteLandingAssist()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17495);

	ATslCharacter_GetParachuteLandingAssist_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetParachute
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AParachuteVehicle*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AParachuteVehicle* ATslCharacter::GetParachute()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17493);

	ATslCharacter_GetParachute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetObjectCanInteract
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class UInteractionInterface> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TScriptInterface<class UInteractionInterface> ATslCharacter::GetObjectCanInteract()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17491);

	ATslCharacter_GetObjectCanInteract_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetMaxSprintSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslCharacter::GetMaxSprintSpeed()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17489);

	ATslCharacter_GetMaxSprintSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetMaxGroundSpeedOnSlope
// (Final, Native, Public, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslCharacter::GetMaxGroundSpeedOnSlope()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17487);

	ATslCharacter_GetMaxGroundSpeedOnSlope_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetLocationString
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ATslCharacter::GetLocationString()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17485);

	ATslCharacter_GetLocationString_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetLeanRightAlpha
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslCharacter::GetLeanRightAlpha()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17483);

	ATslCharacter_GetLeanRightAlpha_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetLeanLeftAlpha
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslCharacter::GetLeanLeftAlpha()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17481);

	ATslCharacter_GetLeanLeftAlpha_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetLastMoveRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator ATslCharacter::GetLastMoveRotation()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17479);

	ATslCharacter_GetLastMoveRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetInventoryFacade
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AInventoryFacade*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AInventoryFacade* ATslCharacter::GetInventoryFacade()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17477);

	ATslCharacter_GetInventoryFacade_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetInteractObjectLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ATslCharacter::GetInteractObjectLocation()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17475);

	ATslCharacter_GetInteractObjectLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetInteractionString
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ATslCharacter::GetInteractionString()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17473);

	ATslCharacter_GetInteractionString_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetIndoorFactor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslCharacter::GetIndoorFactor()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17471);

	ATslCharacter_GetIndoorFactor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetFreelookSavedRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator ATslCharacter::GetFreelookSavedRotation()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17469);

	ATslCharacter_GetFreelookSavedRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetFreelookDeltaRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator ATslCharacter::GetFreelookDeltaRotation()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17467);

	ATslCharacter_GetFreelookDeltaRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetDynamicCrosshairHidden
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::GetDynamicCrosshairHidden()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17465);

	ATslCharacter_GetDynamicCrosshairHidden_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetDropPackageType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* ATslCharacter::GetDropPackageType()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17463);

	ATslCharacter_GetDropPackageType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetDirectionString
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ATslCharacter::GetDirectionString()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17461);

	ATslCharacter_GetDirectionString_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetDirectionalSpeedModifier
// (Final, Native, Public, Const)
// Parameters:
// TEnumAsByte<EMovementType>     StanceType                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslCharacter::GetDirectionalSpeedModifier(TEnumAsByte<EMovementType> StanceType)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17458);

	ATslCharacter_GetDirectionalSpeedModifier_Params params;
	params.StanceType = StanceType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetDesiredRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator ATslCharacter::GetDesiredRotation()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17456);

	ATslCharacter_GetDesiredRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetCurrentWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslWeapon*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslWeapon* ATslCharacter::GetCurrentWeapon()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17454);

	ATslCharacter_GetCurrentWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetCurrentWaterSurfaceZ
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslCharacter::GetCurrentWaterSurfaceZ()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17452);

	ATslCharacter_GetCurrentWaterSurfaceZ_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetCurrentWaterSurfaceBaseZ
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslCharacter::GetCurrentWaterSurfaceBaseZ()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17450);

	ATslCharacter_GetCurrentWaterSurfaceBaseZ_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetCurrentWaterDepth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslCharacter::GetCurrentWaterDepth()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17448);

	ATslCharacter_GetCurrentWaterDepth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetCurrentSway
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator ATslCharacter::GetCurrentSway()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17446);

	ATslCharacter_GetCurrentSway_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetCurrentMagazineMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UStaticMesh*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UStaticMesh* ATslCharacter::GetCurrentMagazineMesh()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17444);

	ATslCharacter_GetCurrentMagazineMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetCurrentMagazineLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FTransform ATslCharacter::GetCurrentMagazineLocation()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17442);

	ATslCharacter_GetCurrentMagazineLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetCurrentHeightFromWaterFloor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslCharacter::GetCurrentHeightFromWaterFloor()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17440);

	ATslCharacter_GetCurrentHeightFromWaterFloor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetCtrlShortCutOnOff
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::GetCtrlShortCutOnOff()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17438);

	ATslCharacter_GetCtrlShortCutOnOff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetComponentCanInteract
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class UInteractionInterface> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TScriptInterface<class UInteractionInterface> ATslCharacter::GetComponentCanInteract()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17436);

	ATslCharacter_GetComponentCanInteract_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetClientTslPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslPlayerState*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslPlayerState* ATslCharacter::GetClientTslPlayerState()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17434);

	ATslCharacter_GetClientTslPlayerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetCharacterNetId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ATslCharacter::GetCharacterNetId()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17432);

	ATslCharacter_GetCharacterNetId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetCastObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UObject* ATslCharacter::GetCastObject()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17430);

	ATslCharacter_GetCastObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetCameraDOF
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ATslCharacter::GetCameraDOF()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17428);

	ATslCharacter_GetCameraDOF_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetCameraAnimOverrideAlpha
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslCharacter::GetCameraAnimOverrideAlpha()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17426);

	ATslCharacter_GetCameraAnimOverrideAlpha_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetBulletSpawnOverride
// (Final, Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::GetBulletSpawnOverride()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17424);

	ATslCharacter_GetBulletSpawnOverride_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetBuffComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBuffComponet*           ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UBuffComponet* ATslCharacter::GetBuffComponent()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17422);

	ATslCharacter_GetBuffComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetBreathComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCharacterBreathComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UCharacterBreathComponent* ATslCharacter::GetBreathComponent()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17420);

	ATslCharacter_GetBreathComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetAnimWeaponType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAnimWeaponType                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EAnimWeaponType ATslCharacter::GetAnimWeaponType()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17417);

	ATslCharacter_GetAnimWeaponType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetAnimStance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAnimStance                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EAnimStance ATslCharacter::GetAnimStance()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17414);

	ATslCharacter_GetAnimStance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetAimStateTimer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslCharacter::GetAimStateTimer()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17412);

	ATslCharacter_GetAimStateTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetAimStateAlpha
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslCharacter::GetAimStateAlpha()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17410);

	ATslCharacter_GetAimStateAlpha_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetAimOffsets
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator ATslCharacter::GetAimOffsets()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17408);

	ATslCharacter_GetAimOffsets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetADSSocketOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ATslCharacter::GetADSSocketOffset()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17406);

	ATslCharacter_GetADSSocketOffset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetActorCanInteract
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* ATslCharacter::GetActorCanInteract()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17404);

	ATslCharacter_GetActorCanInteract_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetActiveCamera
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCameraComponent*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UCameraComponent* ATslCharacter::GetActiveCamera()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17402);

	ATslCharacter_GetActiveCamera_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.GetAccessorySlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAccessorySlot                 Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// class UTslAccessoryComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UTslAccessoryComponent* ATslCharacter::GetAccessorySlot(EAccessorySlot Slot)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17398);

	ATslCharacter_GetAccessorySlot_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.FixupCamera
// (Final, Native, Public, BlueprintCallable)

void ATslCharacter::FixupCamera()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17397);

	ATslCharacter_FixupCamera_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.FindWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  WeaponClass                    (Parm, ZeroConstructor, IsPlainOldData)
// class ATslWeapon*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslWeapon* ATslCharacter::FindWeapon(class UClass* WeaponClass)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17394);

	ATslCharacter_FindWeapon_Params params;
	params.WeaponClass = WeaponClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.EnableScopeOutsideBlur
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::EnableScopeOutsideBlur()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17392);

	ATslCharacter_EnableScopeOutsideBlur_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.EnableAudioTest
// (Final, Exec, Native, Public)

void ATslCharacter::EnableAudioTest()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17391);

	ATslCharacter_EnableAudioTest_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.DisableCollision
// (Final, Native, Public, BlueprintCallable)

void ATslCharacter::DisableCollision()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17390);

	ATslCharacter_DisableCollision_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.DelayedFire
// (Final, Native, Protected)

void ATslCharacter::DelayedFire()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17389);

	ATslCharacter_DelayedFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ClientSoundPlayMulticast
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// class UAkAudioEvent*           SoundAk                        (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::ClientSoundPlayMulticast(class UAkAudioEvent* SoundAk)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17387);

	ATslCharacter_ClientSoundPlayMulticast_Params params;
	params.SoundAk = SoundAk;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ClientSoundPlay
// (Net, Native, Event, Public, NetClient)
// Parameters:
// class UAkAudioEvent*           SoundAk                        (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::ClientSoundPlay(class UAkAudioEvent* SoundAk)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17385);

	ATslCharacter_ClientSoundPlay_Params params;
	params.SoundAk = SoundAk;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ClientSimulationArmorDestruction
// (Net, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// EEquipSlotID                   SlotID                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform              Impact                         (Parm, IsPlainOldData)

void ATslCharacter::ClientSimulationArmorDestruction(EEquipSlotID SlotID, const struct FTransform& Impact)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17381);

	ATslCharacter_ClientSimulationArmorDestruction_Params params;
	params.SlotID = SlotID;
	params.Impact = Impact;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ClientSetTargeting
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// ETargetingType                 NewTargetingType               (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::ClientSetTargeting(ETargetingType NewTargetingType)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17378);

	ATslCharacter_ClientSetTargeting_Params params;
	params.NewTargetingType = NewTargetingType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ClientSendGroggyMessage
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ATslPlayerState*         GroggyCauserPlayerState        (Parm, ZeroConstructor, IsPlainOldData)
// class ATslPlayerState*         VictimPlayerState              (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType*             GroggyCauserDamageType         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// EDamageReason                  DamageReason                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   DamageCauserName               (ConstParm, Parm, ReferenceParm)
// class UClass*                  DamageCauserClass              (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::ClientSendGroggyMessage(class ATslPlayerState* GroggyCauserPlayerState, class ATslPlayerState* VictimPlayerState, class UDamageType* GroggyCauserDamageType, EDamageReason DamageReason, const struct FText& DamageCauserName, class UClass* DamageCauserClass)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17370);

	ATslCharacter_ClientSendGroggyMessage_Params params;
	params.GroggyCauserPlayerState = GroggyCauserPlayerState;
	params.VictimPlayerState = VictimPlayerState;
	params.GroggyCauserDamageType = GroggyCauserDamageType;
	params.DamageReason = DamageReason;
	params.DamageCauserName = DamageCauserName;
	params.DamageCauserClass = DamageCauserClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ClientRevivedCastingWidgetShow
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::ClientRevivedCastingWidgetShow(bool bVisible)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17368);

	ATslCharacter_ClientRevivedCastingWidgetShow_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ClientProcessRevive
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// float                          RemainGroggyHealth             (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::ClientProcessRevive(float RemainGroggyHealth)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17366);

	ATslCharacter_ClientProcessRevive_Params params;
	params.RemainGroggyHealth = RemainGroggyHealth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ClientPlayPickUpAnimation
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// struct FVector_NetQuantize     InteractionObject              (ConstParm, Parm)

void ATslCharacter::ClientPlayPickUpAnimation(const struct FVector_NetQuantize& InteractionObject)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17364);

	ATslCharacter_ClientPlayPickUpAnimation_Params params;
	params.InteractionObject = InteractionObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ClientNotifyCrack
// (Net, Native, Event, Public, NetClient)
// Parameters:
// struct FVector_NetQuantize     LocationRelative               (Parm)
// float                          BulletVelocity                 (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::ClientNotifyCrack(const struct FVector_NetQuantize& LocationRelative, float BulletVelocity)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17361);

	ATslCharacter_ClientNotifyCrack_Params params;
	params.LocationRelative = LocationRelative;
	params.BulletVelocity = BulletVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ClientMyCharacterPlayPickUpAnimation
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// struct FVector_NetQuantize     InteractionObject              (ConstParm, Parm)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::ClientMyCharacterPlayPickUpAnimation(const struct FVector_NetQuantize& InteractionObject, float Duration)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17358);

	ATslCharacter_ClientMyCharacterPlayPickUpAnimation_Params params;
	params.InteractionObject = InteractionObject;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ClientForceInitStance
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// TEnumAsByte<EStanceMode>       ToStance                       (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::ClientForceInitStance(TEnumAsByte<EStanceMode> ToStance)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17356);

	ATslCharacter_ClientForceInitStance_Params params;
	params.ToStance = ToStance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ClientDrawDamageInfo
// (Net, Native, Event, Public, NetClient)
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class UTslDamageType*          DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::ClientDrawDamageInfo(float Damage, class UTslDamageType* DamageType)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17353);

	ATslCharacter_ClientDrawDamageInfo_Params params;
	params.Damage = Damage;
	params.DamageType = DamageType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.Client_PlayUnarmedAttack
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// int                            AnimationIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::Client_PlayUnarmedAttack(int AnimationIndex)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17351);

	ATslCharacter_Client_PlayUnarmedAttack_Params params;
	params.AnimationIndex = AnimationIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.Client_CastFinishNotify
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)

void ATslCharacter::Client_CastFinishNotify()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17350);

	ATslCharacter_Client_CastFinishNotify_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.Client_CastCancelNotify
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)

void ATslCharacter::Client_CastCancelNotify()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17349);

	ATslCharacter_Client_CastCancelNotify_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.CheckScopePP
// (Final, Native, Public)

void ATslCharacter::CheckScopePP()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17348);

	ATslCharacter_CheckScopePP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.CheckMuzzleCollision
// (Final, Native, Public)

void ATslCharacter::CheckMuzzleCollision()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17347);

	ATslCharacter_CheckMuzzleCollision_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.CheckMuzzleBulletSpawn
// (Final, Native, Public)

void ATslCharacter::CheckMuzzleBulletSpawn()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17346);

	ATslCharacter_CheckMuzzleBulletSpawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.CheckJumpAndVault
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// bool                           bForceVelocity                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 InForcedVelocity               (Parm, IsPlainOldData)

void ATslCharacter::CheckJumpAndVault(bool bForceVelocity, const struct FVector& InForcedVelocity)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17343);

	ATslCharacter_CheckJumpAndVault_Params params;
	params.bForceVelocity = bForceVelocity;
	params.InForcedVelocity = InForcedVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.CheckForCoat
// (Final, Native, Public, BlueprintCallable)

void ATslCharacter::CheckForCoat()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17342);

	ATslCharacter_CheckForCoat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.CheckEquipmentSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FEquipPosition          InSlotData                     (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::CheckEquipmentSlot(const struct FEquipPosition& InSlotData)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17339);

	ATslCharacter_CheckEquipmentSlot_Params params;
	params.InSlotData = InSlotData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.CanSwim
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::CanSwim()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17337);

	ATslCharacter_CanSwim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.Camera_AimoffsetFix_TppToFpp
// (Native, Event, Public, BlueprintEvent)

void ATslCharacter::Camera_AimoffsetFix_TppToFpp()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17336);

	ATslCharacter_Camera_AimoffsetFix_TppToFpp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.Camera_AimoffsetFix_FppToTpp
// (Native, Event, Public, BlueprintEvent)

void ATslCharacter::Camera_AimoffsetFix_FppToTpp()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17335);

	ATslCharacter_Camera_AimoffsetFix_FppToTpp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.BindCallbackToHUD
// (Final, Native, Public)
// Parameters:
// class ATslPlayerController*    InController                   (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::BindCallbackToHUD(class ATslPlayerController* InController)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17333);

	ATslCharacter_BindCallbackToHUD_Params params;
	params.InController = InController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.ApplyRagdollPhysicsForce
// (Final, Native, Public)

void ATslCharacter::ApplyRagdollPhysicsForce()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17332);

	ATslCharacter_ApplyRagdollPhysicsForce_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.Anim_MagazineShow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::Anim_MagazineShow(bool bShow)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17330);

	ATslCharacter_Anim_MagazineShow_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.Anim_MagazineHandAttach
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bAttach                        (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::Anim_MagazineHandAttach(bool bAttach)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17328);

	ATslCharacter_Anim_MagazineHandAttach_Params params;
	params.bAttach = bAttach;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.Anim_IsMagazineVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::Anim_IsMagazineVisible()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17326);

	ATslCharacter_Anim_IsMagazineVisible_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.AllowInteract
// (Final, Native, Protected)
// Parameters:
// class ATslCharacter*           OtherCharacter                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslCharacter::AllowInteract(class ATslCharacter* OtherCharacter)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17323);

	ATslCharacter_AllowInteract_Params params;
	params.OtherCharacter = OtherCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacter.AdminSetUpWeapon
// (Event, Public, BlueprintEvent)

void ATslCharacter::AdminSetUpWeapon()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17322);

	ATslCharacter_AdminSetUpWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.AdminInvulnerable
// (Event, Public, BlueprintEvent)

void ATslCharacter::AdminInvulnerable()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17321);

	ATslCharacter_AdminInvulnerable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.AdminFreeMoveMode
// (Event, Public, BlueprintEvent)

void ATslCharacter::AdminFreeMoveMode()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17320);

	ATslCharacter_AdminFreeMoveMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacter.AddBuffMoveSpeedFactor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          MoveSpeedFactor                (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacter::AddBuffMoveSpeedFactor(float MoveSpeedFactor)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(17318);

	ATslCharacter_AddBuffMoveSpeedFactor_Params params;
	params.MoveSpeedFactor = MoveSpeedFactor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ObserverTagWidget.UpdateWeaponIcon_Imp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USizeBox*                weaponBox                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UImage*                  weaponImage                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UObserverTagWidget::UpdateWeaponIcon_Imp(class USizeBox* weaponBox, class UImage* weaponImage)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18382);

	UObserverTagWidget_UpdateWeaponIcon_Imp_Params params;
	params.weaponBox = weaponBox;
	params.weaponImage = weaponImage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ObserverTagWidget.UpdateWeaponIcon
// (Event, Public, BlueprintEvent)

void UObserverTagWidget::UpdateWeaponIcon()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18381);

	UObserverTagWidget_UpdateWeaponIcon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ObserverTagWidget.SetTeamNumber
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// int                            TeamNumber                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            teamColor                      (Parm, IsPlainOldData)

void UObserverTagWidget::SetTeamNumber(int TeamNumber, const struct FLinearColor& teamColor)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18378);

	UObserverTagWidget_SetTeamNumber_Params params;
	params.TeamNumber = TeamNumber;
	params.teamColor = teamColor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ObserverTagWidget.SetPlayerNameTag
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FName                   PlayerName                     (Parm, ZeroConstructor, IsPlainOldData)

void UObserverTagWidget::SetPlayerNameTag(const struct FName& PlayerName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18376);

	UObserverTagWidget_SetPlayerNameTag_Params params;
	params.PlayerName = PlayerName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ObserverTagWidget.SetIndicatorColor
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FLinearColor            teamColor                      (Parm, IsPlainOldData)

void UObserverTagWidget::SetIndicatorColor(const struct FLinearColor& teamColor)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18374);

	UObserverTagWidget_SetIndicatorColor_Params params;
	params.teamColor = teamColor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ObserverTagWidget.SetCharacterIconPosition_UC
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D               Pos_UC                         (Parm, IsPlainOldData)
// bool                           IsHidden                       (Parm, ZeroConstructor, IsPlainOldData)

void UObserverTagWidget::SetCharacterIconPosition_UC(const struct FVector2D& Pos_UC, bool IsHidden)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18371);

	UObserverTagWidget_SetCharacterIconPosition_UC_Params params;
	params.Pos_UC = Pos_UC;
	params.IsHidden = IsHidden;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ObserverTagWidget.OnUpdateWidgetTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UWidget*                 CharacterNameWidget            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UWidget*                 IndicatorWidget                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector2D               Pos_UC                         (Parm, IsPlainOldData)
// bool                           IsHidden                       (Parm, ZeroConstructor, IsPlainOldData)

void UObserverTagWidget::OnUpdateWidgetTransform(class UWidget* CharacterNameWidget, class UWidget* IndicatorWidget, const struct FVector2D& Pos_UC, bool IsHidden)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18366);

	UObserverTagWidget_OnUpdateWidgetTransform_Params params;
	params.CharacterNameWidget = CharacterNameWidget;
	params.IndicatorWidget = IndicatorWidget;
	params.Pos_UC = Pos_UC;
	params.IsHidden = IsHidden;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ObserverTagWidget.IsTeamMember
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UObserverTagWidget::IsTeamMember()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18364);

	UObserverTagWidget_IsTeamMember_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.ObserverTagWidget.IsLastSpectatedCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UObserverTagWidget::IsLastSpectatedCharacter()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18362);

	UObserverTagWidget_IsLastSpectatedCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.ObserverTagWidget.HandleWidgetPrepass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                 Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UObserverTagWidget::HandleWidgetPrepass(class UWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18360);

	UObserverTagWidget_HandleWidgetPrepass_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ObserverTagWidget.HandleWeaponImagePrepass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                 Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UObserverTagWidget::HandleWeaponImagePrepass(class UWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18358);

	UObserverTagWidget_HandleWeaponImagePrepass_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ObserverTagWidget.HandleTeamNumberPrepass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                 Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UObserverTagWidget::HandleTeamNumberPrepass(class UWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18356);

	UObserverTagWidget_HandleTeamNumberPrepass_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ObserverTagWidget.GetTeamId
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslCharacter*           TslCharacter                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UObserverTagWidget::GetTeamId(class ATslCharacter* TslCharacter)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18353);

	UObserverTagWidget_GetTeamId_Params params;
	params.TslCharacter = TslCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.ObserverTagWidget.GetTeamColor
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslCharacter*           TslCharacter                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FLinearColor UObserverTagWidget::GetTeamColor(class ATslCharacter* TslCharacter)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18350);

	UObserverTagWidget_GetTeamColor_Params params;
	params.TslCharacter = TslCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.ObserverTagManagerBaseWidget.UpdateReplicateCharacter
// (Final, Native, Public, BlueprintCallable)

void UObserverTagManagerBaseWidget::UpdateReplicateCharacter()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18399);

	UObserverTagManagerBaseWidget_UpdateReplicateCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ObserverTagManagerBaseWidget.RemoveReplicateCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class ATslCharacter*>   Characters                     (Parm, ZeroConstructor)

void UObserverTagManagerBaseWidget::RemoveReplicateCharacter(TArray<class ATslCharacter*> Characters)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18396);

	UObserverTagManagerBaseWidget_RemoveReplicateCharacter_Params params;
	params.Characters = Characters;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ObserverTagManagerBaseWidget.AddReplicateCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class ATslCharacter*>   Characters                     (Parm, ZeroConstructor)

void UObserverTagManagerBaseWidget::AddReplicateCharacter(TArray<class ATslCharacter*> Characters)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18393);

	UObserverTagManagerBaseWidget_AddReplicateCharacter_Params params;
	params.Characters = Characters;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleInterface.GetVehicleMeshComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USkeletalMeshComponent* UTslVehicleInterface::GetVehicleMeshComponent()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18403);

	UTslVehicleInterface_GetVehicleMeshComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslVehicleInterface.GetTslPlayerController
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslPlayerController*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslPlayerController* UTslVehicleInterface::GetTslPlayerController()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18401);

	UTslVehicleInterface_GetTslPlayerController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.ParachuteVehicle.ServerRelease
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AParachuteVehicle::ServerRelease()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18439);

	AParachuteVehicle_ServerRelease_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ParachuteVehicle.PhysicsVolumeChanged
// (Final, Native, Private)
// Parameters:
// class APhysicsVolume*          NewVolume                      (Parm, ZeroConstructor, IsPlainOldData)

void AParachuteVehicle::PhysicsVolumeChanged(class APhysicsVolume* NewVolume)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18437);

	AParachuteVehicle_PhysicsVolumeChanged_Params params;
	params.NewVolume = NewVolume;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ParachuteVehicle.OnSecondInteractBy
// (Final, Native, Private)
// Parameters:
// class ATslCharacter*           Character                      (Parm, ZeroConstructor, IsPlainOldData)

void AParachuteVehicle::OnSecondInteractBy(class ATslCharacter* Character)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18435);

	AParachuteVehicle_OnSecondInteractBy_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ParachuteVehicle.OnRide
// (Final, Native, Private)
// Parameters:
// class ATslCharacter*           Rider                          (Parm, ZeroConstructor, IsPlainOldData)
// class UVehicleSeatInteractionComponent* Seat                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AParachuteVehicle::OnRide(class ATslCharacter* Rider, class UVehicleSeatInteractionComponent* Seat)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18432);

	AParachuteVehicle_OnRide_Params params;
	params.Rider = Rider;
	params.Seat = Seat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ParachuteVehicle.OnRep_SkinData
// (Final, Native, Private)

void AParachuteVehicle::OnRep_SkinData()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18431);

	AParachuteVehicle_OnRep_SkinData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ParachuteVehicle.OnRep_IsReleased
// (Final, Native, Private)

void AParachuteVehicle::OnRep_IsReleased()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18430);

	AParachuteVehicle_OnRep_IsReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ParachuteVehicle.OnRep_IsDriven
// (Final, Native, Private)

void AParachuteVehicle::OnRep_IsDriven()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18429);

	AParachuteVehicle_OnRep_IsDriven_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ParachuteVehicle.OnPostDriverLeave
// (Final, Native, Private)

void AParachuteVehicle::OnPostDriverLeave()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18428);

	AParachuteVehicle_OnPostDriverLeave_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ParachuteVehicle.OnInteractBy
// (Final, Native, Private)
// Parameters:
// class ATslCharacter*           Character                      (Parm, ZeroConstructor, IsPlainOldData)

void AParachuteVehicle::OnInteractBy(class ATslCharacter* Character)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18426);

	AParachuteVehicle_OnInteractBy_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ParachuteVehicle.OnDriverRide
// (Final, Native, Private)

void AParachuteVehicle::OnDriverRide()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18425);

	AParachuteVehicle_OnDriverRide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ParachuteVehicle.OnDriverLeave
// (Final, Native, Private)

void AParachuteVehicle::OnDriverLeave()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18424);

	AParachuteVehicle_OnDriverLeave_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ParachuteVehicle.Land
// (Final, Net, Native, Event, NetMulticast, Private)

void AParachuteVehicle::Land()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18423);

	AParachuteVehicle_Land_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ParachuteVehicle.IsStuck
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AParachuteVehicle::IsStuck()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18421);

	AParachuteVehicle_IsStuck_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.ParachuteVehicle.IsReleased
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AParachuteVehicle::IsReleased()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18419);

	AParachuteVehicle_IsReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.ParachuteVehicle.IsDriven
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AParachuteVehicle::IsDriven()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18417);

	AParachuteVehicle_IsDriven_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.ParachuteVehicle.GetAltitudeFromFloor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AParachuteVehicle::GetAltitudeFromFloor()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18415);

	AParachuteVehicle_GetAltitudeFromFloor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.ParachuteVehicle.CanReleaseByInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AParachuteVehicle::CanReleaseByInput()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18413);

	AParachuteVehicle_CanReleaseByInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.ParachuteVehicle.CanRelease
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AParachuteVehicle::CanRelease()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18411);

	AParachuteVehicle_CanRelease_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.ParachuteVehicle.AllowSecondInteractBy
// (Final, Native, Private)
// Parameters:
// class ATslCharacter*           Character                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AParachuteVehicle::AllowSecondInteractBy(class ATslCharacter* Character)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18408);

	AParachuteVehicle_AllowSecondInteractBy_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.ParachuteVehicle.AllowInteractBy
// (Final, Native, Private)
// Parameters:
// class ATslCharacter*           Character                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AParachuteVehicle::AllowInteractBy(class ATslCharacter* Character)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18405);

	AParachuteVehicle_AllowInteractBy_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.ReplicationTrigger.EnableReplicationGroup
// (Final, Native, Private)

void AReplicationTrigger::EnableReplicationGroup()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18480);

	AReplicationTrigger_EnableReplicationGroup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.SceneInteractionComponent.GetInteractiveObjectName
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText USceneInteractionComponent::GetInteractiveObjectName()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18502);

	USceneInteractionComponent_GetInteractiveObjectName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SceneInteractionComponent.GetInteractionVerb
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText USceneInteractionComponent::GetInteractionVerb()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18500);

	USceneInteractionComponent_GetInteractionVerb_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.SceneInteractionComponent.AllowInteractBy
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ATslCharacter*           Character                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USceneInteractionComponent::AllowInteractBy(class ATslCharacter* Character)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18497);

	USceneInteractionComponent_AllowInteractBy_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.DoorInteractionComponent.OnRep_DoorState
// (Final, Native, Protected)
// Parameters:
// EDoorState                     PrevDoorState                  (Parm, ZeroConstructor, IsPlainOldData)

void UDoorInteractionComponent::OnRep_DoorState(EDoorState PrevDoorState)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18514);

	UDoorInteractionComponent_OnRep_DoorState_Params params;
	params.PrevDoorState = PrevDoorState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.DoorInteractionComponent.AllowInteract
// (Final, Native, Protected)
// Parameters:
// class ATslCharacter*           OtherCharacter                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDoorInteractionComponent::AllowInteract(class ATslCharacter* OtherCharacter)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18511);

	UDoorInteractionComponent_AllowInteract_Params params;
	params.OtherCharacter = OtherCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.DroppedItemInteractionComponent.OnRep_Item
// (Final, Native, Private)

void UDroppedItemInteractionComponent::OnRep_Item()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18527);

	UDroppedItemInteractionComponent_OnRep_Item_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.DroppedItemInteractionComponent.AllowInteractBy
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ATslCharacter*           Character                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDroppedItemInteractionComponent::AllowInteractBy(class ATslCharacter* Character)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18524);

	UDroppedItemInteractionComponent_AllowInteractBy_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatInteractionComponent.OnRep_Rider
// (Final, Native, Private)

void UVehicleSeatInteractionComponent::OnRep_Rider()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18581);

	UVehicleSeatInteractionComponent_OnRep_Rider_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VehicleSeatInteractionComponent.OnInteractDelegate
// (Native, Protected)
// Parameters:
// class ATslCharacter*           OtherCharacter                 (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleSeatInteractionComponent::OnInteractDelegate(class ATslCharacter* OtherCharacter)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18579);

	UVehicleSeatInteractionComponent_OnInteractDelegate_Params params;
	params.OtherCharacter = OtherCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VehicleSeatInteractionComponent.IsWeaponClassAllowed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EWeaponClass                   InClass                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UVehicleSeatInteractionComponent::IsWeaponClassAllowed(EWeaponClass InClass)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18575);

	UVehicleSeatInteractionComponent_IsWeaponClassAllowed_Params params;
	params.InClass = InClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatInteractionComponent.IsEntryAllowedByVelocity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UVehicleSeatInteractionComponent::IsEntryAllowedByVelocity()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18573);

	UVehicleSeatInteractionComponent_IsEntryAllowedByVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatInteractionComponent.GetVehicleSeatComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTslVehicleSeatComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UTslVehicleSeatComponent* UVehicleSeatInteractionComponent::GetVehicleSeatComponent()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18571);

	UVehicleSeatInteractionComponent_GetVehicleSeatComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatInteractionComponent.GetVehiclePawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APawn*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APawn* UVehicleSeatInteractionComponent::GetVehiclePawn()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18569);

	UVehicleSeatInteractionComponent_GetVehiclePawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatInteractionComponent.GetVehicleInterface
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class UTslVehicleInterface> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TScriptInterface<class UTslVehicleInterface> UVehicleSeatInteractionComponent::GetVehicleInterface()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18567);

	UVehicleSeatInteractionComponent_GetVehicleInterface_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatInteractionComponent.GetVehicleAnimType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EVehicleAnimType               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EVehicleAnimType UVehicleSeatInteractionComponent::GetVehicleAnimType()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18564);

	UVehicleSeatInteractionComponent_GetVehicleAnimType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatInteractionComponent.GetTransitionOutBlendspace
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBlendSpaceBase*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UBlendSpaceBase* UVehicleSeatInteractionComponent::GetTransitionOutBlendspace()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18562);

	UVehicleSeatInteractionComponent_GetTransitionOutBlendspace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatInteractionComponent.GetTransitionInBlendspace
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBlendSpaceBase*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UBlendSpaceBase* UVehicleSeatInteractionComponent::GetTransitionInBlendspace()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18560);

	UVehicleSeatInteractionComponent_GetTransitionInBlendspace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatInteractionComponent.GetSeatIdleAO
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAimOffsetBlendSpace*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAimOffsetBlendSpace* UVehicleSeatInteractionComponent::GetSeatIdleAO()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18558);

	UVehicleSeatInteractionComponent_GetSeatIdleAO_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatInteractionComponent.GetSeatIdleAnimation_Unarmed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequenceBase*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimSequenceBase* UVehicleSeatInteractionComponent::GetSeatIdleAnimation_Unarmed()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18556);

	UVehicleSeatInteractionComponent_GetSeatIdleAnimation_Unarmed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatInteractionComponent.GetSeatIdleAnimation_Rifle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequenceBase*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimSequenceBase* UVehicleSeatInteractionComponent::GetSeatIdleAnimation_Rifle()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18554);

	UVehicleSeatInteractionComponent_GetSeatIdleAnimation_Rifle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatInteractionComponent.GetSeatIdleAnimation_Melee
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequenceBase*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimSequenceBase* UVehicleSeatInteractionComponent::GetSeatIdleAnimation_Melee()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18552);

	UVehicleSeatInteractionComponent_GetSeatIdleAnimation_Melee_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatInteractionComponent.GetSeatIdleAnimation_Grenade
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequenceBase*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimSequenceBase* UVehicleSeatInteractionComponent::GetSeatIdleAnimation_Grenade()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18550);

	UVehicleSeatInteractionComponent_GetSeatIdleAnimation_Grenade_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatInteractionComponent.GetSeatAimingFPPBlendspace
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBlendSpaceBase*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UBlendSpaceBase* UVehicleSeatInteractionComponent::GetSeatAimingFPPBlendspace()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18548);

	UVehicleSeatInteractionComponent_GetSeatAimingFPPBlendspace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatInteractionComponent.GetSeatAimingBlendspace
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBlendSpaceBase*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UBlendSpaceBase* UVehicleSeatInteractionComponent::GetSeatAimingBlendspace()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18546);

	UVehicleSeatInteractionComponent_GetSeatAimingBlendspace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatInteractionComponent.GetRider
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslCharacter*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslCharacter* UVehicleSeatInteractionComponent::GetRider()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18544);

	UVehicleSeatInteractionComponent_GetRider_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatInteractionComponent.GetMinPitchByYaw
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          CurrentYaw                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UVehicleSeatInteractionComponent::GetMinPitchByYaw(float CurrentYaw)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18541);

	UVehicleSeatInteractionComponent_GetMinPitchByYaw_Params params;
	params.CurrentYaw = CurrentYaw;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatInteractionComponent.GetMaxPitchByYaw
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          CurrentYaw                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UVehicleSeatInteractionComponent::GetMaxPitchByYaw(float CurrentYaw)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18538);

	UVehicleSeatInteractionComponent_GetMaxPitchByYaw_Params params;
	params.CurrentYaw = CurrentYaw;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatInteractionComponent.GetCanFireOnlyWhileAimed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UVehicleSeatInteractionComponent::GetCanFireOnlyWhileAimed()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18536);

	UVehicleSeatInteractionComponent_GetCanFireOnlyWhileAimed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatInteractionComponent.GetAdditionalMessage
// (Native, Public, Const)
// Parameters:
// class ATslCharacter*           Character                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UVehicleSeatInteractionComponent::GetAdditionalMessage(class ATslCharacter* Character)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18533);

	UVehicleSeatInteractionComponent_GetAdditionalMessage_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VehicleSeatInteractionComponent.AllowInteractDelegate
// (Native, Protected)
// Parameters:
// class ATslCharacter*           OtherCharacter                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UVehicleSeatInteractionComponent::AllowInteractDelegate(class ATslCharacter* OtherCharacter)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18530);

	UVehicleSeatInteractionComponent_AllowInteractDelegate_Params params;
	params.OtherCharacter = OtherCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.MotorbikeVehicleSeatInteraction.IsEntryAllowed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslCharacter*           InCharacter                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UMotorbikeVehicleSeatInteraction::IsEntryAllowed(class ATslCharacter* InCharacter)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18615);

	UMotorbikeVehicleSeatInteraction_IsEntryAllowed_Params params;
	params.InCharacter = InCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.MotorbikeVehicleSeatInteraction.HandleFlipAndKickstand
// (Final, Native, Public, BlueprintCallable)

void UMotorbikeVehicleSeatInteraction::HandleFlipAndKickstand()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18614);

	UMotorbikeVehicleSeatInteraction_HandleFlipAndKickstand_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.FreeFallMovement.ServerUpdateInput
// (Final, Net, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// float                          InForwardInput                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          InRightInput                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          InDesiredPitchRotation         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          InDesiredYawRotation           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UFreeFallMovement::ServerUpdateInput(float InForwardInput, float InRightInput, float InDesiredPitchRotation, float InDesiredYawRotation)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18662);

	UFreeFallMovement_ServerUpdateInput_Params params;
	params.InForwardInput = InForwardInput;
	params.InRightInput = InRightInput;
	params.InDesiredPitchRotation = InDesiredPitchRotation;
	params.InDesiredYawRotation = InDesiredYawRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.FreeFallMovement.GetRightInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFreeFallMovement::GetRightInput()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18660);

	UFreeFallMovement_GetRightInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.FreeFallMovement.GetForwardInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFreeFallMovement::GetForwardInput()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18658);

	UFreeFallMovement_GetForwardInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.ParachuteVehicleMovement.ServerUpdateInput
// (Final, Net, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// float                          InForwardInput                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          InRotationInput                (Parm, ZeroConstructor, IsPlainOldData)

void UParachuteVehicleMovement::ServerUpdateInput(float InForwardInput, float InRotationInput)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18688);

	UParachuteVehicleMovement_ServerUpdateInput_Params params;
	params.InForwardInput = InForwardInput;
	params.InRotationInput = InRotationInput;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ParachuteVehicleMovement.GetRotationYawRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UParachuteVehicleMovement::GetRotationYawRate()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18686);

	UParachuteVehicleMovement_GetRotationYawRate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.ParachuteVehicleMovement.GetRotationInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UParachuteVehicleMovement::GetRotationInput()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18684);

	UParachuteVehicleMovement_GetRotationInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.ParachuteVehicleMovement.GetForwardInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UParachuteVehicleMovement::GetForwardInput()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18682);

	UParachuteVehicleMovement_GetForwardInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.ParachuteVehicleMovement.GetClientRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator UParachuteVehicleMovement::GetClientRotation()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18680);

	UParachuteVehicleMovement_GetClientRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.StanceComponent.ServerForceInitStance
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void UStanceComponent::ServerForceInitStance()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18764);

	UStanceComponent_ServerForceInitStance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.StanceComponent.ServerChangeStance
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// TEnumAsByte<EStanceMode>       ToStance                       (Parm, ZeroConstructor, IsPlainOldData)

void UStanceComponent::ServerChangeStance(TEnumAsByte<EStanceMode> ToStance)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18762);

	UStanceComponent_ServerChangeStance_Params params;
	params.ToStance = ToStance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.StanceComponent.OnRep_CurrentStance
// (Native, Public)
// Parameters:
// TEnumAsByte<EStanceMode>       OldCurrentStand                (Parm, ZeroConstructor, IsPlainOldData)

void UStanceComponent::OnRep_CurrentStance(TEnumAsByte<EStanceMode> OldCurrentStand)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18760);

	UStanceComponent_OnRep_CurrentStance_Params params;
	params.OldCurrentStand = OldCurrentStand;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.StanceComponent.ClientInitByReconnection
// (Final, Net, NetReliable, Native, Event, Private, NetClient, NetValidate)
// Parameters:
// TEnumAsByte<EStanceMode>       InitStance                     (Parm, ZeroConstructor, IsPlainOldData)

void UStanceComponent::ClientInitByReconnection(TEnumAsByte<EStanceMode> InitStance)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18758);

	UStanceComponent_ClientInitByReconnection_Params params;
	params.InitStance = InitStance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerStart.GetRandomStartYawRotation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslPlayerStart::GetRandomStartYawRotation()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18774);

	ATslPlayerStart_GetRandomStartYawRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerStart.GetRandomStartLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ATslPlayerStart::GetRandomStartLocation()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18772);

	ATslPlayerStart_GetRandomStartLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.InventoryFacade.IsAutoSwappable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EEquipSlotID                   SlotID                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AInventoryFacade::IsAutoSwappable(EEquipSlotID SlotID)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18807);

	AInventoryFacade_IsAutoSwappable_Params params;
	params.SlotID = SlotID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.InventoryFacade.HasItemByClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AInventoryFacade::HasItemByClass(class UClass* ItemClass)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18804);

	AInventoryFacade_HasItemByClass_Params params;
	params.ItemClass = ItemClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.InventoryFacade.GiveItem_Admin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)

void AInventoryFacade::GiveItem_Admin(class UClass* ItemClass)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18802);

	AInventoryFacade_GiveItem_Admin_Params params;
	params.ItemClass = ItemClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.InventoryFacade.GetOwnerCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslCharacter*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslCharacter* AInventoryFacade::GetOwnerCharacter()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18800);

	AInventoryFacade_GetOwnerCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.InventoryFacade.GetInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AInventory*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AInventory* AInventoryFacade::GetInventory()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18798);

	AInventoryFacade_GetInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.InventoryFacade.GetEquipment
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AEquipment*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AEquipment* AInventoryFacade::GetEquipment()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18796);

	AInventoryFacade_GetEquipment_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Equipment.WeaponIndexToEquipPosition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            WeaponIndex                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FEquipPosition          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FEquipPosition AEquipment::WeaponIndexToEquipPosition(int WeaponIndex)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18905);

	AEquipment_WeaponIndexToEquipPosition_Params params;
	params.WeaponIndex = WeaponIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Equipment.WeaponAttachmentSwap
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FEquipPosition          SourceWeapon                   (Parm)
// struct FEquipPosition          TargetWeapon                   (Parm)
// struct FName                   ItemClassForVerify             (Parm, ZeroConstructor, IsPlainOldData)
// EWeaponAttachmentSlotID        AttachmentSlotID               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSoundPlay                     (Parm, ZeroConstructor, IsPlainOldData)

void AEquipment::WeaponAttachmentSwap(const struct FEquipPosition& SourceWeapon, const struct FEquipPosition& TargetWeapon, const struct FName& ItemClassForVerify, EWeaponAttachmentSlotID AttachmentSlotID, bool bSoundPlay)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18898);

	AEquipment_WeaponAttachmentSwap_Params params;
	params.SourceWeapon = SourceWeapon;
	params.TargetWeapon = TargetWeapon;
	params.ItemClassForVerify = ItemClassForVerify;
	params.AttachmentSlotID = AttachmentSlotID;
	params.bSoundPlay = bSoundPlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.Equipment.UnequipItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FEquipPosition          Position                       (Parm)
// struct FName                   ItemClassForVerify             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSoundPlay                     (Parm, ZeroConstructor, IsPlainOldData)

void AEquipment::UnequipItem(const struct FEquipPosition& Position, const struct FName& ItemClassForVerify, bool bSoundPlay)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18894);

	AEquipment_UnequipItem_Params params;
	params.Position = Position;
	params.ItemClassForVerify = ItemClassForVerify;
	params.bSoundPlay = bSoundPlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.Equipment.TryEquipItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UItem*                   Item                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSoundPlay                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSwap                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AEquipment::TryEquipItem(class UItem* Item, bool bSoundPlay, bool bSwap)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18889);

	AEquipment_TryEquipItem_Params params;
	params.Item = Item;
	params.bSoundPlay = bSoundPlay;
	params.bSwap = bSwap;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Equipment.PrimaryWeaponSwap
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FEquipPosition          EquipPosition                  (Parm)
// struct FString                 Options                        (Parm, ZeroConstructor)

void AEquipment::PrimaryWeaponSwap(const struct FEquipPosition& EquipPosition, const struct FString& Options)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18886);

	AEquipment_PrimaryWeaponSwap_Params params;
	params.EquipPosition = EquipPosition;
	params.Options = Options;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.Equipment.Items_RepNotify
// (Final, Native, Protected)

void AEquipment::Items_RepNotify()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18885);

	AEquipment_Items_RepNotify_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.Equipment.IsSwapablePrimaryWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FEquipPosition          EquipPosition                  (Parm)
// struct FString                 Options                        (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AEquipment::IsSwapablePrimaryWeapon(const struct FEquipPosition& EquipPosition, const struct FString& Options)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18881);

	AEquipment_IsSwapablePrimaryWeapon_Params params;
	params.EquipPosition = EquipPosition;
	params.Options = Options;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Equipment.IsAttachableToWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            WeaponIndex                    (Parm, ZeroConstructor, IsPlainOldData)
// class UAttachableItem*         AttachableItem                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bOnlyFree                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AEquipment::IsAttachableToWeapon(int WeaponIndex, class UAttachableItem* AttachableItem, bool bOnlyFree)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18876);

	AEquipment_IsAttachableToWeapon_Params params;
	params.WeaponIndex = WeaponIndex;
	params.AttachableItem = AttachableItem;
	params.bOnlyFree = bOnlyFree;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Equipment.GetOwnerCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslCharacter*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslCharacter* AEquipment::GetOwnerCharacter()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18874);

	AEquipment_GetOwnerCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Equipment.GetItemCountByClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AEquipment::GetItemCountByClass(class UClass* ItemClass)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18871);

	AEquipment_GetItemCountByClass_Params params;
	params.ItemClass = ItemClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Equipment.GetItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FEquipPosition          Position                       (Parm)
// class UEquipableItem*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UEquipableItem* AEquipment::GetItem(const struct FEquipPosition& Position)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18868);

	AEquipment_GetItem_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Equipment.GetInventoryFacade
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AInventoryFacade*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AInventoryFacade* AEquipment::GetInventoryFacade()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18866);

	AEquipment_GetInventoryFacade_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Equipment.FindPosition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UItem*                   Item                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FEquipPosition          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FEquipPosition AEquipment::FindPosition(class UItem* Item)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18863);

	AEquipment_FindPosition_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Equipment.FindEquipPosition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EEquipSlotID                   SlotID                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bOnlyFree                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FEquipPosition          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FEquipPosition AEquipment::FindEquipPosition(EEquipSlotID SlotID, bool bOnlyFree)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18858);

	AEquipment_FindEquipPosition_Params params;
	params.SlotID = SlotID;
	params.bOnlyFree = bOnlyFree;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Equipment.FindEquipableWeaponPosition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UEquipableItem*          EquipableItem                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 Options                        (Parm, ZeroConstructor)
// struct FEquipPosition          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FEquipPosition AEquipment::FindEquipableWeaponPosition(class UEquipableItem* EquipableItem, const struct FString& Options)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18854);

	AEquipment_FindEquipableWeaponPosition_Params params;
	params.EquipableItem = EquipableItem;
	params.Options = Options;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Equipment.FindAttachableWeaponIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAttachableItem*         AttachableItem                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 Options                        (Parm, ZeroConstructor)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AEquipment::FindAttachableWeaponIndex(class UAttachableItem* AttachableItem, const struct FString& Options)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18850);

	AEquipment_FindAttachableWeaponIndex_Params params;
	params.AttachableItem = AttachableItem;
	params.Options = Options;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Equipment.EquipPositionToWeaponIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FEquipPosition          Position                       (Parm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AEquipment::EquipPositionToWeaponIndex(const struct FEquipPosition& Position)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18847);

	AEquipment_EquipPositionToWeaponIndex_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Equipment.EquipItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FEquipPosition          Position                       (Parm)
// class UEquipableItem*          Item                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bCheckViaCanEquipTo            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSoundPlay                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AEquipment::EquipItem(const struct FEquipPosition& Position, class UEquipableItem* Item, bool bCheckViaCanEquipTo, bool bSoundPlay)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18841);

	AEquipment_EquipItem_Params params;
	params.Position = Position;
	params.Item = Item;
	params.bCheckViaCanEquipTo = bCheckViaCanEquipTo;
	params.bSoundPlay = bSoundPlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Equipment.DropItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FEquipPosition          Position                       (Parm)
// struct FName                   ItemClassForVerify             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIsForce                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSoundPlay                     (Parm, ZeroConstructor, IsPlainOldData)

void AEquipment::DropItem(const struct FEquipPosition& Position, const struct FName& ItemClassForVerify, bool bIsForce, bool bSoundPlay)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18836);

	AEquipment_DropItem_Params params;
	params.Position = Position;
	params.ItemClassForVerify = ItemClassForVerify;
	params.bIsForce = bIsForce;
	params.bSoundPlay = bSoundPlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.Equipment.DropAttachedItemAll
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FEquipPosition          EquipPosition                  (Parm)
// struct FName                   ItemClassForVerify             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSoundPlay                     (Parm, ZeroConstructor, IsPlainOldData)

void AEquipment::DropAttachedItemAll(const struct FEquipPosition& EquipPosition, const struct FName& ItemClassForVerify, bool bSoundPlay)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18832);

	AEquipment_DropAttachedItemAll_Params params;
	params.EquipPosition = EquipPosition;
	params.ItemClassForVerify = ItemClassForVerify;
	params.bSoundPlay = bSoundPlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.Equipment.DropAttachedItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FEquipPosition          EquipPosition                  (Parm)
// struct FName                   ItemClassForVerify             (Parm, ZeroConstructor, IsPlainOldData)
// EWeaponAttachmentSlotID        SlotID                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSoundPlay                     (Parm, ZeroConstructor, IsPlainOldData)

void AEquipment::DropAttachedItem(const struct FEquipPosition& EquipPosition, const struct FName& ItemClassForVerify, EWeaponAttachmentSlotID SlotID, bool bSoundPlay)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18826);

	AEquipment_DropAttachedItem_Params params;
	params.EquipPosition = EquipPosition;
	params.ItemClassForVerify = ItemClassForVerify;
	params.SlotID = SlotID;
	params.bSoundPlay = bSoundPlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.Equipment.DetachItemAll
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FEquipPosition          EquipPosition                  (Parm)
// struct FName                   ItemClassForVerify             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSoundPlay                     (Parm, ZeroConstructor, IsPlainOldData)

void AEquipment::DetachItemAll(const struct FEquipPosition& EquipPosition, const struct FName& ItemClassForVerify, bool bSoundPlay)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18822);

	AEquipment_DetachItemAll_Params params;
	params.EquipPosition = EquipPosition;
	params.ItemClassForVerify = ItemClassForVerify;
	params.bSoundPlay = bSoundPlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.Equipment.DetachItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FEquipPosition          EquipPosition                  (Parm)
// struct FName                   ItemClassForVerify             (Parm, ZeroConstructor, IsPlainOldData)
// EWeaponAttachmentSlotID        SlotID                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSoundPlay                     (Parm, ZeroConstructor, IsPlainOldData)

void AEquipment::DetachItem(const struct FEquipPosition& EquipPosition, const struct FName& ItemClassForVerify, EWeaponAttachmentSlotID SlotID, bool bSoundPlay)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18816);

	AEquipment_DetachItem_Params params;
	params.EquipPosition = EquipPosition;
	params.ItemClassForVerify = ItemClassForVerify;
	params.SlotID = SlotID;
	params.bSoundPlay = bSoundPlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.Inventory.UseItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ItemClassForVerify             (Parm, ZeroConstructor, IsPlainOldData)

void AInventory::UseItem(int Index, const struct FName& ItemClassForVerify)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18973);

	AInventory_UseItem_Params params;
	params.Index = Index;
	params.ItemClassForVerify = ItemClassForVerify;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.Inventory.OnFinishUseCast
// (Final, Native, Private)
// Parameters:
// class UObject*                 CastObject                     (Parm, ZeroConstructor, IsPlainOldData)

void AInventory::OnFinishUseCast(class UObject* CastObject)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18971);

	AInventory_OnFinishUseCast_Params params;
	params.CastObject = CastObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.Inventory.Items_RepNotify
// (Final, Native, Protected)

void AInventory::Items_RepNotify()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18970);

	AInventory_Items_RepNotify_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.Inventory.GetOwnerCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslCharacter*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslCharacter* AInventory::GetOwnerCharacter()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18968);

	AInventory_GetOwnerCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Inventory.GetMaxSpace
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AInventory::GetMaxSpace()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18966);

	AInventory_GetMaxSpace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Inventory.GetItemCountByClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AInventory::GetItemCountByClass(class UClass* ItemClass)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18963);

	AInventory_GetItemCountByClass_Params params;
	params.ItemClass = ItemClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Inventory.GetItemCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AInventory::GetItemCount()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18961);

	AInventory_GetItemCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Inventory.GetInventoryFacade
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AInventoryFacade*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AInventoryFacade* AInventory::GetInventoryFacade()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18959);

	AInventory_GetInventoryFacade_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Inventory.GetCurrentSpace
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AInventory::GetCurrentSpace()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18957);

	AInventory_GetCurrentSpace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Inventory.GetAllItemsByType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ItemSuperClass                 (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FInventoryItem>  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FInventoryItem> AInventory::GetAllItemsByType(class UClass* ItemSuperClass)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18953);

	AInventory_GetAllItemsByType_Params params;
	params.ItemSuperClass = ItemSuperClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Inventory.GetAllItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FInventoryItem>  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FInventoryItem> AInventory::GetAllItems()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18950);

	AInventory_GetAllItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Inventory.GetAdditionalMaxCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UItem*                   Item                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AInventory::GetAdditionalMaxCount(class UItem* Item)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18947);

	AInventory_GetAdditionalMaxCount_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Inventory.FindItemIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UItem*                   Item                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AInventory::FindItemIndex(class UItem* Item)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18944);

	AInventory_FindItemIndex_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Inventory.FindItemHasMinStack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// class UItem*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UItem* AInventory::FindItemHasMinStack(class UClass* ItemClass)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18941);

	AInventory_FindItemHasMinStack_Params params;
	params.ItemClass = ItemClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Inventory.FindItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// class UItem*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UItem* AInventory::FindItem(class UClass* ItemClass)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18938);

	AInventory_FindItem_Params params;
	params.ItemClass = ItemClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Inventory.EquipOrDropItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ItemClassForVerify             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSoundPlay                     (Parm, ZeroConstructor, IsPlainOldData)

void AInventory::EquipOrDropItem(int Index, const struct FName& ItemClassForVerify, bool bSoundPlay)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18934);

	AInventory_EquipOrDropItem_Params params;
	params.Index = Index;
	params.ItemClassForVerify = ItemClassForVerify;
	params.bSoundPlay = bSoundPlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.Inventory.EquipItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ItemClassForVerify             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSoundPlay                     (Parm, ZeroConstructor, IsPlainOldData)

void AInventory::EquipItem(int Index, const struct FName& ItemClassForVerify, bool bSoundPlay)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18930);

	AInventory_EquipItem_Params params;
	params.Index = Index;
	params.ItemClassForVerify = ItemClassForVerify;
	params.bSoundPlay = bSoundPlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.Inventory.DropItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ItemClassForVerify             (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 Options                        (Parm, ZeroConstructor)
// bool                           bSoundPlay                     (Parm, ZeroConstructor, IsPlainOldData)

void AInventory::DropItem(int Index, const struct FName& ItemClassForVerify, const struct FString& Options, bool bSoundPlay)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18925);

	AInventory_DropItem_Params params;
	params.Index = Index;
	params.ItemClassForVerify = ItemClassForVerify;
	params.Options = Options;
	params.bSoundPlay = bSoundPlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.Inventory.ConsumeItemByClass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AInventory::ConsumeItemByClass(class UClass* ItemClass, int Count)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18921);

	AInventory_ConsumeItemByClass_Params params;
	params.ItemClass = ItemClass;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Inventory.ClientBroadcastNoBagSpaceEvent
// (Net, Native, Event, Public, NetClient)

void AInventory::ClientBroadcastNoBagSpaceEvent()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18920);

	AInventory_ClientBroadcastNoBagSpaceEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.Inventory.AttachOrDropItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ItemClassForVerify             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSoundPlay                     (Parm, ZeroConstructor, IsPlainOldData)

void AInventory::AttachOrDropItem(int Index, const struct FName& ItemClassForVerify, bool bSoundPlay)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18916);

	AInventory_AttachOrDropItem_Params params;
	params.Index = Index;
	params.ItemClassForVerify = ItemClassForVerify;
	params.bSoundPlay = bSoundPlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.Inventory.AttachItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ItemClassForVerify             (Parm, ZeroConstructor, IsPlainOldData)
// struct FEquipPosition          EquipPosition                  (Parm)
// bool                           bSoundPlay                     (Parm, ZeroConstructor, IsPlainOldData)

void AInventory::AttachItem(int Index, const struct FName& ItemClassForVerify, const struct FEquipPosition& EquipPosition, bool bSoundPlay)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18911);

	AInventory_AttachItem_Params params;
	params.Index = Index;
	params.ItemClassForVerify = ItemClassForVerify;
	params.EquipPosition = EquipPosition;
	params.bSoundPlay = bSoundPlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ItemExplorerProxy.PropagateUpdateItemList
// (Final, Native, Private)

void AItemExplorerProxy::PropagateUpdateItemList()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18986);

	AItemExplorerProxy_PropagateUpdateItemList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ItemExplorerProxy.PropagateDestroyContextMenuWidget
// (Final, Native, Private)

void AItemExplorerProxy::PropagateDestroyContextMenuWidget()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18985);

	AItemExplorerProxy_PropagateDestroyContextMenuWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ItemExplorerProxy.PropagateCreateAndShowContextMenuWidget
// (Final, Native, Private)
// Parameters:
// TScriptInterface<class USlotContainerInterface> Param                          (Parm, ZeroConstructor, IsPlainOldData)

void AItemExplorerProxy::PropagateCreateAndShowContextMenuWidget(const TScriptInterface<class USlotContainerInterface>& Param)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18983);

	AItemExplorerProxy_PropagateCreateAndShowContextMenuWidget_Params params;
	params.Param = Param;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ItemExplorerProxy.Pop
// (Final, Native, Public, BlueprintCallable)

void AItemExplorerProxy::Pop()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18982);

	AItemExplorerProxy_Pop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.ItemExplorerProxy.IsBaseExplorer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AItemExplorerProxy::IsBaseExplorer()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18980);

	AItemExplorerProxy_IsBaseExplorer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CarePackageItem.IsPickupedItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACarePackageItem::IsPickupedItem()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18990);

	ACarePackageItem_IsPickupedItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CarePackageItem.IsFalling
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ACarePackageItem::IsFalling()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(18988);

	ACarePackageItem_IsFalling_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Team.ServerSetShowMapMarker
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// bool                           bNewShowMapMarker              (Parm, ZeroConstructor, IsPlainOldData)

void ATeam::ServerSetShowMapMarker(bool bNewShowMapMarker)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19069);

	ATeam_ServerSetShowMapMarker_Params params;
	params.bNewShowMapMarker = bNewShowMapMarker;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.Team.ServerSetMapMarkerPosition
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, BlueprintCallable, NetValidate)
// Parameters:
// struct FVector2D               NewMapMarkerPosition           (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ATeam::ServerSetMapMarkerPosition(const struct FVector2D& NewMapMarkerPosition)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19067);

	ATeam_ServerSetMapMarkerPosition_Params params;
	params.NewMapMarkerPosition = NewMapMarkerPosition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.Team.OnRep_Dying
// (Final, Native, Public)
// Parameters:
// bool                           bLastDying                     (Parm, ZeroConstructor, IsPlainOldData)

void ATeam::OnRep_Dying(bool bLastDying)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19065);

	ATeam_OnRep_Dying_Params params;
	params.bLastDying = bLastDying;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.Team.IsShowMapMarker
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATeam::IsShowMapMarker()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19063);

	ATeam_IsShowMapMarker_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Team.IsQuitter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATeam::IsQuitter()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19061);

	ATeam_IsQuitter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Team.IsGroggying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATeam::IsGroggying()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19059);

	ATeam_IsGroggying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Team.IsDying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATeam::IsDying()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19057);

	ATeam_IsDying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Team.GetTslCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslCharacter*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslCharacter* ATeam::GetTslCharacter()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19055);

	ATeam_GetTslCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Team.GetRideVehicle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETeamVehicleType               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ETeamVehicleType ATeam::GetRideVehicle()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19052);

	ATeam_GetRideVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Team.GetPlayerUniqueId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ATeam::GetPlayerUniqueId()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19050);

	ATeam_GetPlayerUniqueId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Team.GetPlayerRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator ATeam::GetPlayerRotation()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19048);

	ATeam_GetPlayerRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Team.GetPlayerName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ATeam::GetPlayerName()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19046);

	ATeam_GetPlayerName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Team.GetPlayerLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ATeam::GetPlayerLocation()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19044);

	ATeam_GetPlayerLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Team.GetMemberNumber
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ATeam::GetMemberNumber()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19042);

	ATeam_GetMemberNumber_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Team.GetMapMarkerPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D ATeam::GetMapMarkerPosition()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19040);

	ATeam_GetMapMarkerPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Team.GetHealthMax
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATeam::GetHealthMax()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19038);

	ATeam_GetHealthMax_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Team.GetHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATeam::GetHealth()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19036);

	ATeam_GetHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Team.GetGroggyHealthMax
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATeam::GetGroggyHealthMax()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19034);

	ATeam_GetGroggyHealthMax_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.Team.GetGroggyHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATeam::GetGroggyHealth()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19032);

	ATeam_GetGroggyHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslAccessoryComponent.SetPhysicsSimulation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bSimulatePhysics               (Parm, ZeroConstructor, IsPlainOldData)

void UTslAccessoryComponent::SetPhysicsSimulation(bool bSimulatePhysics)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19095);

	UTslAccessoryComponent_SetPhysicsSimulation_Params params;
	params.bSimulatePhysics = bSimulatePhysics;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAccessoryComponent.InitSetupComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bSimulatePhysics               (Parm, ZeroConstructor, IsPlainOldData)

void UTslAccessoryComponent::InitSetupComponent(bool bSimulatePhysics)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19093);

	UTslAccessoryComponent_InitSetupComponent_Params params;
	params.bSimulatePhysics = bSimulatePhysics;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAIController.ShootEnemy
// (Final, Native, Public, BlueprintCallable)

void ATslAIController::ShootEnemy()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19102);

	ATslAIController_ShootEnemy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAIController.FindClosestEnemyWithLOS
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ATslCharacter*           ExcludeEnemy                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslAIController::FindClosestEnemyWithLOS(class ATslCharacter* ExcludeEnemy)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19099);

	ATslAIController_FindClosestEnemyWithLOS_Params params;
	params.ExcludeEnemy = ExcludeEnemy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslAIController.FindClosestEnemy
// (Final, Native, Public, BlueprintCallable)

void ATslAIController::FindClosestEnemy()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19098);

	ATslAIController_FindClosestEnemy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.AircraftCarePackage.IsPlayInEditor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AAircraftCarePackage::IsPlayInEditor()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19113);

	AAircraftCarePackage_IsPlayInEditor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TransportAircraftVehicle.OnRide
// (Final, Native, Private)
// Parameters:
// class ATslCharacter*           Rider                          (Parm, ZeroConstructor, IsPlainOldData)
// class UVehicleSeatInteractionComponent* Seat                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ATransportAircraftVehicle::OnRide(class ATslCharacter* Rider, class UVehicleSeatInteractionComponent* Seat)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19139);

	ATransportAircraftVehicle_OnRide_Params params;
	params.Rider = Rider;
	params.Seat = Seat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TransportAircraftVehicle.OnRep_IsVisible
// (Final, Native, Private)

void ATransportAircraftVehicle::OnRep_IsVisible()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19138);

	ATransportAircraftVehicle_OnRep_IsVisible_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TransportAircraftVehicle.OnLocalPlayerRide
// (Event, Public, BlueprintEvent)

void ATransportAircraftVehicle::OnLocalPlayerRide()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19137);

	ATransportAircraftVehicle_OnLocalPlayerRide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TransportAircraftVehicle.OnLocalPlayerLeave
// (Event, Public, BlueprintEvent)

void ATransportAircraftVehicle::OnLocalPlayerLeave()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19136);

	ATransportAircraftVehicle_OnLocalPlayerLeave_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TransportAircraftVehicle.OnLeave
// (Final, Native, Private)
// Parameters:
// class ATslCharacter*           Rider                          (Parm, ZeroConstructor, IsPlainOldData)
// class UVehicleSeatInteractionComponent* Seat                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ATransportAircraftVehicle::OnLeave(class ATslCharacter* Rider, class UVehicleSeatInteractionComponent* Seat)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19133);

	ATransportAircraftVehicle_OnLeave_Params params;
	params.Rider = Rider;
	params.Seat = Seat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TransportAircraftVehicle.OnInteractBy
// (Final, Native, Private)
// Parameters:
// class ATslCharacter*           Character                      (Parm, ZeroConstructor, IsPlainOldData)

void ATransportAircraftVehicle::OnInteractBy(class ATslCharacter* Character)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19131);

	ATransportAircraftVehicle_OnInteractBy_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TransportAircraftVehicle.IsInEjectionArea
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATransportAircraftVehicle::IsInEjectionArea()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19129);

	ATransportAircraftVehicle_IsInEjectionArea_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TransportAircraftVehicle.EnterAtEjectionArea
// (Final, Native, Public)

void ATransportAircraftVehicle::EnterAtEjectionArea()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19128);

	ATransportAircraftVehicle_EnterAtEjectionArea_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TransportAircraftVehicle.EjectAll
// (Final, Native, Public)

void ATransportAircraftVehicle::EjectAll()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19127);

	ATransportAircraftVehicle_EjectAll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TransportAircraftVehicle.AllowInteractBy
// (Final, Native, Private)
// Parameters:
// class ATslCharacter*           Character                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATransportAircraftVehicle::AllowInteractBy(class ATslCharacter* Character)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19124);

	ATransportAircraftVehicle_AllowInteractBy_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWheeledVehicle.UpdateWheelSound
// (Native, Public, BlueprintCallable)

void ATslWheeledVehicle::UpdateWheelSound()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19214);

	ATslWheeledVehicle_UpdateWheelSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWheeledVehicle.UpdateWheelCaching
// (Native, Public, BlueprintCallable)

void ATslWheeledVehicle::UpdateWheelCaching()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19213);

	ATslWheeledVehicle_UpdateWheelCaching_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWheeledVehicle.UpdateBasicInfoCaching
// (Native, Public, BlueprintCallable)

void ATslWheeledVehicle::UpdateBasicInfoCaching()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19212);

	ATslWheeledVehicle_UpdateBasicInfoCaching_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWheeledVehicle.UnBindCallbackToHUD
// (Final, Native, Protected)
// Parameters:
// class ATslPlayerController*    InController                   (Parm, ZeroConstructor, IsPlainOldData)

void ATslWheeledVehicle::UnBindCallbackToHUD(class ATslPlayerController* InController)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19210);

	ATslWheeledVehicle_UnBindCallbackToHUD_Params params;
	params.InController = InController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWheeledVehicle.SetAirControlPitchInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InInput                        (Parm, ZeroConstructor, IsPlainOldData)

void ATslWheeledVehicle::SetAirControlPitchInput(float InInput)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19208);

	ATslWheeledVehicle_SetAirControlPitchInput_Params params;
	params.InInput = InInput;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWheeledVehicle.ServerSetBoosting
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           bNewBoosting                   (Parm, ZeroConstructor, IsPlainOldData)

void ATslWheeledVehicle::ServerSetBoosting(bool bNewBoosting)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19206);

	ATslWheeledVehicle_ServerSetBoosting_Params params;
	params.bNewBoosting = bNewBoosting;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWheeledVehicle.OnVehicleEjected
// (Native, Public)

void ATslWheeledVehicle::OnVehicleEjected()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19205);

	ATslWheeledVehicle_OnVehicleEjected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWheeledVehicle.OnRide
// (Final, Native, Private)
// Parameters:
// class ATslCharacter*           Rider                          (Parm, ZeroConstructor, IsPlainOldData)
// class UVehicleSeatInteractionComponent* Seat                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ATslWheeledVehicle::OnRide(class ATslCharacter* Rider, class UVehicleSeatInteractionComponent* Seat)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19202);

	ATslWheeledVehicle_OnRide_Params params;
	params.Rider = Rider;
	params.Seat = Seat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWheeledVehicle.OnPostDriverRide
// (Native, Public)

void ATslWheeledVehicle::OnPostDriverRide()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19201);

	ATslWheeledVehicle_OnPostDriverRide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWheeledVehicle.OnPostDriverLeave
// (Native, Public)

void ATslWheeledVehicle::OnPostDriverLeave()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19200);

	ATslWheeledVehicle_OnPostDriverLeave_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWheeledVehicle.OnLeave
// (Final, Native, Private)
// Parameters:
// class ATslCharacter*           Rider                          (Parm, ZeroConstructor, IsPlainOldData)
// class UVehicleSeatInteractionComponent* Seat                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ATslWheeledVehicle::OnLeave(class ATslCharacter* Rider, class UVehicleSeatInteractionComponent* Seat)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19197);

	ATslWheeledVehicle_OnLeave_Params params;
	params.Rider = Rider;
	params.Seat = Seat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWheeledVehicle.OnCharacterHit
// (Final, Native, Private)
// Parameters:
// class ATslCharacter*           HitCharacter                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          HitDamage                      (Parm, ZeroConstructor, IsPlainOldData)

void ATslWheeledVehicle::OnCharacterHit(class ATslCharacter* HitCharacter, float HitDamage)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19194);

	ATslWheeledVehicle_OnCharacterHit_Params params;
	params.HitCharacter = HitCharacter;
	params.HitDamage = HitDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWheeledVehicle.OnBreak
// (Final, Native, Private)

void ATslWheeledVehicle::OnBreak()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19193);

	ATslWheeledVehicle_OnBreak_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWheeledVehicle.OnBlockingWidgetOpened
// (Final, Native, Protected)
// Parameters:
// class UWidget*                 Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ATslWheeledVehicle::OnBlockingWidgetOpened(class UWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19191);

	ATslWheeledVehicle_OnBlockingWidgetOpened_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWheeledVehicle.MulticastCharacterHitEffects
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// class ATslCharacter*           CharacterHit                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          HitDamage                      (Parm, ZeroConstructor, IsPlainOldData)

void ATslWheeledVehicle::MulticastCharacterHitEffects(class ATslCharacter* CharacterHit, float HitDamage)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19188);

	ATslWheeledVehicle_MulticastCharacterHitEffects_Params params;
	params.CharacterHit = CharacterHit;
	params.HitDamage = HitDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWheeledVehicle.IsSunken
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslWheeledVehicle::IsSunken()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19186);

	ATslWheeledVehicle_IsSunken_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWheeledVehicle.IsStablizeOverrideActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslWheeledVehicle::IsStablizeOverrideActive()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19184);

	ATslWheeledVehicle_IsStablizeOverrideActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWheeledVehicle.IsStabilizeOverrideEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslWheeledVehicle::IsStabilizeOverrideEnabled()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19182);

	ATslWheeledVehicle_IsStabilizeOverrideEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWheeledVehicle.IsInWaterVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslWheeledVehicle::IsInWaterVolume()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19180);

	ATslWheeledVehicle_IsInWaterVolume_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWheeledVehicle.IsEnabledOptimizeTick
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslWheeledVehicle::IsEnabledOptimizeTick()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19178);

	ATslWheeledVehicle_IsEnabledOptimizeTick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWheeledVehicle.IsBoosting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslWheeledVehicle::IsBoosting()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19176);

	ATslWheeledVehicle_IsBoosting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWheeledVehicle.GetTslVehicleMovement
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTslWheeledVehicleMovement* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UTslWheeledVehicleMovement* ATslWheeledVehicle::GetTslVehicleMovement()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19174);

	ATslWheeledVehicle_GetTslVehicleMovement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWheeledVehicle.GetSteeringInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslWheeledVehicle::GetSteeringInput()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19172);

	ATslWheeledVehicle_GetSteeringInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWheeledVehicle.GetCurrentWaterSurfaceZ
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslWheeledVehicle::GetCurrentWaterSurfaceZ()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19170);

	ATslWheeledVehicle_GetCurrentWaterSurfaceZ_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWheeledVehicle.GetBuffComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBuffComponet*           ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UBuffComponet* ATslWheeledVehicle::GetBuffComponent()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19168);

	ATslWheeledVehicle_GetBuffComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWheeledVehicle.GetAirControlPitchInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslWheeledVehicle::GetAirControlPitchInput()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19166);

	ATslWheeledVehicle_GetAirControlPitchInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWheeledVehicle.BindCallbackToHUD
// (Final, Native, Protected)
// Parameters:
// class ATslPlayerController*    InController                   (Parm, ZeroConstructor, IsPlainOldData)

void ATslWheeledVehicle::BindCallbackToHUD(class ATslPlayerController* InController)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19164);

	ATslWheeledVehicle_BindCallbackToHUD_Params params;
	params.InController = InController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWheeledVehicle.ActivationTriggerEndOverlap
// (Final, Native, Protected)
// Parameters:
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void ATslWheeledVehicle::ActivationTriggerEndOverlap(class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19160);

	ATslWheeledVehicle_ActivationTriggerEndOverlap_Params params;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWheeledVehicle.ActivationTriggerBeginOverlap
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              OverlapInfo                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ATslWheeledVehicle::ActivationTriggerBeginOverlap(class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& OverlapInfo)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19154);

	ATslWheeledVehicle_ActivationTriggerBeginOverlap_Params params;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.OverlapInfo = OverlapInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslFloatingVehicle.UnBindCallbackToHUD
// (Final, Native, Protected)
// Parameters:
// class ATslPlayerController*    InController                   (Parm, ZeroConstructor, IsPlainOldData)

void ATslFloatingVehicle::UnBindCallbackToHUD(class ATslPlayerController* InController)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19313);

	ATslFloatingVehicle_UnBindCallbackToHUD_Params params;
	params.InController = InController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslFloatingVehicle.OnRide
// (Final, Native, Protected)
// Parameters:
// class ATslCharacter*           Rider                          (Parm, ZeroConstructor, IsPlainOldData)
// class UVehicleSeatInteractionComponent* Seat                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ATslFloatingVehicle::OnRide(class ATslCharacter* Rider, class UVehicleSeatInteractionComponent* Seat)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19310);

	ATslFloatingVehicle_OnRide_Params params;
	params.Rider = Rider;
	params.Seat = Seat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslFloatingVehicle.OnPostDriverRide
// (Native, Protected)

void ATslFloatingVehicle::OnPostDriverRide()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19309);

	ATslFloatingVehicle_OnPostDriverRide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslFloatingVehicle.OnPostDriverLeave
// (Native, Protected)

void ATslFloatingVehicle::OnPostDriverLeave()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19308);

	ATslFloatingVehicle_OnPostDriverLeave_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslFloatingVehicle.OnLeave
// (Final, Native, Protected)
// Parameters:
// class ATslCharacter*           Rider                          (Parm, ZeroConstructor, IsPlainOldData)
// class UVehicleSeatInteractionComponent* Seat                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ATslFloatingVehicle::OnLeave(class ATslCharacter* Rider, class UVehicleSeatInteractionComponent* Seat)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19305);

	ATslFloatingVehicle_OnLeave_Params params;
	params.Rider = Rider;
	params.Seat = Seat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslFloatingVehicle.OnBlockingWidgetOpened
// (Final, Native, Protected)
// Parameters:
// class UWidget*                 Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ATslFloatingVehicle::OnBlockingWidgetOpened(class UWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19303);

	ATslFloatingVehicle_OnBlockingWidgetOpened_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslFloatingVehicle.IsBoosting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslFloatingVehicle::IsBoosting()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19301);

	ATslFloatingVehicle_IsBoosting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslFloatingVehicle.GetVehicleEngineImmersionDepth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslFloatingVehicle::GetVehicleEngineImmersionDepth()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19299);

	ATslFloatingVehicle_GetVehicleEngineImmersionDepth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslFloatingVehicle.GetVehicleAcceleration
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ATslFloatingVehicle::GetVehicleAcceleration()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19297);

	ATslFloatingVehicle_GetVehicleAcceleration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslFloatingVehicle.GetSteerYawAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslFloatingVehicle::GetSteerYawAngle()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19295);

	ATslFloatingVehicle_GetSteerYawAngle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslFloatingVehicle.GetMaxSteerYawAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslFloatingVehicle::GetMaxSteerYawAngle()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19293);

	ATslFloatingVehicle_GetMaxSteerYawAngle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslFloatingVehicle.BindCallbackToHUD
// (Final, Native, Protected)
// Parameters:
// class ATslPlayerController*    InController                   (Parm, ZeroConstructor, IsPlainOldData)

void ATslFloatingVehicle::BindCallbackToHUD(class ATslPlayerController* InController)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19291);

	ATslFloatingVehicle_BindCallbackToHUD_Params params;
	params.InController = InController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWheeledVehicleMovement.SetSimulateVehicle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bSimulate                      (Parm, ZeroConstructor, IsPlainOldData)

void UTslWheeledVehicleMovement::SetSimulateVehicle(bool bSimulate)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19509);

	UTslWheeledVehicleMovement_SetSimulateVehicle_Params params;
	params.bSimulate = bSimulate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWheeledVehicleMovement.ServerUpdateAdditionalState
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            TargetGear                     (Parm, ZeroConstructor, IsPlainOldData)

void UTslWheeledVehicleMovement::ServerUpdateAdditionalState(int TargetGear)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19507);

	UTslWheeledVehicleMovement_ServerUpdateAdditionalState_Params params;
	params.TargetGear = TargetGear;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWheeledVehicleMovement.Server_SetMovementParameters
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// float                          InThrottle                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          InSteer                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          InBreak                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          InHandbrake                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            Gear                           (Parm, ZeroConstructor, IsPlainOldData)

void UTslWheeledVehicleMovement::Server_SetMovementParameters(float InThrottle, float InSteer, float InBreak, float InHandbrake, int Gear)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19501);

	UTslWheeledVehicleMovement_Server_SetMovementParameters_Params params;
	params.InThrottle = InThrottle;
	params.InSteer = InSteer;
	params.InBreak = InBreak;
	params.InHandbrake = InHandbrake;
	params.Gear = Gear;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWheeledVehicleMovement.ProcessCustomTransmission
// (Final, Native, Protected)
// Parameters:
// float                          InVelocity                     (Parm, ZeroConstructor, IsPlainOldData)

void UTslWheeledVehicleMovement::ProcessCustomTransmission(float InVelocity)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19499);

	UTslWheeledVehicleMovement_ProcessCustomTransmission_Params params;
	params.InVelocity = InVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWheeledVehicleMovement.OnDriverRide
// (Final, Native, Public)

void UTslWheeledVehicleMovement::OnDriverRide()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19498);

	UTslWheeledVehicleMovement_OnDriverRide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWheeledVehicleMovement.OnDriverLeave
// (Final, Native, Public)

void UTslWheeledVehicleMovement::OnDriverLeave()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19497);

	UTslWheeledVehicleMovement_OnDriverLeave_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWheeledVehicleMovement.OnBreak
// (Final, Native, Public)

void UTslWheeledVehicleMovement::OnBreak()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19496);

	UTslWheeledVehicleMovement_OnBreak_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWheeledVehicleMovement.IsSimulatingVehicle
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslWheeledVehicleMovement::IsSimulatingVehicle()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19494);

	UTslWheeledVehicleMovement_IsSimulatingVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWheeledVehicleMovement.GetWheelWaterDepth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslWheeledVehicleMovement::GetWheelWaterDepth(int Index)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19491);

	UTslWheeledVehicleMovement_GetWheelWaterDepth_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWheeledVehicleMovement.GetWheelSuspensionMaxRaise
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslWheeledVehicleMovement::GetWheelSuspensionMaxRaise(int Index)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19488);

	UTslWheeledVehicleMovement_GetWheelSuspensionMaxRaise_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWheeledVehicleMovement.GetWheelSuspensionMaxDrop
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslWheeledVehicleMovement::GetWheelSuspensionMaxDrop(int Index)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19485);

	UTslWheeledVehicleMovement_GetWheelSuspensionMaxDrop_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWheeledVehicleMovement.GetWheelRotationSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslWheeledVehicleMovement::GetWheelRotationSpeed(int Index)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19482);

	UTslWheeledVehicleMovement_GetWheelRotationSpeed_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWheeledVehicleMovement.GetWheelHealthPercentages
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<float>                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<float> UTslWheeledVehicleMovement::GetWheelHealthPercentages()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19479);

	UTslWheeledVehicleMovement_GetWheelHealthPercentages_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWheeledVehicleMovement.GetWheelContactType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          MinVelocity                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          MinSkid                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          MinSpin                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          SuspOffsetForContact           (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EWheelContactType> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EWheelContactType> UTslWheeledVehicleMovement::GetWheelContactType(int Index, float MinVelocity, float MinSkid, float MinSpin, float SuspOffsetForContact)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19472);

	UTslWheeledVehicleMovement_GetWheelContactType_Params params;
	params.Index = Index;
	params.MinVelocity = MinVelocity;
	params.MinSkid = MinSkid;
	params.MinSpin = MinSpin;
	params.SuspOffsetForContact = SuspOffsetForContact;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWheeledVehicleMovement.GetWheelContactSurfaceMaterial
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPhysicalMaterial*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UPhysicalMaterial* UTslWheeledVehicleMovement::GetWheelContactSurfaceMaterial(int Index)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19469);

	UTslWheeledVehicleMovement_GetWheelContactSurfaceMaterial_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWheeledVehicleMovement.GetWheelContactData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          MinVelocity                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          MinSkid                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          MinSpin                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          SuspOffsetForContact           (Parm, ZeroConstructor, IsPlainOldData)
// float                          MinBrake                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          MinRotationSpeed               (Parm, ZeroConstructor, IsPlainOldData)
// struct FWheelContactData       ReturnValue                    (Parm, OutParm, ReturnParm)

struct FWheelContactData UTslWheeledVehicleMovement::GetWheelContactData(int Index, float MinVelocity, float MinSkid, float MinSpin, float SuspOffsetForContact, float MinBrake, float MinRotationSpeed)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19460);

	UTslWheeledVehicleMovement_GetWheelContactData_Params params;
	params.Index = Index;
	params.MinVelocity = MinVelocity;
	params.MinSkid = MinSkid;
	params.MinSpin = MinSpin;
	params.SuspOffsetForContact = SuspOffsetForContact;
	params.MinBrake = MinBrake;
	params.MinRotationSpeed = MinRotationSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWheeledVehicleMovement.GetThrottleInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslWheeledVehicleMovement::GetThrottleInput()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19458);

	UTslWheeledVehicleMovement_GetThrottleInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWheeledVehicleMovement.GetSteeringInputClamped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslWheeledVehicleMovement::GetSteeringInputClamped()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19456);

	UTslWheeledVehicleMovement_GetSteeringInputClamped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWheeledVehicleMovement.GetSteeringInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslWheeledVehicleMovement::GetSteeringInput()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19454);

	UTslWheeledVehicleMovement_GetSteeringInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWheeledVehicleMovement.GetHandbrakeInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslWheeledVehicleMovement::GetHandbrakeInput()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19452);

	UTslWheeledVehicleMovement_GetHandbrakeInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWheeledVehicleMovement.GetBrakeInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslWheeledVehicleMovement::GetBrakeInput()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19450);

	UTslWheeledVehicleMovement_GetBrakeInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWheeledVehicleMovement.ClientPunctureTire
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// int                            WheelIndex                     (Parm, ZeroConstructor, IsPlainOldData)

void UTslWheeledVehicleMovement::ClientPunctureTire(int WheelIndex)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19448);

	UTslWheeledVehicleMovement_ClientPunctureTire_Params params;
	params.WheelIndex = WheelIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslFloatingVehicleMovement.ServerUpdateInput
// (Final, Net, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// float                          InForwardInput                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          InRotationInput                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInIsBoosting                  (Parm, ZeroConstructor, IsPlainOldData)

void UTslFloatingVehicleMovement::ServerUpdateInput(float InForwardInput, float InRotationInput, bool bInIsBoosting)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19532);

	UTslFloatingVehicleMovement_ServerUpdateInput_Params params;
	params.InForwardInput = InForwardInput;
	params.InRotationInput = InRotationInput;
	params.bInIsBoosting = bInIsBoosting;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslFloatingVehicleMovement.OnDriverLeave
// (Final, Native, Private)

void UTslFloatingVehicleMovement::OnDriverLeave()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19531);

	UTslFloatingVehicleMovement_OnDriverLeave_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslFloatingVehicleMovement.IsBoosting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslFloatingVehicleMovement::IsBoosting()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19529);

	UTslFloatingVehicleMovement_IsBoosting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslFloatingVehicleMovement.GetRotationYawAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslFloatingVehicleMovement::GetRotationYawAngle()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19527);

	UTslFloatingVehicleMovement_GetRotationYawAngle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslFloatingVehicleMovement.GetMaxRotationYawAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslFloatingVehicleMovement::GetMaxRotationYawAngle()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19525);

	UTslFloatingVehicleMovement_GetMaxRotationYawAngle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslFloatingVehicleMovement.GetMaxAcceleration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslFloatingVehicleMovement::GetMaxAcceleration()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19523);

	UTslFloatingVehicleMovement_GetMaxAcceleration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslFloatingVehicleMovement.GetCalculatedAcceleration
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UTslFloatingVehicleMovement::GetCalculatedAcceleration()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19521);

	UTslFloatingVehicleMovement_GetCalculatedAcceleration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslFloatingVehicleMovement.GetAcceleration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslFloatingVehicleMovement::GetAcceleration()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19519);

	UTslFloatingVehicleMovement_GetAcceleration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacterMovement.TraceSphereForVaulting
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Start                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 End                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EDrawDebugTrace>   DrawDebugType                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              OutHit                         (Parm, OutParm, IsPlainOldData)
// struct FLinearColor            TraceColor                     (Parm, IsPlainOldData)
// struct FLinearColor            TraceHitColor                  (Parm, IsPlainOldData)
// float                          DrawTime                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslCharacterMovement::TraceSphereForVaulting(const struct FVector& Start, const struct FVector& End, float Radius, TEnumAsByte<EDrawDebugTrace> DrawDebugType, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, struct FHitResult* OutHit)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19946);

	UTslCharacterMovement_TraceSphereForVaulting_Params params;
	params.Start = Start;
	params.End = End;
	params.Radius = Radius;
	params.DrawDebugType = DrawDebugType;
	params.TraceColor = TraceColor;
	params.TraceHitColor = TraceHitColor;
	params.DrawTime = DrawTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutHit != nullptr)
		*OutHit = params.OutHit;

	return params.ReturnValue;
}


// Function TslGame.TslCharacterMovement.TraceLineForVaulting
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Start                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 End                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// TEnumAsByte<EDrawDebugTrace>   DrawDebugType                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              OutHit                         (Parm, OutParm, IsPlainOldData)
// struct FLinearColor            TraceColor                     (Parm, IsPlainOldData)
// struct FLinearColor            TraceHitColor                  (Parm, IsPlainOldData)
// float                          DrawTime                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslCharacterMovement::TraceLineForVaulting(const struct FVector& Start, const struct FVector& End, TEnumAsByte<EDrawDebugTrace> DrawDebugType, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, struct FHitResult* OutHit)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19937);

	UTslCharacterMovement_TraceLineForVaulting_Params params;
	params.Start = Start;
	params.End = End;
	params.DrawDebugType = DrawDebugType;
	params.TraceColor = TraceColor;
	params.TraceHitColor = TraceHitColor;
	params.DrawTime = DrawTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutHit != nullptr)
		*OutHit = params.OutHit;

	return params.ReturnValue;
}


// Function TslGame.TslCharacterMovement.TraceCapsuleForVaulting
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Start                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 End                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// TEnumAsByte<EDrawDebugTrace>   DrawDebugType                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              OutHit                         (Parm, OutParm, IsPlainOldData)
// struct FLinearColor            TraceColor                     (Parm, IsPlainOldData)
// struct FLinearColor            TraceHitColor                  (Parm, IsPlainOldData)
// float                          DrawTime                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslCharacterMovement::TraceCapsuleForVaulting(const struct FVector& Start, const struct FVector& End, TEnumAsByte<EDrawDebugTrace> DrawDebugType, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, struct FHitResult* OutHit)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19928);

	UTslCharacterMovement_TraceCapsuleForVaulting_Params params;
	params.Start = Start;
	params.End = End;
	params.DrawDebugType = DrawDebugType;
	params.TraceColor = TraceColor;
	params.TraceHitColor = TraceHitColor;
	params.DrawTime = DrawTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutHit != nullptr)
		*OutHit = params.OutHit;

	return params.ReturnValue;
}


// Function TslGame.TslCharacterMovement.StartVaultingTask
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FVaultingTask           InVaultTask                    (Parm)

void UTslCharacterMovement::StartVaultingTask(const struct FVaultingTask& InVaultTask)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19926);

	UTslCharacterMovement_StartVaultingTask_Params params;
	params.InVaultTask = InVaultTask;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacterMovement.PredictCapsulePathForVaulting
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FHitResult              OutHit                         (Parm, OutParm, IsPlainOldData)
// TArray<struct FVector>         OutPathPositions               (Parm, OutParm, ZeroConstructor)
// struct FVector                 OutLastTraceDestination        (Parm, OutParm, IsPlainOldData)
// struct FVector                 StartPos                       (Parm, IsPlainOldData)
// struct FVector                 LaunchVelocity                 (Parm, IsPlainOldData)
// TEnumAsByte<EDrawDebugTrace>   DrawDebugType                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          DrawDebugTime                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          CapsuleRadiusOverride          (Parm, ZeroConstructor, IsPlainOldData)
// float                          CapsuleHalfHeightOverride      (Parm, ZeroConstructor, IsPlainOldData)
// float                          SimFrequency                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaxSimTime                     (Parm, ZeroConstructor, IsPlainOldData)

void UTslCharacterMovement::PredictCapsulePathForVaulting(const struct FVector& StartPos, const struct FVector& LaunchVelocity, TEnumAsByte<EDrawDebugTrace> DrawDebugType, float DrawDebugTime, float CapsuleRadiusOverride, float CapsuleHalfHeightOverride, float SimFrequency, float MaxSimTime, struct FHitResult* OutHit, TArray<struct FVector>* OutPathPositions, struct FVector* OutLastTraceDestination)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19913);

	UTslCharacterMovement_PredictCapsulePathForVaulting_Params params;
	params.StartPos = StartPos;
	params.LaunchVelocity = LaunchVelocity;
	params.DrawDebugType = DrawDebugType;
	params.DrawDebugTime = DrawDebugTime;
	params.CapsuleRadiusOverride = CapsuleRadiusOverride;
	params.CapsuleHalfHeightOverride = CapsuleHalfHeightOverride;
	params.SimFrequency = SimFrequency;
	params.MaxSimTime = MaxSimTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutHit != nullptr)
		*OutHit = params.OutHit;
	if (OutPathPositions != nullptr)
		*OutPathPositions = params.OutPathPositions;
	if (OutLastTraceDestination != nullptr)
		*OutLastTraceDestination = params.OutLastTraceDestination;
}


// Function TslGame.TslCharacterMovement.LocalHandleVault_CP
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 VaultStart                     (Parm, IsPlainOldData)
// struct FVector                 VaultApex                      (Parm, IsPlainOldData)
// struct FVector                 VaultApexAdditive              (Parm, IsPlainOldData)
// struct FVector                 VaultEnd                       (Parm, IsPlainOldData)
// bool                           bIsClimb                       (Parm, ZeroConstructor, IsPlainOldData)
// EVaultAnimType                 VaultAnimType                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bEndToFall                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          Direction                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          PlayerVelocity                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          DistanceFromObject             (Parm, ZeroConstructor, IsPlainOldData)

void UTslCharacterMovement::LocalHandleVault_CP(const struct FVector& VaultStart, const struct FVector& VaultApex, const struct FVector& VaultApexAdditive, const struct FVector& VaultEnd, bool bIsClimb, EVaultAnimType VaultAnimType, bool bEndToFall, float Direction, float PlayerVelocity, float DistanceFromObject)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19901);

	UTslCharacterMovement_LocalHandleVault_CP_Params params;
	params.VaultStart = VaultStart;
	params.VaultApex = VaultApex;
	params.VaultApexAdditive = VaultApexAdditive;
	params.VaultEnd = VaultEnd;
	params.bIsClimb = bIsClimb;
	params.VaultAnimType = VaultAnimType;
	params.bEndToFall = bEndToFall;
	params.Direction = Direction;
	params.PlayerVelocity = PlayerVelocity;
	params.DistanceFromObject = DistanceFromObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacterMovement.IsVaulting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslCharacterMovement::IsVaulting()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19899);

	UTslCharacterMovement_IsVaulting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacterMovement.HandleVaultPreEvaluation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// bool                           bForceVelocity                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 InForcedVelocity               (Parm, IsPlainOldData)

void UTslCharacterMovement::HandleVaultPreEvaluation(bool bForceVelocity, const struct FVector& InForcedVelocity)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19896);

	UTslCharacterMovement_HandleVaultPreEvaluation_Params params;
	params.bForceVelocity = bForceVelocity;
	params.InForcedVelocity = InForcedVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacterMovement.HandleVaulting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FVaultingHandleInput    Input                          (Parm)
// struct FVaultingHandleResult   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FVaultingHandleResult UTslCharacterMovement::HandleVaulting(const struct FVaultingHandleInput& Input)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19893);

	UTslCharacterMovement_HandleVaulting_Params params;
	params.Input = Input;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacterMovement.GetVTimer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslCharacterMovement::GetVTimer()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19891);

	UTslCharacterMovement_GetVTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacterMovement.GetVaultingDataFromAnim
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EVaultAnimType                 InVaultType                    (Parm, ZeroConstructor, IsPlainOldData)
// class UVaultingData*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UVaultingData* UTslCharacterMovement::GetVaultingDataFromAnim(EVaultAnimType InVaultType)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19887);

	UTslCharacterMovement_GetVaultingDataFromAnim_Params params;
	params.InVaultType = InVaultType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacterMovement.GetMaxVaultDistanceBySpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslCharacterMovement::GetMaxVaultDistanceBySpeed()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19885);

	UTslCharacterMovement_GetMaxVaultDistanceBySpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacterMovement.GetGlobalVaultingSpeedMultiplier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslCharacterMovement::GetGlobalVaultingSpeedMultiplier()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19883);

	UTslCharacterMovement_GetGlobalVaultingSpeedMultiplier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacterMovement.GetCurrentVaultType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EVaultAnimType                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EVaultAnimType UTslCharacterMovement::GetCurrentVaultType()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19880);

	UTslCharacterMovement_GetCurrentVaultType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacterMovement.EvaluateVaultAnimType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            FirstRow                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ApexAdditiveStepCounter        (Parm, ZeroConstructor, IsPlainOldData)
// float                          AverageCellCount               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bForceVault                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bForceClimb                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          CharVelocity                   (Parm, ZeroConstructor, IsPlainOldData)
// EVaultAnimType                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EVaultAnimType UTslCharacterMovement::EvaluateVaultAnimType(int FirstRow, int ApexAdditiveStepCounter, float AverageCellCount, bool bForceVault, bool bForceClimb, float CharVelocity)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19871);

	UTslCharacterMovement_EvaluateVaultAnimType_Params params;
	params.FirstRow = FirstRow;
	params.ApexAdditiveStepCounter = ApexAdditiveStepCounter;
	params.AverageCellCount = AverageCellCount;
	params.bForceVault = bForceVault;
	params.bForceClimb = bForceClimb;
	params.CharVelocity = CharVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacterMovement.EndCurrentTaskToFall
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslCharacterMovement::EndCurrentTaskToFall()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(19869);

	UTslCharacterMovement_EndCurrentTaskToFall_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslAnimInstance.SetWeaponStatesEvaluationCooldown
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void UTslAnimInstance::SetWeaponStatesEvaluationCooldown(float Time)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20424);

	UTslAnimInstance_SetWeaponStatesEvaluationCooldown_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.SetLandPredictionVector
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 newLandVector                  (Parm, IsPlainOldData)

void UTslAnimInstance::SetLandPredictionVector(const struct FVector& newLandVector)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20422);

	UTslAnimInstance_SetLandPredictionVector_Params params;
	params.newLandVector = newLandVector;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.SetJumpStartLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 NewLocation                    (Parm, IsPlainOldData)
// float                          DefaultFallHeight              (Parm, ZeroConstructor, IsPlainOldData)

void UTslAnimInstance::SetJumpStartLocation(const struct FVector& NewLocation, float DefaultFallHeight)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20419);

	UTslAnimInstance_SetJumpStartLocation_Params params;
	params.NewLocation = NewLocation;
	params.DefaultFallHeight = DefaultFallHeight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.ResetRecoilRoll
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::ResetRecoilRoll()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20418);

	UTslAnimInstance_ResetRecoilRoll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.ResetIdle
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::ResetIdle()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20417);

	UTslAnimInstance_ResetIdle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.RandomizeIdleIndex_CP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ExludeLastIndex                (Parm, ZeroConstructor, IsPlainOldData)

void UTslAnimInstance::RandomizeIdleIndex_CP(bool ExludeLastIndex)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20415);

	UTslAnimInstance_RandomizeIdleIndex_CP_Params params;
	params.ExludeLastIndex = ExludeLastIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.ProcessCodePaths
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::ProcessCodePaths()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20414);

	UTslAnimInstance_ProcessCodePaths_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.PreEvaluatePawnState
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::PreEvaluatePawnState()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20413);

	UTslAnimInstance_PreEvaluatePawnState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.OnHitReaction
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// EAnimWeaponType                WeaponType                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   BoneName                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Direction                      (Parm, IsPlainOldData)

void UTslAnimInstance::OnHitReaction(EAnimWeaponType WeaponType, const struct FName& BoneName, const struct FVector& Direction)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20408);

	UTslAnimInstance_OnHitReaction_Params params;
	params.WeaponType = WeaponType;
	params.BoneName = BoneName;
	params.Direction = Direction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.HandleSpeedAndDirection_CP
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::HandleSpeedAndDirection_CP()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20407);

	UTslAnimInstance_HandleSpeedAndDirection_CP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.HandleItemOffsets_CP
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::HandleItemOffsets_CP()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20406);

	UTslAnimInstance_HandleItemOffsets_CP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.HandleCardinalDirection90
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          InDirection                    (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char UTslAnimInstance::HandleCardinalDirection90(float InDirection)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20403);

	UTslAnimInstance_HandleCardinalDirection90_Params params;
	params.InDirection = InDirection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslAnimInstance.HandleAnimCurves
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::HandleAnimCurves()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20402);

	UTslAnimInstance_HandleAnimCurves_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.HandleADSSocketOffset
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::HandleADSSocketOffset()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20401);

	UTslAnimInstance_HandleADSSocketOffset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.GetVehicleAO
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          Yaw                            (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          Pitch                          (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UTslAnimInstance::GetVehicleAO(float* Yaw, float* Pitch)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20398);

	UTslAnimInstance_GetVehicleAO_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Yaw != nullptr)
		*Yaw = params.Yaw;
	if (Pitch != nullptr)
		*Pitch = params.Pitch;
}


// Function TslGame.TslAnimInstance.GetBlendSpaceRelaxed_TS
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EAnimStanceType>   AnimStance                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIsFPP                         (Parm, ZeroConstructor, IsPlainOldData)
// class UAnimDB*                 InAnimDB                       (Parm, ZeroConstructor, IsPlainOldData)
// class UBlendSpace*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UBlendSpace* UTslAnimInstance::GetBlendSpaceRelaxed_TS(TEnumAsByte<EAnimStanceType> AnimStance, bool bIsFPP, class UAnimDB* InAnimDB)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20393);

	UTslAnimInstance_GetBlendSpaceRelaxed_TS_Params params;
	params.AnimStance = AnimStance;
	params.bIsFPP = bIsFPP;
	params.InAnimDB = InAnimDB;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslAnimInstance.GetBlendSpace_TS
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EAnimStanceType>   AnimStance                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIsFPP                         (Parm, ZeroConstructor, IsPlainOldData)
// class UAnimDB*                 InAnimDB                       (Parm, ZeroConstructor, IsPlainOldData)
// class UBlendSpace*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UBlendSpace* UTslAnimInstance::GetBlendSpace_TS(TEnumAsByte<EAnimStanceType> AnimStance, bool bIsFPP, class UAnimDB* InAnimDB)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20388);

	UTslAnimInstance_GetBlendSpace_TS_Params params;
	params.AnimStance = AnimStance;
	params.bIsFPP = bIsFPP;
	params.InAnimDB = InAnimDB;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslAnimInstance.GetAnimSpeed_TS
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EAnimStanceType>   AnimStance                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          Direction                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          InSpeed                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          PlayRate                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          SprintAlpha                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UAnimDB*                 InAnimDB                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIsSprinting                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslAnimInstance::GetAnimSpeed_TS(TEnumAsByte<EAnimStanceType> AnimStance, float Direction, float InSpeed, class UAnimDB* InAnimDB, bool bIsSprinting, float* PlayRate, float* SprintAlpha)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20379);

	UTslAnimInstance_GetAnimSpeed_TS_Params params;
	params.AnimStance = AnimStance;
	params.Direction = Direction;
	params.InSpeed = InSpeed;
	params.InAnimDB = InAnimDB;
	params.bIsSprinting = bIsSprinting;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (PlayRate != nullptr)
		*PlayRate = params.PlayRate;
	if (SprintAlpha != nullptr)
		*SprintAlpha = params.SprintAlpha;

	return params.ReturnValue;
}


// Function TslGame.TslAnimInstance.GetAbsActorToBaseRotation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           bInUseMin                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          InAngle                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslAnimInstance::GetAbsActorToBaseRotation(bool bInUseMin, float InAngle)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20375);

	UTslAnimInstance_GetAbsActorToBaseRotation_Params params;
	params.bInUseMin = bInUseMin;
	params.InAngle = InAngle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslAnimInstance.FindPositionFromDistanceCurve
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          Distance                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class UAnimSequenceBase*       InAnimSequence                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslAnimInstance::FindPositionFromDistanceCurve(float Distance, class UAnimSequenceBase* InAnimSequence)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20371);

	UTslAnimInstance_FindPositionFromDistanceCurve_Params params;
	params.Distance = Distance;
	params.InAnimSequence = InAnimSequence;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslAnimInstance.EvaluateWeaponStates
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::EvaluateWeaponStates()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20370);

	UTslAnimInstance_EvaluateWeaponStates_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.EvaluateWeaponStability
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::EvaluateWeaponStability()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20369);

	UTslAnimInstance_EvaluateWeaponStability_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.EvaluateWeaponInertia
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::EvaluateWeaponInertia()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20368);

	UTslAnimInstance_EvaluateWeaponInertia_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.EvaluateWeaponCollision
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::EvaluateWeaponCollision()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20367);

	UTslAnimInstance_EvaluateWeaponCollision_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.EvaluateVehicle
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::EvaluateVehicle()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20366);

	UTslAnimInstance_EvaluateVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.EvaluateVaulting
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::EvaluateVaulting()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20365);

	UTslAnimInstance_EvaluateVaulting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.EvaluateSwimming
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::EvaluateSwimming()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20364);

	UTslAnimInstance_EvaluateSwimming_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.EvaluateRotations
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::EvaluateRotations()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20363);

	UTslAnimInstance_EvaluateRotations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.EvaluateRecoilRoll
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::EvaluateRecoilRoll()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20362);

	UTslAnimInstance_EvaluateRecoilRoll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.EvaluatePawnStates
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::EvaluatePawnStates()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20361);

	UTslAnimInstance_EvaluatePawnStates_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.EvaluateMeleeAttack
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::EvaluateMeleeAttack()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20360);

	UTslAnimInstance_EvaluateMeleeAttack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.EvaluateLocalPawnStates
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::EvaluateLocalPawnStates()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20359);

	UTslAnimInstance_EvaluateLocalPawnStates_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.EvaluateLeaning
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::EvaluateLeaning()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20358);

	UTslAnimInstance_EvaluateLeaning_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.EvaluateJumping
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::EvaluateJumping()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20357);

	UTslAnimInstance_EvaluateJumping_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.EvaluateJumpCamera
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::EvaluateJumpCamera()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20356);

	UTslAnimInstance_EvaluateJumpCamera_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.EvaluateItemOffsets
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::EvaluateItemOffsets()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20355);

	UTslAnimInstance_EvaluateItemOffsets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.EvaluateIdle
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::EvaluateIdle()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20354);

	UTslAnimInstance_EvaluateIdle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.EvaluateFreelook
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::EvaluateFreelook()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20353);

	UTslAnimInstance_EvaluateFreelook_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.EvaluateFreefallAndParachute
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::EvaluateFreefallAndParachute()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20352);

	UTslAnimInstance_EvaluateFreefallAndParachute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.EvaluateFallingAndLanding
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::EvaluateFallingAndLanding()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20351);

	UTslAnimInstance_EvaluateFallingAndLanding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.EvaluateCoatExternalForce
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::EvaluateCoatExternalForce()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20350);

	UTslAnimInstance_EvaluateCoatExternalForce_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.EvaluateCharacterStates
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::EvaluateCharacterStates()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20349);

	UTslAnimInstance_EvaluateCharacterStates_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.EvaluateCasting
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::EvaluateCasting()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20348);

	UTslAnimInstance_EvaluateCasting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.EvaluateAnimDynamics
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::EvaluateAnimDynamics()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20347);

	UTslAnimInstance_EvaluateAnimDynamics_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.EvaluateAimStates
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::EvaluateAimStates()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20346);

	UTslAnimInstance_EvaluateAimStates_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.EvaluateAimOffsets
// (Final, Native, Public, BlueprintCallable)

void UTslAnimInstance::EvaluateAimOffsets()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20345);

	UTslAnimInstance_EvaluateAimOffsets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAnimInstance.CacheCharacterReference
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ATslCharacter*           InCharacter                    (Parm, ZeroConstructor, IsPlainOldData)

void UTslAnimInstance::CacheCharacterReference(class ATslCharacter* InCharacter)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20343);

	UTslAnimInstance_CacheCharacterReference_Params params;
	params.InCharacter = InCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslHUD.TestSendSystemMessage
// (Final, Exec, Native, Public)
// Parameters:
// struct FText                   Message                        (Parm)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void ATslHUD::TestSendSystemMessage(const struct FText& Message, float Duration)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20820);

	ATslHUD_TestSendSystemMessage_Params params;
	params.Message = Message;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslHUD.TestSendImportantMessage
// (Final, Exec, Native, Public)
// Parameters:
// struct FText                   Message                        (Parm)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void ATslHUD::TestSendImportantMessage(const struct FText& Message, float Duration)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20817);

	ATslHUD_TestSendImportantMessage_Params params;
	params.Message = Message;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslHUD.TestKillMessage
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 KillerName                     (Parm, ZeroConstructor)
// struct FString                 VictimName                     (Parm, ZeroConstructor)
// bool                           bKillerIsOwner                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bVictimIsOwner                 (Parm, ZeroConstructor, IsPlainOldData)

void ATslHUD::TestKillMessage(const struct FString& KillerName, const struct FString& VictimName, bool bKillerIsOwner, bool bVictimIsOwner)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20812);

	ATslHUD_TestKillMessage_Params params;
	params.KillerName = KillerName;
	params.VictimName = VictimName;
	params.bKillerIsOwner = bKillerIsOwner;
	params.bVictimIsOwner = bVictimIsOwner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslHUD.TestGameEvent_MatchEnded
// (Final, Exec, Native, Public)

void ATslHUD::TestGameEvent_MatchEnded()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20811);

	ATslHUD_TestGameEvent_MatchEnded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslHUD.TestGameEvent_KillOtherPlayer
// (Final, Exec, Native, Public)
// Parameters:
// bool                           bGroggy                        (Parm, ZeroConstructor, IsPlainOldData)

void ATslHUD::TestGameEvent_KillOtherPlayer(bool bGroggy)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20809);

	ATslHUD_TestGameEvent_KillOtherPlayer_Params params;
	params.bGroggy = bGroggy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslHUD.TestGameEvent_Die
// (Final, Exec, Native, Public)
// Parameters:
// bool                           bGroggy                        (Parm, ZeroConstructor, IsPlainOldData)

void ATslHUD::TestGameEvent_Die(bool bGroggy)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20807);

	ATslHUD_TestGameEvent_Die_Params params;
	params.bGroggy = bGroggy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslHUD.SpawnActorInSceneCaptureWorld
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UClass*                  ActorClass                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform              SpawnTransform                 (ConstParm, Parm, IsPlainOldData)
// struct FScriptDelegate         DelegateToCall                 (Parm, ZeroConstructor)

void ATslHUD::SpawnActorInSceneCaptureWorld(class UClass* ActorClass, const struct FTransform& SpawnTransform, const struct FScriptDelegate& DelegateToCall)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20803);

	ATslHUD_SpawnActorInSceneCaptureWorld_Params params;
	params.ActorClass = ActorClass;
	params.SpawnTransform = SpawnTransform;
	params.DelegateToCall = DelegateToCall;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslHUD.SetHighlightProvider
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 Provider                       (Parm, ZeroConstructor)

void ATslHUD::SetHighlightProvider(const struct FString& Provider)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20801);

	ATslHUD_SetHighlightProvider_Params params;
	params.Provider = Provider;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslHUD.RecordReplayHighlightSession
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          timeLength                     (Parm, ZeroConstructor, IsPlainOldData)

void ATslHUD::RecordReplayHighlightSession(float timeLength)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20799);

	ATslHUD_RecordReplayHighlightSession_Params params;
	params.timeLength = timeLength;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslHUD.NotifyDropSlotOnOtherContainer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class USlotContainerInterface> Container                      (Parm, ZeroConstructor, IsPlainOldData)
// TScriptInterface<class USlotInterface> Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// TScriptInterface<class USlotContainerInterface> OtherContainer                 (Parm, ZeroConstructor, IsPlainOldData)

void ATslHUD::NotifyDropSlotOnOtherContainer(const TScriptInterface<class USlotContainerInterface>& Container, const TScriptInterface<class USlotInterface>& Slot, const TScriptInterface<class USlotContainerInterface>& OtherContainer)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20795);

	ATslHUD_NotifyDropSlotOnOtherContainer_Params params;
	params.Container = Container;
	params.Slot = Slot;
	params.OtherContainer = OtherContainer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslHUD.IsGameEnded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslHUD::IsGameEnded()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20793);

	ATslHUD_IsGameEnded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslHUD.InitCaptureWorld
// (Final, Native, Public, BlueprintCallable)

void ATslHUD::InitCaptureWorld()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20792);

	ATslHUD_InitCaptureWorld_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslHUD.GoToLobby
// (Final, Native, Public, BlueprintCallable)

void ATslHUD::GoToLobby()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20791);

	ATslHUD_GoToLobby_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslHUD.GetPossessPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APawn*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APawn* ATslHUD::GetPossessPawn()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20789);

	ATslHUD_GetPossessPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslHUD.GetPossessCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslCharacter*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslCharacter* ATslHUD::GetPossessCharacter()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20787);

	ATslHUD_GetPossessCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslHUD.GetHealAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslHUD::GetHealAmount()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20785);

	ATslHUD_GetHealAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslSettings.SetCharacterStudioRenderTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*  rt                             (Parm, ZeroConstructor, IsPlainOldData)

void UTslSettings::SetCharacterStudioRenderTarget(class UTextureRenderTarget2D* rt)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20887);

	UTslSettings_SetCharacterStudioRenderTarget_Params params;
	params.rt = rt;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSettings.IsUsingGappLobby
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslSettings::IsUsingGappLobby()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20885);

	UTslSettings_IsUsingGappLobby_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslSettings.IsForKoreanRating
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslSettings::IsForKoreanRating()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20883);

	UTslSettings_IsForKoreanRating_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslSettings.IsForKakaoTest
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslSettings::IsForKakaoTest()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20881);

	UTslSettings_IsForKakaoTest_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslSettings.IsForKakao
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslSettings::IsForKakao()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20879);

	UTslSettings_IsForKakao_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslSettings.IsForChineseLicensing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslSettings::IsForChineseLicensing()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20877);

	UTslSettings_IsForChineseLicensing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslSettings.IsESports
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslSettings::IsESports()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20875);

	UTslSettings_IsESports_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslSettings.GetTslSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTslSettings*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTslSettings* UTslSettings::STATIC_GetTslSettings()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20873);

	UTslSettings_GetTslSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslSettings.GetNotifyMaxDistanceByName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   InName                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslSettings::GetNotifyMaxDistanceByName(const struct FName& InName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20870);

	UTslSettings_GetNotifyMaxDistanceByName_Params params;
	params.InName = InName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslSettings.GetGappLobbyUrl
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UTslSettings::GetGappLobbyUrl()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20868);

	UTslSettings_GetGappLobbyUrl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslSettings.GetCharacterStudioRenderTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UTextureRenderTarget2D*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTextureRenderTarget2D* UTslSettings::GetCharacterStudioRenderTarget()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(20866);

	UTslSettings_GetCharacterStudioRenderTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameInstance.UseLobbyWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameInstance::UseLobbyWidget()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4371);

	UTslGameInstance_UseLobbyWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameInstance.UpdateReplayShouldKeepBP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 RegionOrLocal                  (Parm, ZeroConstructor)
// struct FString                 SessionName                    (Parm, ZeroConstructor)
// bool                           bShouldKeep                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameInstance::UpdateReplayShouldKeepBP(const struct FString& RegionOrLocal, const struct FString& SessionName, bool bShouldKeep)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4366);

	UTslGameInstance_UpdateReplayShouldKeepBP_Params params;
	params.RegionOrLocal = RegionOrLocal;
	params.SessionName = SessionName;
	params.bShouldKeep = bShouldKeep;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameInstance.UpdateReplayAllDeadOrWinBP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 RegionOrLocal                  (Parm, ZeroConstructor)
// struct FString                 SessionName                    (Parm, ZeroConstructor)
// bool                           bAllDeadOrWin                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameInstance::UpdateReplayAllDeadOrWinBP(const struct FString& RegionOrLocal, const struct FString& SessionName, bool bAllDeadOrWin)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4361);

	UTslGameInstance_UpdateReplayAllDeadOrWinBP_Params params;
	params.RegionOrLocal = RegionOrLocal;
	params.SessionName = SessionName;
	params.bAllDeadOrWin = bAllDeadOrWin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameInstance.UnPause
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameInstance::UnPause()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4359);

	UTslGameInstance_UnPause_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameInstance.StopStat
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<EServerStatType>   StatType                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameInstance::StopStat(TEnumAsByte<EServerStatType> StatType)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4357);

	UTslGameInstance_StopStat_Params params;
	params.StatType = StatType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.StopIfReplaying
// (Final, Native, Public, BlueprintCallable)

void UTslGameInstance::StopIfReplaying()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4356);

	UTslGameInstance_StopIfReplaying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.StartStat
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<EServerStatType>   StatType                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameInstance::StartStat(TEnumAsByte<EServerStatType> StatType)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4352);

	UTslGameInstance_StartStat_Params params;
	params.StatType = StatType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameInstance.ShowYesNoMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 strTitle                       (Parm, ZeroConstructor)
// struct FString                 strMsg                         (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameInstance::ShowYesNoMessage(const struct FString& strTitle, const struct FString& strMsg)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4348);

	UTslGameInstance_ShowYesNoMessage_Params params;
	params.strTitle = strTitle;
	params.strMsg = strMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameInstance.ShowSystemMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 strTitle                       (Parm, ZeroConstructor)
// struct FString                 strMsg                         (Parm, ZeroConstructor)

void UTslGameInstance::ShowSystemMessage(const struct FString& strTitle, const struct FString& strMsg)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4345);

	UTslGameInstance_ShowSystemMessage_Params params;
	params.strTitle = strTitle;
	params.strMsg = strMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.ShowOkCancelMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 strTitle                       (Parm, ZeroConstructor)
// struct FString                 strMsg                         (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameInstance::ShowOkCancelMessage(const struct FString& strTitle, const struct FString& strMsg)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4341);

	UTslGameInstance_ShowOkCancelMessage_Params params;
	params.strTitle = strTitle;
	params.strMsg = strMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameInstance.ShowLoadingScreen
// (Final, Native, Public, BlueprintCallable)

void UTslGameInstance::ShowLoadingScreen()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4340);

	UTslGameInstance_ShowLoadingScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.SetStartedFromReplayListMap
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bSet                           (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameInstance::SetStartedFromReplayListMap(bool bSet)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4338);

	UTslGameInstance_SetStartedFromReplayListMap_Params params;
	params.bSet = bSet;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.SetReplayTimeSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          TimeSpeed                      (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameInstance::SetReplayTimeSpeed(float TimeSpeed)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4336);

	UTslGameInstance_SetReplayTimeSpeed_Params params;
	params.TimeSpeed = TimeSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.SetReplayBusy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bBusy                          (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameInstance::SetReplayBusy(bool bBusy)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4334);

	UTslGameInstance_SetReplayBusy_Params params;
	params.bBusy = bBusy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.SetMaxReplaysForNullStreamer
// (Final, Native, Public, BlueprintCallable)

void UTslGameInstance::SetMaxReplaysForNullStreamer()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4333);

	UTslGameInstance_SetMaxReplaysForNullStreamer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.ResetReplayStreamer
// (Final, Native, Public, BlueprintCallable)

void UTslGameInstance::ResetReplayStreamer()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4332);

	UTslGameInstance_ResetReplayStreamer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.RequestReplayAKillEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 EventID                        (Parm, ZeroConstructor)

void UTslGameInstance::RequestReplayAKillEvent(const struct FString& EventID)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4330);

	UTslGameInstance_RequestReplayAKillEvent_Params params;
	params.EventID = EventID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.RequestReplayAGroggyEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 EventID                        (Parm, ZeroConstructor)

void UTslGameInstance::RequestReplayAGroggyEvent(const struct FString& EventID)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4328);

	UTslGameInstance_RequestReplayAGroggyEvent_Params params;
	params.EventID = EventID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction TslGame.TslGameInstance.ReplayProblemDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UTslGameInstance::ReplayProblemDelegate__DelegateSignature()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4327);

	UTslGameInstance_ReplayProblemDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.ReplayJumpInt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            second                         (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameInstance::ReplayJumpInt(int second)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4325);

	UTslGameInstance_ReplayJumpInt_Params params;
	params.second = second;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.ReplayJump
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          TimelinePercentage             (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameInstance::ReplayJump(float TimelinePercentage)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4323);

	UTslGameInstance_ReplayJump_Params params;
	params.TimelinePercentage = TimelinePercentage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.RemoveAllKillEvents
// (Final, Native, Public, BlueprintCallable)

void UTslGameInstance::RemoveAllKillEvents()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4322);

	UTslGameInstance_RemoveAllKillEvents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.RemoveAllGroggyEvents
// (Final, Native, Public, BlueprintCallable)

void UTslGameInstance::RemoveAllGroggyEvents()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4321);

	UTslGameInstance_RemoveAllGroggyEvents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction TslGame.TslGameInstance.RecordStartedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UTslGameInstance::RecordStartedDelegate__DelegateSignature()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4320);

	UTslGameInstance_RecordStartedDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.QuitApplication
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bShowMessage                   (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameInstance::QuitApplication(bool bShowMessage)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4318);

	UTslGameInstance_QuitApplication_Params params;
	params.bShowMessage = bShowMessage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.PlayReplayCommand
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 RegionOrLocal                  (Parm, ZeroConstructor)
// struct FString                 SessionName                    (Parm, ZeroConstructor)

void UTslGameInstance::PlayReplayCommand(const struct FString& RegionOrLocal, const struct FString& SessionName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4315);

	UTslGameInstance_PlayReplayCommand_Params params;
	params.RegionOrLocal = RegionOrLocal;
	params.SessionName = SessionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.PlayReplayBPByRegionOrLocal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 Region                         (Parm, ZeroConstructor)
// struct FString                 SessionName                    (Parm, ZeroConstructor)

void UTslGameInstance::PlayReplayBPByRegionOrLocal(const struct FString& Region, const struct FString& SessionName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4312);

	UTslGameInstance_PlayReplayBPByRegionOrLocal_Params params;
	params.Region = Region;
	params.SessionName = SessionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.PlayReplayBP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 SessionName                    (Parm, ZeroConstructor)

void UTslGameInstance::PlayReplayBP(const struct FString& SessionName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4310);

	UTslGameInstance_PlayReplayBP_Params params;
	params.SessionName = SessionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.Pause
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameInstance::Pause()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4308);

	UTslGameInstance_Pause_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameInstance.OnPressedPopupConfirmInvite
// (Final, Native, Private)
// Parameters:
// EPopupButtonID                 ButtonID                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameInstance::OnPressedPopupConfirmInvite(EPopupButtonID ButtonID)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4305);

	UTslGameInstance_OnPressedPopupConfirmInvite_Params params;
	params.ButtonID = ButtonID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.OnPressedPopupCommon
// (Final, Native, Private)
// Parameters:
// EPopupButtonID                 ButtonID                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameInstance::OnPressedPopupCommon(EPopupButtonID ButtonID)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4302);

	UTslGameInstance_OnPressedPopupCommon_Params params;
	params.ButtonID = ButtonID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.KeepMaxReplaysAndDeleteOldestReplaysForNullStreamer
// (Final, Native, Public, BlueprintCallable)

void UTslGameInstance::KeepMaxReplaysAndDeleteOldestReplaysForNullStreamer()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4301);

	UTslGameInstance_KeepMaxReplaysAndDeleteOldestReplaysForNullStreamer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.KeepAndDeleteOldestReplaysForNullStreamer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            nReplaysToKeep                 (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameInstance::KeepAndDeleteOldestReplaysForNullStreamer(int nReplaysToKeep)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4299);

	UTslGameInstance_KeepAndDeleteOldestReplaysForNullStreamer_Params params;
	params.nReplaysToKeep = nReplaysToKeep;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction TslGame.TslGameInstance.KeepAndDeleteOldestReplaysDoneDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int                            nRemains                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameInstance::KeepAndDeleteOldestReplaysDoneDelegate__DelegateSignature(int nRemains)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4297);

	UTslGameInstance_KeepAndDeleteOldestReplaysDoneDelegate__DelegateSignature_Params params;
	params.nRemains = nRemains;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.IsReplaying
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameInstance::IsReplaying()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4295);

	UTslGameInstance_IsReplaying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameInstance.IsReplayError
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameInstance::IsReplayError()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4293);

	UTslGameInstance_IsReplayError_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameInstance.IsRecording
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameInstance::IsRecording()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4291);

	UTslGameInstance_IsRecording_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameInstance.IsPaused
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameInstance::IsPaused()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4289);

	UTslGameInstance_IsPaused_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameInstance.IsLive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameInstance::IsLive()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4287);

	UTslGameInstance_IsLive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameInstance.IsKillcamPlayback
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameInstance::IsKillcamPlayback()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4285);

	UTslGameInstance_IsKillcamPlayback_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction TslGame.TslGameInstance.GotoTimelineDoneDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UTslGameInstance::GotoTimelineDoneDelegate__DelegateSignature()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4284);

	UTslGameInstance_GotoTimelineDoneDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.GotoReplayList
// (Final, Native, Public, BlueprintCallable)

void UTslGameInstance::GotoReplayList()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4283);

	UTslGameInstance_GotoReplayList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.GetStartParameterStringValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 Key                            (Parm, ZeroConstructor)
// struct FString                 NotFoundValue                  (Parm, ZeroConstructor)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UTslGameInstance::GetStartParameterStringValue(const struct FString& Key, const struct FString& NotFoundValue)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4279);

	UTslGameInstance_GetStartParameterStringValue_Params params;
	params.Key = Key;
	params.NotFoundValue = NotFoundValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameInstance.GetStartParameter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTslStartParameter      ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FTslStartParameter UTslGameInstance::GetStartParameter()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4267);

	UTslGameInstance_GetStartParameter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameInstance.GetStartedFromReplayListMap
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameInstance::GetStartedFromReplayListMap()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4265);

	UTslGameInstance_GetStartedFromReplayListMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameInstance.GetReplayTotalTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameInstance::GetReplayTotalTime()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4263);

	UTslGameInstance_GetReplayTotalTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction TslGame.TslGameInstance.GetReplaySummaryDoneDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// struct FTslReplaySummary       aTslReplaySummary              (Parm)

void UTslGameInstance::GetReplaySummaryDoneDelegate__DelegateSignature(const struct FTslReplaySummary& aTslReplaySummary)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4261);

	UTslGameInstance_GetReplaySummaryDoneDelegate__DelegateSignature_Params params;
	params.aTslReplaySummary = aTslReplaySummary;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.GetReplaySummary
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 RegionOrLocal                  (ConstParm, Parm, ZeroConstructor)
// struct FString                 SessionName                    (ConstParm, Parm, ZeroConstructor)

void UTslGameInstance::GetReplaySummary(const struct FString& RegionOrLocal, const struct FString& SessionName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4258);

	UTslGameInstance_GetReplaySummary_Params params;
	params.RegionOrLocal = RegionOrLocal;
	params.SessionName = SessionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.GetReplayListLocal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            PageIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            PageSize                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameInstance::GetReplayListLocal(int PageIndex, int PageSize)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4255);

	UTslGameInstance_GetReplayListLocal_Params params;
	params.PageIndex = PageIndex;
	params.PageSize = PageSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction TslGame.TslGameInstance.GetReplayListDoneDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UTslGameInstance::GetReplayListDoneDelegate__DelegateSignature()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4254);

	UTslGameInstance_GetReplayListDoneDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.GetReplayListByRegionOrLocal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 RegionOrLocal                  (Parm, ZeroConstructor)
// int                            PageIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            PageSize                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameInstance::GetReplayListByRegionOrLocal(const struct FString& RegionOrLocal, int PageIndex, int PageSize)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4250);

	UTslGameInstance_GetReplayListByRegionOrLocal_Params params;
	params.RegionOrLocal = RegionOrLocal;
	params.PageIndex = PageIndex;
	params.PageSize = PageSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.GetReplayList
// (Final, Native, Public, BlueprintCallable)

void UTslGameInstance::GetReplayList()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4249);

	UTslGameInstance_GetReplayList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction TslGame.TslGameInstance.GetReplayKill__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UTslGameInstance::GetReplayKill__DelegateSignature()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4248);

	UTslGameInstance_GetReplayKill__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.GetReplayCurrentTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameInstance::GetReplayCurrentTime()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4246);

	UTslGameInstance_GetReplayCurrentTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameInstance.GetReplayBusy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameInstance::GetReplayBusy()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4244);

	UTslGameInstance_GetReplayBusy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameInstance.GetRecordUserFromReplaySummary
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FTslReplaySummary       inReplaySummary                (ConstParm, Parm, OutParm, ReferenceParm)
// struct FTslPlayerStateSummary  ReturnValue                    (Parm, OutParm, ReturnParm)

struct FTslPlayerStateSummary UTslGameInstance::GetRecordUserFromReplaySummary(const struct FTslReplaySummary& inReplaySummary)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4241);

	UTslGameInstance_GetRecordUserFromReplaySummary_Params params;
	params.inReplaySummary = inReplaySummary;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameInstance.GetRecorderTeamMembersFromReplaySummary
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FTslReplaySummary       inReplaySummary                (ConstParm, Parm, OutParm, ReferenceParm)
// TArray<struct FTslPlayerStateSummary> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FTslPlayerStateSummary> UTslGameInstance::GetRecorderTeamMembersFromReplaySummary(const struct FTslReplaySummary& inReplaySummary)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4237);

	UTslGameInstance_GetRecorderTeamMembersFromReplaySummary_Params params;
	params.inReplaySummary = inReplaySummary;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameInstance.GetNumTotalReplays
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UTslGameInstance::GetNumTotalReplays()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4235);

	UTslGameInstance_GetNumTotalReplays_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameInstance.GetNumReplaysForNullStreamer
// (Final, Native, Public, BlueprintCallable)

void UTslGameInstance::GetNumReplaysForNullStreamer()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4234);

	UTslGameInstance_GetNumReplaysForNullStreamer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.GetGameEventObserver
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGameEventObserver*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UGameEventObserver* UTslGameInstance::GetGameEventObserver()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4232);

	UTslGameInstance_GetGameEventObserver_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameInstance.GetDemoDiskFreeSpace
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameInstance::GetDemoDiskFreeSpace()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4230);

	UTslGameInstance_GetDemoDiskFreeSpace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameInstance.GetCurrentGameState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName UTslGameInstance::GetCurrentGameState()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4228);

	UTslGameInstance_GetCurrentGameState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameInstance.FindRecorderCharacterForPlayback
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class ATslCharacter*>   ReplicatedCharacterList        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class ATslCharacter*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslCharacter* UTslGameInstance::FindRecorderCharacterForPlayback(TArray<class ATslCharacter*> ReplicatedCharacterList)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4224);

	UTslGameInstance_FindRecorderCharacterForPlayback_Params params;
	params.ReplicatedCharacterList = ReplicatedCharacterList;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameInstance.EnumerateReplayKillEvents
// (Final, Native, Public, BlueprintCallable)

void UTslGameInstance::EnumerateReplayKillEvents()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4223);

	UTslGameInstance_EnumerateReplayKillEvents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.EnumerateReplayGroggyEvents
// (Final, Native, Public, BlueprintCallable)

void UTslGameInstance::EnumerateReplayGroggyEvents()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4222);

	UTslGameInstance_EnumerateReplayGroggyEvents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction TslGame.TslGameInstance.DownloadZippedReplayProgressDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// struct FString                 strFileName                    (Parm, ZeroConstructor)
// int                            nReceived                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            nTotal                         (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameInstance::DownloadZippedReplayProgressDelegate__DelegateSignature(const struct FString& strFileName, int nReceived, int nTotal)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4218);

	UTslGameInstance_DownloadZippedReplayProgressDelegate__DelegateSignature_Params params;
	params.strFileName = strFileName;
	params.nReceived = nReceived;
	params.nTotal = nTotal;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction TslGame.TslGameInstance.DownloadZippedReplayCompleteDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// struct FString                 strFullPath                    (Parm, ZeroConstructor)
// struct FString                 strDirToExtract                (Parm, ZeroConstructor)

void UTslGameInstance::DownloadZippedReplayCompleteDelegate__DelegateSignature(const struct FString& strFullPath, const struct FString& strDirToExtract)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4215);

	UTslGameInstance_DownloadZippedReplayCompleteDelegate__DelegateSignature_Params params;
	params.strFullPath = strFullPath;
	params.strDirToExtract = strDirToExtract;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameInstance.DownloadZippedReplayBPByRegion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 Region                         (Parm, ZeroConstructor)
// struct FString                 SessionName                    (Parm, ZeroConstructor)
// int                            nTotalSize                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameInstance::DownloadZippedReplayBPByRegion(const struct FString& Region, const struct FString& SessionName, int nTotalSize)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4210);

	UTslGameInstance_DownloadZippedReplayBPByRegion_Params params;
	params.Region = Region;
	params.SessionName = SessionName;
	params.nTotalSize = nTotalSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameInstance.DeleteZippedReplayBP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 ArchiveName                    (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameInstance::DeleteZippedReplayBP(const struct FString& ArchiveName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4207);

	UTslGameInstance_DeleteZippedReplayBP_Params params;
	params.ArchiveName = ArchiveName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameInstance.DeleteReplayBPByRegionOrLocal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 RegionOrLocal                  (Parm, ZeroConstructor)
// struct FString                 SessionName                    (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameInstance::DeleteReplayBPByRegionOrLocal(const struct FString& RegionOrLocal, const struct FString& SessionName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4203);

	UTslGameInstance_DeleteReplayBPByRegionOrLocal_Params params;
	params.RegionOrLocal = RegionOrLocal;
	params.SessionName = SessionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameInstance.CancelDownloadingZippedReplay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 SessionName                    (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameInstance::CancelDownloadingZippedReplay(const struct FString& SessionName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4200);

	UTslGameInstance_CancelDownloadingZippedReplay_Params params;
	params.SessionName = SessionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameInstance.AddPlayerStateToReplaySummary
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FTslReplaySummary       inReplaySummary                (Parm, OutParm)
// class ATslPlayerState*         pPlayerState                   (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameInstance::AddPlayerStateToReplaySummary(class ATslPlayerState* pPlayerState, struct FTslReplaySummary* inReplaySummary)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(4175);

	UTslGameInstance_AddPlayerStateToReplaySummary_Params params;
	params.pPlayerState = pPlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (inReplaySummary != nullptr)
		*inReplaySummary = params.inReplaySummary;
}


// Function TslGame.LobbyHUD.TickFadeInOutEffect
// (Final, Native, Private)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::TickFadeInOutEffect(float DeltaTime)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21161);

	ALobbyHUD_TickFadeInOutEffect_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.TickCameraTransition
// (Final, Native, Private)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::TickCameraTransition(float DeltaTime)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21159);

	ALobbyHUD_TickCameraTransition_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.TestLobbyCharacterReady
// (Final, Exec, Native, Private)
// Parameters:
// uint32_t                       SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bReady                         (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::TestLobbyCharacterReady(uint32_t SlotIndex, bool bReady)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21156);

	ALobbyHUD_TestLobbyCharacterReady_Params params;
	params.SlotIndex = SlotIndex;
	params.bReady = bReady;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.TestLobbyCharacterHost
// (Final, Exec, Native, Private)
// Parameters:
// uint32_t                       SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::TestLobbyCharacterHost(uint32_t SlotIndex)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21154);

	ALobbyHUD_TestLobbyCharacterHost_Params params;
	params.SlotIndex = SlotIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.TestLobbyCharacterAddAngle
// (Final, Exec, Native, Private)
// Parameters:
// int                            SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          InYawInDegree                  (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::TestLobbyCharacterAddAngle(int SlotIndex, float InYawInDegree)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21151);

	ALobbyHUD_TestLobbyCharacterAddAngle_Params params;
	params.SlotIndex = SlotIndex;
	params.InYawInDegree = InYawInDegree;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.TestLobbyCamera_TeleportTo
// (Final, Exec, Native, Private)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::TestLobbyCamera_TeleportTo(int Index)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21149);

	ALobbyHUD_TestLobbyCamera_TeleportTo_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.TestLobbyCamera_StartTransitionTo
// (Final, Exec, Native, Private)
// Parameters:
// int                            ToIndex                        (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::TestLobbyCamera_StartTransitionTo(int ToIndex)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21147);

	ALobbyHUD_TestLobbyCamera_StartTransitionTo_Params params;
	params.ToIndex = ToIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.TestLobbyCamera_StartTransitionFromTo
// (Final, Exec, Native, Private)
// Parameters:
// int                            FromIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ToIndex                        (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::TestLobbyCamera_StartTransitionFromTo(int FromIndex, int ToIndex)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21144);

	ALobbyHUD_TestLobbyCamera_StartTransitionFromTo_Params params;
	params.FromIndex = FromIndex;
	params.ToIndex = ToIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.TestLobbyCamera_SpawnCharacters
// (Final, Exec, Native, Private)
// Parameters:
// int                            Num                            (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::TestLobbyCamera_SpawnCharacters(int Num)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21142);

	ALobbyHUD_TestLobbyCamera_SpawnCharacters_Params params;
	params.Num = Num;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.TestLobbyCamera_Init
// (Final, Exec, Native, Private)

void ALobbyHUD::TestLobbyCamera_Init()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21141);

	ALobbyHUD_TestLobbyCamera_Init_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.TeleportCameraTo
// (Final, Native, Public)
// Parameters:
// ELobbyCameraStates             InCameraState                  (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::TeleportCameraTo(ELobbyCameraStates InCameraState)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21138);

	ALobbyHUD_TeleportCameraTo_Params params;
	params.InCameraState = InCameraState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.StopFadeInOutEffect
// (Final, Native, Private)

void ALobbyHUD::StopFadeInOutEffect()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21137);

	ALobbyHUD_StopFadeInOutEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.StopCameraTransition
// (Final, Native, Private)

void ALobbyHUD::StopCameraTransition()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21136);

	ALobbyHUD_StopCameraTransition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.StartFadeInOutEffect
// (Final, Native, Private)

void ALobbyHUD::StartFadeInOutEffect()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21135);

	ALobbyHUD_StartFadeInOutEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.StartCameraTransitionTo
// (Final, Native, Public)
// Parameters:
// ELobbyCameraStates             InToCameraState                (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::StartCameraTransitionTo(ELobbyCameraStates InToCameraState)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21132);

	ALobbyHUD_StartCameraTransitionTo_Params params;
	params.InToCameraState = InToCameraState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.StartCameraTransitionFromTo
// (Final, Native, Public)
// Parameters:
// ELobbyCameraStates             InFromCameraState              (Parm, ZeroConstructor, IsPlainOldData)
// ELobbyCameraStates             InToCameraState                (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::StartCameraTransitionFromTo(ELobbyCameraStates InFromCameraState, ELobbyCameraStates InToCameraState)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21127);

	ALobbyHUD_StartCameraTransitionFromTo_Params params;
	params.InFromCameraState = InFromCameraState;
	params.InToCameraState = InToCameraState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.SetWidgetForBinding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ViewIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// class UCoherentUIGTWidget*     Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ALobbyHUD::SetWidgetForBinding(int ViewIndex, class UCoherentUIGTWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21124);

	ALobbyHUD_SetWidgetForBinding_Params params;
	params.ViewIndex = ViewIndex;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.SetLobbyCharacterHiddenInGame
// (Final, Native, Private)
// Parameters:
// uint32_t                       SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bNewHidden                     (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::SetLobbyCharacterHiddenInGame(uint32_t SlotIndex, bool bNewHidden)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21121);

	ALobbyHUD_SetLobbyCharacterHiddenInGame_Params params;
	params.SlotIndex = SlotIndex;
	params.bNewHidden = bNewHidden;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.RequestSystemMenu
// (Final, Native, Public)

void ALobbyHUD::RequestSystemMenu()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21120);

	ALobbyHUD_RequestSystemMenu_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.OnReplaySummary
// (Final, Native, Private)
// Parameters:
// struct FTslReplaySummary       ReplaySummary                  (Parm)

void ALobbyHUD::OnReplaySummary(const struct FTslReplaySummary& ReplaySummary)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21118);

	ALobbyHUD_OnReplaySummary_Params params;
	params.ReplaySummary = ReplaySummary;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.OnReplayList
// (Final, Native, Private)

void ALobbyHUD::OnReplayList()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21117);

	ALobbyHUD_OnReplayList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.OnDeleteOldReplays
// (Final, Native, Private)
// Parameters:
// int                            RemainedReplayNum              (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::OnDeleteOldReplays(int RemainedReplayNum)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21115);

	ALobbyHUD_OnDeleteOldReplays_Params params;
	params.RemainedReplayNum = RemainedReplayNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.NotifyLobbySceneChanged
// (Final, Native, Private)
// Parameters:
// bool                           bIsCustomizationScene          (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::NotifyLobbySceneChanged(bool bIsCustomizationScene)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21113);

	ALobbyHUD_NotifyLobbySceneChanged_Params params;
	params.bIsCustomizationScene = bIsCustomizationScene;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.NotifyLobbyCharacterCreated
// (Final, Native, Private)
// Parameters:
// int                            InSlotIndex                    (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::NotifyLobbyCharacterCreated(int InSlotIndex)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21111);

	ALobbyHUD_NotifyLobbyCharacterCreated_Params params;
	params.InSlotIndex = InSlotIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.LeaveCustomizationMenu
// (Final, Native, Private)
// Parameters:
// ELobbyCameraStates             InFromCameraState              (Parm, ZeroConstructor, IsPlainOldData)
// ELobbyCameraStates             InToCameraState                (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::LeaveCustomizationMenu(ELobbyCameraStates InFromCameraState, ELobbyCameraStates InToCameraState)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21106);

	ALobbyHUD_LeaveCustomizationMenu_Params params;
	params.InFromCameraState = InFromCameraState;
	params.InToCameraState = InToCameraState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.IsCameraHasBlurEffect
// (Final, Native, Private, Const)
// Parameters:
// ELobbyCameraStates             InLobbyCameraState             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ALobbyHUD::IsCameraHasBlurEffect(ELobbyCameraStates InLobbyCameraState)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21102);

	ALobbyHUD_IsCameraHasBlurEffect_Params params;
	params.InLobbyCameraState = InLobbyCameraState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.LobbyHUD.InitLobbyTransition
// (Final, Native, Public)

void ALobbyHUD::InitLobbyTransition()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21101);

	ALobbyHUD_InitLobbyTransition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.InitFadeInOutEffect
// (Final, Native, Private)

void ALobbyHUD::InitFadeInOutEffect()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21100);

	ALobbyHUD_InitFadeInOutEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.InitCameraTransition
// (Final, Native, Private)

void ALobbyHUD::InitCameraTransition()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21099);

	ALobbyHUD_InitCameraTransition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.GetStartUrl
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ALobbyHUD::GetStartUrl()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21097);

	ALobbyHUD_GetStartUrl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.LobbyHUD.GetLobbyCharacterNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ALobbyHUD::GetLobbyCharacterNum()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21095);

	ALobbyHUD_GetLobbyCharacterNum_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.LobbyHUD.GetLobbyCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// class ALobbyCharacter*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ALobbyCharacter* ALobbyHUD::GetLobbyCharacter(int SlotIndex)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21092);

	ALobbyHUD_GetLobbyCharacter_Params params;
	params.SlotIndex = SlotIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.LobbyHUD.GetLobbyCameraState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ELobbyCameraStates             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ELobbyCameraStates ALobbyHUD::GetLobbyCameraState()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21089);

	ALobbyHUD_GetLobbyCameraState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.LobbyHUD.GetLobbyCamera
// (Final, Native, Private)
// Parameters:
// ELobbyCameraStates             InLobbyCameraState             (Parm, ZeroConstructor, IsPlainOldData)
// class ACameraActor*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ACameraActor* ALobbyHUD::GetLobbyCamera(ELobbyCameraStates InLobbyCameraState)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21085);

	ALobbyHUD_GetLobbyCamera_Params params;
	params.InLobbyCameraState = InLobbyCameraState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.LobbyHUD.GetCurveDuration
// (Final, Native, Private, Const)
// Parameters:
// class UCurveFloat*             InCurve                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ALobbyHUD::GetCurveDuration(class UCurveFloat* InCurve)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21082);

	ALobbyHUD_GetCurveDuration_Params params;
	params.InCurve = InCurve;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.LobbyHUD.EnterCustomizationMenu
// (Final, Native, Private)
// Parameters:
// ELobbyCameraStates             InFromCameraState              (Parm, ZeroConstructor, IsPlainOldData)
// ELobbyCameraStates             InToCameraState                (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::EnterCustomizationMenu(ELobbyCameraStates InFromCameraState, ELobbyCameraStates InToCameraState)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21077);

	ALobbyHUD_EnterCustomizationMenu_Params params;
	params.InFromCameraState = InFromCameraState;
	params.InToCameraState = InToCameraState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.DecideBlurChangingState
// (Final, Native, Private, Const)
// Parameters:
// ELobbyCameraStates             InFromState                    (Parm, ZeroConstructor, IsPlainOldData)
// ELobbyCameraStates             InToState                      (Parm, ZeroConstructor, IsPlainOldData)
// ELobbyBlurChangingStates       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ELobbyBlurChangingStates ALobbyHUD::DecideBlurChangingState(ELobbyCameraStates InFromState, ELobbyCameraStates InToState)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21070);

	ALobbyHUD_DecideBlurChangingState_Params params;
	params.InFromState = InFromState;
	params.InToState = InToState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.LobbyHUD.ClearAllWidget
// (Final, Native, Public, BlueprintCallable)

void ALobbyHUD::ClearAllWidget()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21069);

	ALobbyHUD_ClearAllWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.CacheSubLevelNames
// (Final, Native, Private)

void ALobbyHUD::CacheSubLevelNames()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21068);

	ALobbyHUD_CacheSubLevelNames_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.CachePostProcessEffectFromLevel
// (Final, Native, Private)

void ALobbyHUD::CachePostProcessEffectFromLevel()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21067);

	ALobbyHUD_CachePostProcessEffectFromLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.CacheMainCameraFromLevel
// (Final, Native, Private)

void ALobbyHUD::CacheMainCameraFromLevel()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21066);

	ALobbyHUD_CacheMainCameraFromLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.CacheLobbyCharacterTransforms
// (Final, Native, Private)

void ALobbyHUD::CacheLobbyCharacterTransforms()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21065);

	ALobbyHUD_CacheLobbyCharacterTransforms_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.CacheLobbyCamarasFromLevel
// (Final, Native, Private)

void ALobbyHUD::CacheLobbyCamarasFromLevel()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21064);

	ALobbyHUD_CacheLobbyCamarasFromLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LobbyHUD.AddLobbyCharacterAngle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          AngleInDegree                  (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::AddLobbyCharacterAngle(int SlotIndex, float AngleInDegree)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21061);

	ALobbyHUD_AddLobbyCharacterAngle_Params params;
	params.SlotIndex = SlotIndex;
	params.AngleInDegree = AngleInDegree;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWelcomeBaseHUD.OnPressedPopupCommon
// (Final, Native, Public)
// Parameters:
// EPopupButtonID                 ButtonID                       (Parm, ZeroConstructor, IsPlainOldData)

void ATslWelcomeBaseHUD::OnPressedPopupCommon(EPopupButtonID ButtonID)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21200);

	ATslWelcomeBaseHUD_OnPressedPopupCommon_Params params;
	params.ButtonID = ButtonID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslEntryPlayerController.LoadReplay
// (Final, Exec, Native, Private)
// Parameters:
// struct FString                 SessionName                    (Parm, ZeroConstructor)

void ATslEntryPlayerController::LoadReplay(const struct FString& SessionName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21207);

	ATslEntryPlayerController_LoadReplay_Params params;
	params.SessionName = SessionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslEntryPlayerController.HandleLobbySystemMenu
// (Final, Native, Private)

void ATslEntryPlayerController::HandleLobbySystemMenu()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21206);

	ATslEntryPlayerController_HandleLobbySystemMenu_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.PerfBotPlayerController.ServerMoveToLocation
// (Net, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 Location                       (Parm, IsPlainOldData)

void APerfBotPlayerController::ServerMoveToLocation(const struct FVector& Location)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21211);

	APerfBotPlayerController_ServerMoveToLocation_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.PerfBotPlayerController.ClientQuit
// (Net, NetReliable, Native, Event, Public, NetClient)

void APerfBotPlayerController::ClientQuit()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21210);

	APerfBotPlayerController_ClientQuit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.CharacterBreathBuff.GetCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslCharacter*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslCharacter* ACharacterBreathBuff::GetCharacter()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21221);

	ACharacterBreathBuff_GetCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.CharacterBreathBuff.GetBreathComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCharacterBreathComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UCharacterBreathComponent* ACharacterBreathBuff::GetBreathComponent()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21219);

	ACharacterBreathBuff_GetBreathComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCharacterProxy.UpdateEquippedWeapons
// (Final, Native, Public)

void ATslCharacterProxy::UpdateEquippedWeapons()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21300);

	ATslCharacterProxy_UpdateEquippedWeapons_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacterProxy.UpdateCharacterAppearance
// (Final, Native, Public)

void ATslCharacterProxy::UpdateCharacterAppearance()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21299);

	ATslCharacterProxy_UpdateCharacterAppearance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacterProxy.UpdateArmedWeapons
// (Final, Native, Public)

void ATslCharacterProxy::UpdateArmedWeapons()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21298);

	ATslCharacterProxy_UpdateArmedWeapons_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacterProxy.SetAccessorySlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTslAccessoryComponent*  AccessoryComponent             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// EAccessorySlot                 Slot                           (Parm, ZeroConstructor, IsPlainOldData)

void ATslCharacterProxy::SetAccessorySlot(class UTslAccessoryComponent* AccessoryComponent, EAccessorySlot Slot)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21294);

	ATslCharacterProxy_SetAccessorySlot_Params params;
	params.AccessoryComponent = AccessoryComponent;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCharacterProxy.GetAccessorySlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAccessorySlot                 Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// class UTslAccessoryComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UTslAccessoryComponent* ATslCharacterProxy::GetAccessorySlot(EAccessorySlot Slot)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21290);

	ATslCharacterProxy_GetAccessorySlot_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCheatManager.ToggleVisibilityOfDestructibleComponents
// (Final, Exec, Native, Public)

void UTslCheatManager::ToggleVisibilityOfDestructibleComponents()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21477);

	UTslCheatManager_ToggleVisibilityOfDestructibleComponents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCheatManager.ToggleMatchTimer
// (Final, Exec, Native, Public)

void UTslCheatManager::ToggleMatchTimer()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21476);

	UTslCheatManager_ToggleMatchTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCheatManager.ToggleII
// (Final, Exec, Native, Public)
// Parameters:
// float                          Interval                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslCheatManager::ToggleII(float Interval)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21474);

	UTslCheatManager_ToggleII_Params params;
	params.Interval = Interval;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCheatManager.ToggleFreeMode
// (Final, Exec, Native, Public)

void UTslCheatManager::ToggleFreeMode()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21473);

	UTslCheatManager_ToggleFreeMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCheatManager.ToggleCollisionOfDestructibleComponents
// (Final, Exec, Native, Public)

void UTslCheatManager::ToggleCollisionOfDestructibleComponents()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21472);

	UTslCheatManager_ToggleCollisionOfDestructibleComponents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCheatManager.TestVoiceAccessToken
// (Final, Exec, Native, Public)

void UTslCheatManager::TestVoiceAccessToken()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21471);

	UTslCheatManager_TestVoiceAccessToken_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCheatManager.SpawnBot
// (Final, Exec, Native, Public)

void UTslCheatManager::SpawnBot()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21470);

	UTslCheatManager_SpawnBot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCheatManager.SetVehicleRepRotCorrection
// (Final, Exec, Native, Public)
// Parameters:
// float                          AngularDeltaThreshold          (Parm, ZeroConstructor, IsPlainOldData)
// float                          AngularInterpAlpha             (Parm, ZeroConstructor, IsPlainOldData)
// float                          AngularRecipFixTime            (Parm, ZeroConstructor, IsPlainOldData)

void UTslCheatManager::SetVehicleRepRotCorrection(float AngularDeltaThreshold, float AngularInterpAlpha, float AngularRecipFixTime)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21466);

	UTslCheatManager_SetVehicleRepRotCorrection_Params params;
	params.AngularDeltaThreshold = AngularDeltaThreshold;
	params.AngularInterpAlpha = AngularInterpAlpha;
	params.AngularRecipFixTime = AngularRecipFixTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCheatManager.SetVehicleRepPosCorrection
// (Final, Exec, Native, Public)
// Parameters:
// float                          LinearDeltaThresholdSq         (Parm, ZeroConstructor, IsPlainOldData)
// float                          LinearInterpAlpha              (Parm, ZeroConstructor, IsPlainOldData)
// float                          LinearRecipFixTime             (Parm, ZeroConstructor, IsPlainOldData)
// float                          BodySpeedThresholdSq           (Parm, ZeroConstructor, IsPlainOldData)

void UTslCheatManager::SetVehicleRepPosCorrection(float LinearDeltaThresholdSq, float LinearInterpAlpha, float LinearRecipFixTime, float BodySpeedThresholdSq)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21461);

	UTslCheatManager_SetVehicleRepPosCorrection_Params params;
	params.LinearDeltaThresholdSq = LinearDeltaThresholdSq;
	params.LinearInterpAlpha = LinearInterpAlpha;
	params.LinearRecipFixTime = LinearRecipFixTime;
	params.BodySpeedThresholdSq = BodySpeedThresholdSq;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCheatManager.SetSpectatorYawAndPitch
// (Final, Exec, Native, Public)
// Parameters:
// float                          Yaw                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          Pitch                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          RevertSmoothSpeed              (Parm, ZeroConstructor, IsPlainOldData)

void UTslCheatManager::SetSpectatorYawAndPitch(float Yaw, float Pitch, float RevertSmoothSpeed)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21457);

	UTslCheatManager_SetSpectatorYawAndPitch_Params params;
	params.Yaw = Yaw;
	params.Pitch = Pitch;
	params.RevertSmoothSpeed = RevertSmoothSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCheatManager.SetClientConnectionTimeout
// (Final, Exec, Native, Public)
// Parameters:
// float                          TimeoutSeconds                 (Parm, ZeroConstructor, IsPlainOldData)

void UTslCheatManager::SetClientConnectionTimeout(float TimeoutSeconds)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21455);

	UTslCheatManager_SetClientConnectionTimeout_Params params;
	params.TimeoutSeconds = TimeoutSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCheatManager.SetBPFactor
// (Final, Exec, Native, Public)
// Parameters:
// float                          factor                         (Parm, ZeroConstructor, IsPlainOldData)

void UTslCheatManager::SetBPFactor(float factor)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21453);

	UTslCheatManager_SetBPFactor_Params params;
	params.factor = factor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCheatManager.ReturnLookAt
// (Final, Exec, Native, Public)

void UTslCheatManager::ReturnLookAt()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21452);

	UTslCheatManager_ReturnLookAt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCheatManager.OnInteract
// (Final, Native, Private)

void UTslCheatManager::OnInteract()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21451);

	UTslCheatManager_OnInteract_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCheatManager.OnFullMapSequenceStop
// (Final, Native, Private)

void UTslCheatManager::OnFullMapSequenceStop()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21450);

	UTslCheatManager_OnFullMapSequenceStop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCheatManager.MoveVehicleOnClient
// (Final, Exec, Native, Public)
// Parameters:
// float                          X                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Y                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Z                              (Parm, ZeroConstructor, IsPlainOldData)

void UTslCheatManager::MoveVehicleOnClient(float X, float Y, float Z)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21446);

	UTslCheatManager_MoveVehicleOnClient_Params params;
	params.X = X;
	params.Y = Y;
	params.Z = Z;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCheatManager.LookAt
// (Final, Exec, Native, Public)
// Parameters:
// float                          Pitch                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          Yaw                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          Roll                           (Parm, ZeroConstructor, IsPlainOldData)

void UTslCheatManager::LookAt(float Pitch, float Yaw, float Roll)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21442);

	UTslCheatManager_LookAt_Params params;
	params.Pitch = Pitch;
	params.Yaw = Yaw;
	params.Roll = Roll;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCheatManager.InsertCrashMeCommand
// (Final, Native, Private)

void UTslCheatManager::InsertCrashMeCommand()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21441);

	UTslCheatManager_InsertCrashMeCommand_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCheatManager.ForceMatchStart
// (Final, Exec, Native, Public)

void UTslCheatManager::ForceMatchStart()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21440);

	UTslCheatManager_ForceMatchStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCheatManager.DumpVoiceDevices
// (Final, Exec, Native, Public)

void UTslCheatManager::DumpVoiceDevices()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21439);

	UTslCheatManager_DumpVoiceDevices_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCheatManager.DumpReplicatedItems
// (Final, Exec, Native, Public)

void UTslCheatManager::DumpReplicatedItems()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21438);

	UTslCheatManager_DumpReplicatedItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCheatManager.DumpDestructibleComponents
// (Final, Exec, Native, Public)

void UTslCheatManager::DumpDestructibleComponents()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21437);

	UTslCheatManager_DumpDestructibleComponents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCheatManager.DrawVehicleCenterOfMass
// (Final, Exec, Native, Public)

void UTslCheatManager::DrawVehicleCenterOfMass()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21436);

	UTslCheatManager_DrawVehicleCenterOfMass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCheatManager.DelayCrash
// (Final, Exec, Native, Public)
// Parameters:
// float                          DelaySeconds                   (Parm, ZeroConstructor, IsPlainOldData)

void UTslCheatManager::DelayCrash(float DelaySeconds)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21434);

	UTslCheatManager_DelayCrash_Params params;
	params.DelaySeconds = DelaySeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCheatManager.CtrlShortCutOnOff
// (Final, Exec, Native, Public)
// Parameters:
// bool                           OnOff                          (Parm, ZeroConstructor, IsPlainOldData)

void UTslCheatManager::CtrlShortCutOnOff(bool OnOff)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21432);

	UTslCheatManager_CtrlShortCutOnOff_Params params;
	params.OnOff = OnOff;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCheatManager.CopyDebugInfoRotation
// (Final, Exec, Native, Public)

void UTslCheatManager::CopyDebugInfoRotation()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21431);

	UTslCheatManager_CopyDebugInfoRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCheatManager.CopyDebugInfoLocation
// (Final, Exec, Native, Public)

void UTslCheatManager::CopyDebugInfoLocation()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21430);

	UTslCheatManager_CopyDebugInfoLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCheatManager.CopyDebugInfo
// (Final, Exec, Native, Public)

void UTslCheatManager::CopyDebugInfo()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21429);

	UTslCheatManager_CopyDebugInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCheatManager.Cheat
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 Msg                            (Parm, ZeroConstructor)

void UTslCheatManager::Cheat(const struct FString& Msg)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21427);

	UTslCheatManager_Cheat_Params params;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCheatManager.ChangeTeam
// (Final, Exec, Native, Public)
// Parameters:
// int                            NewTeamNumber                  (Parm, ZeroConstructor, IsPlainOldData)

void UTslCheatManager::ChangeTeam(int NewTeamNumber)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21425);

	UTslCheatManager_ChangeTeam_Params params;
	params.NewTeamNumber = NewTeamNumber;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCheatManager.ActivatePakOrderingMode
// (Final, Exec, Native, Public)

void UTslCheatManager::ActivatePakOrderingMode()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21424);

	UTslCheatManager_ActivatePakOrderingMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslCoherentWidget.GoBack
// (Final, Native, Public, BlueprintCallable)

void UTslCoherentWidget::GoBack()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21529);

	UTslCoherentWidget_GoBack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslDestructibleComponent.ClientReceiveComponentDamage
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// float                          DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, ReferenceParm)
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void UTslDestructibleComponent::ClientReceiveComponentDamage(float DamageAmount, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21717);

	UTslDestructibleComponent_ClientReceiveComponentDamage_Params params;
	params.DamageAmount = DamageAmount;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslDestructibleContainer.OnRep_Flag
// (Final, Native, Private)

void ATslDestructibleContainer::OnRep_Flag()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21722);

	ATslDestructibleContainer_OnRep_Flag_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslDoor.OnRep_DoorOpened
// (Final, Native, Protected)

void ATslDoor::OnRep_DoorOpened()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21732);

	ATslDoor_OnRep_DoorOpened_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslDoor.OnRep_DoorBreakingState
// (Final, Native, Protected)

void ATslDoor::OnRep_DoorBreakingState()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21731);

	ATslDoor_OnRep_DoorBreakingState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslDoor.OnInteractBy
// (Native, Protected)
// Parameters:
// class ATslCharacter*           OtherCharacter                 (Parm, ZeroConstructor, IsPlainOldData)

void ATslDoor::OnInteractBy(class ATslCharacter* OtherCharacter)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21729);

	ATslDoor_OnInteractBy_Params params;
	params.OtherCharacter = OtherCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslDoor.ClientTakeDamage
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize     HitLocation                    (ConstParm, Parm, ReferenceParm)
// float                          DamageRadius                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          Impulse                        (Parm, ZeroConstructor, IsPlainOldData)

void ATslDoor::ClientTakeDamage(float Damage, const struct FVector_NetQuantize& HitLocation, float DamageRadius, float Impulse)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(21724);

	ATslDoor_ClientTakeDamage_Params params;
	params.Damage = Damage;
	params.HitLocation = HitLocation;
	params.DamageRadius = DamageRadius;
	params.Impulse = Impulse;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslExplosionEffect.OnParticleCollide
// (Final, Native, Private, HasDefaults)
// Parameters:
// struct FName                   EventName                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          EmitterTime                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            ParticleTime                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Location                       (Parm, IsPlainOldData)
// struct FVector                 Velocity                       (Parm, IsPlainOldData)
// struct FVector                 Direction                      (Parm, IsPlainOldData)
// struct FVector                 Normal                         (Parm, IsPlainOldData)
// struct FName                   BoneName                       (Parm, ZeroConstructor, IsPlainOldData)

void ATslExplosionEffect::OnParticleCollide(const struct FName& EventName, float EmitterTime, int ParticleTime, const struct FVector& Location, const struct FVector& Velocity, const struct FVector& Direction, const struct FVector& Normal, const struct FName& BoneName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22106);

	ATslExplosionEffect_OnParticleCollide_Params params;
	params.EventName = EventName;
	params.EmitterTime = EmitterTime;
	params.ParticleTime = ParticleTime;
	params.Location = Location;
	params.Velocity = Velocity;
	params.Direction = Direction;
	params.Normal = Normal;
	params.BoneName = BoneName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslExplosionReactionInterface.OnExplode
// (Event, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                          DamageAmout                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// TArray<struct FHitResult>      ComponentHits                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void UTslExplosionReactionInterface::OnExplode(float DamageAmout, const struct FVector& Origin, TArray<struct FHitResult> ComponentHits, class AController* EventInstigator, class AActor* DamageCauser)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22122);

	UTslExplosionReactionInterface_OnExplode_Params params;
	params.DamageAmout = DamageAmout;
	params.Origin = Origin;
	params.ComponentHits = ComponentHits;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslFence.GetSplineComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USplineComponent*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USplineComponent* ATslFence::GetSplineComponent()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22129);

	ATslFence_GetSplineComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslReactionComponent.OnRep_PendingDestroy
// (Final, Native, Protected)
// Parameters:
// bool                           PrevPendingDestroy             (Parm, ZeroConstructor, IsPlainOldData)

void UTslReactionComponent::OnRep_PendingDestroy(bool PrevPendingDestroy)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22176);

	UTslReactionComponent_OnRep_PendingDestroy_Params params;
	params.PrevPendingDestroy = PrevPendingDestroy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslReactionComponent.Client_ReactByVehicle
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// struct FVector                 Impact                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 ImpulseDir                     (ConstParm, Parm, IsPlainOldData)
// struct FVector                 Velocity                       (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void UTslReactionComponent::Client_ReactByVehicle(const struct FVector& Impact, const struct FVector& ImpulseDir, const struct FVector& Velocity)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22172);

	UTslReactionComponent_Client_ReactByVehicle_Params params;
	params.Impact = Impact;
	params.ImpulseDir = ImpulseDir;
	params.Velocity = Velocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslReactionComponent.Client_ReactByRadialDamage
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// float                          DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Origin                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 Impact                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 ImpulseDir                     (ConstParm, Parm, IsPlainOldData)
// float                          OuterRadius                    (Parm, ZeroConstructor, IsPlainOldData)

void UTslReactionComponent::Client_ReactByRadialDamage(float DamageAmount, const struct FVector& Origin, const struct FVector& Impact, const struct FVector& ImpulseDir, float OuterRadius)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22166);

	UTslReactionComponent_Client_ReactByRadialDamage_Params params;
	params.DamageAmount = DamageAmount;
	params.Origin = Origin;
	params.Impact = Impact;
	params.ImpulseDir = ImpulseDir;
	params.OuterRadius = OuterRadius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslReactionComponent.Client_ReactByPointDamage
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// float                          DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Impact                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 ImpulseDir                     (ConstParm, Parm, IsPlainOldData)

void UTslReactionComponent::Client_ReactByPointDamage(float DamageAmount, const struct FVector& Impact, const struct FVector& ImpulseDir)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22162);

	UTslReactionComponent_Client_ReactByPointDamage_Params params;
	params.DamageAmount = DamageAmount;
	params.Impact = Impact;
	params.ImpulseDir = ImpulseDir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslFocusableWidgetInterface.Up
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslFocusableWidgetInterface::Up()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22235);

	UTslFocusableWidgetInterface_Up_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslFocusableWidgetInterface.SetFocus
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           NewFocus                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslFocusableWidgetInterface::SetFocus(bool NewFocus)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22232);

	UTslFocusableWidgetInterface_SetFocus_Params params;
	params.NewFocus = NewFocus;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslFocusableWidgetInterface.Right
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslFocusableWidgetInterface::Right()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22230);

	UTslFocusableWidgetInterface_Right_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslFocusableWidgetInterface.Left
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslFocusableWidgetInterface::Left()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22228);

	UTslFocusableWidgetInterface_Left_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslFocusableWidgetInterface.IsFocusable
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslFocusableWidgetInterface::IsFocusable()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22226);

	UTslFocusableWidgetInterface_IsFocusable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslFocusableWidgetInterface.IsFocus
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslFocusableWidgetInterface::IsFocus()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22224);

	UTslFocusableWidgetInterface_IsFocus_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslFocusableWidgetInterface.InputY
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslFocusableWidgetInterface::InputY()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22222);

	UTslFocusableWidgetInterface_InputY_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslFocusableWidgetInterface.InputX
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslFocusableWidgetInterface::InputX()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22220);

	UTslFocusableWidgetInterface_InputX_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslFocusableWidgetInterface.InputRT
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslFocusableWidgetInterface::InputRT()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22218);

	UTslFocusableWidgetInterface_InputRT_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslFocusableWidgetInterface.InputRB
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslFocusableWidgetInterface::InputRB()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22216);

	UTslFocusableWidgetInterface_InputRB_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslFocusableWidgetInterface.InputLT
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslFocusableWidgetInterface::InputLT()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22214);

	UTslFocusableWidgetInterface_InputLT_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslFocusableWidgetInterface.InputLB
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslFocusableWidgetInterface::InputLB()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22212);

	UTslFocusableWidgetInterface_InputLB_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslFocusableWidgetInterface.InputB
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslFocusableWidgetInterface::InputB()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22210);

	UTslFocusableWidgetInterface_InputB_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslFocusableWidgetInterface.InputA
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslFocusableWidgetInterface::InputA()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22208);

	UTslFocusableWidgetInterface_InputA_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslFocusableWidgetInterface.GetUpWidget
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUserWidget* UTslFocusableWidgetInterface::GetUpWidget()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22206);

	UTslFocusableWidgetInterface_GetUpWidget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslFocusableWidgetInterface.GetRightWidget
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUserWidget* UTslFocusableWidgetInterface::GetRightWidget()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22204);

	UTslFocusableWidgetInterface_GetRightWidget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslFocusableWidgetInterface.GetLeftWidget
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUserWidget* UTslFocusableWidgetInterface::GetLeftWidget()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22202);

	UTslFocusableWidgetInterface_GetLeftWidget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslFocusableWidgetInterface.GetFocusingChildWidget
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUserWidget* UTslFocusableWidgetInterface::GetFocusingChildWidget()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22200);

	UTslFocusableWidgetInterface_GetFocusingChildWidget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslFocusableWidgetInterface.GetDownWidget
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUserWidget* UTslFocusableWidgetInterface::GetDownWidget()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22198);

	UTslFocusableWidgetInterface_GetDownWidget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslFocusableWidgetInterface.Down
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslFocusableWidgetInterface::Down()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22196);

	UTslFocusableWidgetInterface_Down_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameMode.SendSystemMessageToAll
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESystemMessageType             MessageType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   Message                        (Parm)
// float                          MessageDuration                (Parm, ZeroConstructor, IsPlainOldData)

void ATslGameMode::SendSystemMessageToAll(ESystemMessageType MessageType, const struct FText& Message, float MessageDuration)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22268);

	ATslGameMode_SendSystemMessageToAll_Params params;
	params.MessageType = MessageType;
	params.Message = Message;
	params.MessageDuration = MessageDuration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameMode.NotifyRestrictingPlayAreaToAll
// (Final, Native, Public, BlueprintCallable)

void ATslGameMode::NotifyRestrictingPlayAreaToAll()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22267);

	ATslGameMode_NotifyRestrictingPlayAreaToAll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameMode.NotifyNextGasInToAll
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 PoisonGasWarningPosition       (Parm, IsPlainOldData)
// float                          PoisonGasWarningRadius         (Parm, ZeroConstructor, IsPlainOldData)

void ATslGameMode::NotifyNextGasInToAll(const struct FVector& PoisonGasWarningPosition, float PoisonGasWarningRadius)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22264);

	ATslGameMode_NotifyNextGasInToAll_Params params;
	params.PoisonGasWarningPosition = PoisonGasWarningPosition;
	params.PoisonGasWarningRadius = PoisonGasWarningRadius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameMode.IsPreventFinishMatch
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslGameMode::IsPreventFinishMatch()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22262);

	ATslGameMode_IsPreventFinishMatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameMode.IsPlayInEditor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslGameMode::IsPlayInEditor()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22260);

	ATslGameMode_IsPlayInEditor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameMode.GetVivoxManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UVivoxManager*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UVivoxManager* ATslGameMode::GetVivoxManager()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22258);

	ATslGameMode_GetVivoxManager_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameMode.GetThingSpawnProcessor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UThingSpawnProcessor*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UThingSpawnProcessor* ATslGameMode::GetThingSpawnProcessor()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22256);

	ATslGameMode_GetThingSpawnProcessor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameMode.GetLobbyLink
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ULobbyLink*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ULobbyLink* ATslGameMode::GetLobbyLink()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22254);

	ATslGameMode_GetLobbyLink_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameMode.GetItemSpawnProcessor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UItemSpawnProcessor*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UItemSpawnProcessor* ATslGameMode::GetItemSpawnProcessor()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22252);

	ATslGameMode_GetItemSpawnProcessor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameMode.GetAllPawns
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class APawn*>           OutPawns                       (Parm, OutParm, ZeroConstructor)

void ATslGameMode::GetAllPawns(TArray<class APawn*>* OutPawns)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22249);

	ATslGameMode_GetAllPawns_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutPawns != nullptr)
		*OutPawns = params.OutPawns;
}


// Function TslGame.TslGameMode.FinishMatch
// (Final, Exec, Native, Public, BlueprintCallable)

void ATslGameMode::FinishMatch()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22248);

	ATslGameMode_FinishMatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameMode.FindCharacterByPlayerState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerState*            State                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class ATslCharacter*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslCharacter* ATslGameMode::FindCharacterByPlayerState(class APlayerState* State)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22245);

	ATslGameMode_FindCharacterByPlayerState_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameMode.CanDealDamage
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslPlayerState*         DamageInstigator               (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class ATslPlayerState*         DamagedPlayer                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslGameMode::CanDealDamage(class ATslPlayerState* DamageInstigator, class ATslPlayerState* DamagedPlayer)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22241);

	ATslGameMode_CanDealDamage_Params params;
	params.DamageInstigator = DamageInstigator;
	params.DamagedPlayer = DamagedPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameMode.BroadcastGameModeEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   EventName                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 Parameter                      (Parm, ZeroConstructor)

void ATslGameMode::BroadcastGameModeEvent(const struct FName& EventName, const struct FString& Parameter)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22238);

	ATslGameMode_BroadcastGameModeEvent_Params params;
	params.EventName = EventName;
	params.Parameter = Parameter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameMode.BenchmarkFinished
// (Final, Native, Protected)

void ATslGameMode::BenchmarkFinished()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22237);

	ATslGameMode_BenchmarkFinished_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.WheelAxisNameToWheelActionName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FTslInputKey            Key                            (Parm)
// float                          InAxisScale                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UTslGameOption::STATIC_WheelAxisNameToWheelActionName(const struct FTslInputKey& Key, float InAxisScale)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22973);

	UTslGameOption_WheelAxisNameToWheelActionName_Params params;
	params.Key = Key;
	params.InAxisScale = InAxisScale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.SetWorldMapZoomLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int                            NewZoomLevel                   (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetWorldMapZoomLevel(int NewZoomLevel)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22971);

	UTslGameOption_SetWorldMapZoomLevel_Params params;
	params.NewZoomLevel = NewZoomLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetVSyncEnabled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetVSyncEnabled(bool bEnable)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22969);

	UTslGameOption_SetVSyncEnabled_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetVoiceOutputVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int                            Volume                         (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetVoiceOutputVolume(int Volume)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22967);

	UTslGameOption_SetVoiceOutputVolume_Params params;
	params.Volume = Volume;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetVoiceOutputMute
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bIsMute                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetVoiceOutputMute(bool bIsMute)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22965);

	UTslGameOption_SetVoiceOutputMute_Params params;
	params.bIsMute = bIsMute;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetVoiceInputVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int                            Volume                         (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetVoiceInputVolume(int Volume)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22963);

	UTslGameOption_SetVoiceInputVolume_Params params;
	params.Volume = Volume;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetVoiceInputMute
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bIsMute                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetVoiceInputMute(bool bIsMute)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22961);

	UTslGameOption_SetVoiceInputMute_Params params;
	params.bIsMute = bIsMute;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetUseTeamVoice
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bUse                           (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetUseTeamVoice(bool bUse)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22959);

	UTslGameOption_SetUseTeamVoice_Params params;
	params.bUse = bUse;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetUsePushToTalk
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bUse                           (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetUsePushToTalk(bool bUse)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22957);

	UTslGameOption_SetUsePushToTalk_Params params;
	params.bUse = bUse;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetUseGlobalVoice
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bUse                           (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetUseGlobalVoice(bool bUse)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22955);

	UTslGameOption_SetUseGlobalVoice_Params params;
	params.bUse = bUse;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetUseCharacterCapture
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bUseCharacterCapture           (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetUseCharacterCapture(bool bUseCharacterCapture)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22953);

	UTslGameOption_SetUseCharacterCapture_Params params;
	params.bUseCharacterCapture = bUseCharacterCapture;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetUISoundVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          Volume                         (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetUISoundVolume(float Volume)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22951);

	UTslGameOption_SetUISoundVolume_Params params;
	params.Volume = Volume;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetUISoundMute
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bIsMute                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetUISoundMute(bool bIsMute)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22949);

	UTslGameOption_SetUISoundMute_Params params;
	params.bIsMute = bIsMute;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetTslInputMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EInputModeSettingActions       eAction                        (Parm, ZeroConstructor, IsPlainOldData)
// ETslInputModes                 eTslInputMode                  (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetTslInputMode(EInputModeSettingActions eAction, ETslInputModes eTslInputMode)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22944);

	UTslGameOption_SetTslInputMode_Params params;
	params.eAction = eAction;
	params.eTslInputMode = eTslInputMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetTpsWeaponIconShowType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EUiShowType                    NewShowType                    (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetTpsWeaponIconShowType(EUiShowType NewShowType)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22941);

	UTslGameOption_SetTpsWeaponIconShowType_Params params;
	params.NewShowType = NewShowType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetSelectMinimapTypeIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetSelectMinimapTypeIndex(int Index)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22939);

	UTslGameOption_SetSelectMinimapTypeIndex_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetScreenScale
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetScreenScale(float Value)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22937);

	UTslGameOption_SetScreenScale_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetScreenResoultion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FScreenResolution       ScreenResolution               (Parm)

void UTslGameOption::STATIC_SetScreenResoultion(const struct FScreenResolution& ScreenResolution)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22935);

	UTslGameOption_SetScreenResoultion_Params params;
	params.ScreenResolution = ScreenResolution;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetQualityLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EQualityType                   Quality                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            QualityLevel                   (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetQualityLevel(EQualityType Quality, int QualityLevel)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22931);

	UTslGameOption_SetQualityLevel_Params params;
	params.Quality = Quality;
	params.QualityLevel = QualityLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetOverallScalabilityLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetOverallScalabilityLevel(int Value)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22929);

	UTslGameOption_SetOverallScalabilityLevel_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetMouseSensitivity
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FName                   InMouseSensitiveName           (Parm, ZeroConstructor, IsPlainOldData)
// float                          InMouseSensitivity             (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetMouseSensitivity(const struct FName& InMouseSensitiveName, float InMouseSensitivity)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22926);

	UTslGameOption_SetMouseSensitivity_Params params;
	params.InMouseSensitiveName = InMouseSensitiveName;
	params.InMouseSensitivity = InMouseSensitivity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetMotionBlur
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetMotionBlur(bool bEnabled)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22924);

	UTslGameOption_SetMotionBlur_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetMasterSoundVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          Volume                         (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetMasterSoundVolume(float Volume)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22922);

	UTslGameOption_SetMasterSoundVolume_Params params;
	params.Volume = Volume;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetMasterSoundMute
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bIsMute                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetMasterSoundMute(bool bIsMute)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22920);

	UTslGameOption_SetMasterSoundMute_Params params;
	params.bIsMute = bIsMute;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetInvertMouse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bInvert                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetInvertMouse(bool bInvert)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22918);

	UTslGameOption_SetInvertMouse_Params params;
	params.bInvert = bInvert;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetInvertGamePadY
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bInvert                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetInvertGamePadY(bool bInvert)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22916);

	UTslGameOption_SetInvertGamePadY_Params params;
	params.bInvert = bInvert;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetInvertGamePadX
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bInvert                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetInvertGamePadX(bool bInvert)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22914);

	UTslGameOption_SetInvertGamePadX_Params params;
	params.bInvert = bInvert;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetInputKey_Internal
// (Final, Native, Static, Public, HasOutParms)
// Parameters:
// TArray<struct FTslInputKey>    OutKeyList                     (Parm, OutParm, ZeroConstructor)
// struct FTslInputKey            NewKey                         (ConstParm, Parm, OutParm, ReferenceParm)
// EKeyBindingSlot                InKeyBindingSlot               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bGamepad                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetInputKey_Internal(const struct FTslInputKey& NewKey, EKeyBindingSlot InKeyBindingSlot, bool bGamepad, TArray<struct FTslInputKey>* OutKeyList)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22907);

	UTslGameOption_SetInputKey_Internal_Params params;
	params.NewKey = NewKey;
	params.InKeyBindingSlot = InKeyBindingSlot;
	params.bGamepad = bGamepad;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutKeyList != nullptr)
		*OutKeyList = params.OutKeyList;
}


// Function TslGame.TslGameOption.SetIconKillfeedEnabled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetIconKillfeedEnabled(bool bEnable)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22905);

	UTslGameOption_SetIconKillfeedEnabled_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetGamma
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          Gamma                          (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetGamma(float Gamma)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22903);

	UTslGameOption_SetGamma_Params params;
	params.Gamma = Gamma;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetGamePadSensitivity
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FName                   InGamePadSensitiveName         (Parm, ZeroConstructor, IsPlainOldData)
// float                          InGamePadSensitivity           (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetGamePadSensitivity(const struct FName& InGamePadSensitiveName, float InGamePadSensitivity)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22900);

	UTslGameOption_SetGamePadSensitivity_Params params;
	params.InGamePadSensitiveName = InGamePadSensitiveName;
	params.InGamePadSensitivity = InGamePadSensitivity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetGamePadDeadZone
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          InGamePadDeadZone              (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetGamePadDeadZone(float InGamePadDeadZone)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22898);

	UTslGameOption_SetGamePadDeadZone_Params params;
	params.InGamePadDeadZone = InGamePadDeadZone;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetFullScreen
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EWindowMode>       InFullscreenMode               (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetFullScreen(TEnumAsByte<EWindowMode> InFullscreenMode)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22896);

	UTslGameOption_SetFullScreen_Params params;
	params.InFullscreenMode = InFullscreenMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetFpsWeaponSlotShow
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bNewShow                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetFpsWeaponSlotShow(bool bNewShow)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22894);

	UTslGameOption_SetFpsWeaponSlotShow_Params params;
	params.bNewShow = bNewShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetFpsCameraFov
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          NewFovValue                    (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetFpsCameraFov(float NewFovValue)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22892);

	UTslGameOption_SetFpsCameraFov_Params params;
	params.NewFovValue = NewFovValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetFppWeaponIconShowType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EUiShowType                    NewShowType                    (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetFppWeaponIconShowType(EUiShowType NewShowType)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22889);

	UTslGameOption_SetFppWeaponIconShowType_Params params;
	params.NewShowType = NewShowType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetFppEquipableItemIconShowType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EUiShowType                    NewShowType                    (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetFppEquipableItemIconShowType(EUiShowType NewShowType)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22886);

	UTslGameOption_SetFppEquipableItemIconShowType_Params params;
	params.NewShowType = NewShowType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetForceFeedbackEffectEnabled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetForceFeedbackEffectEnabled(bool bEnabled)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22884);

	UTslGameOption_SetForceFeedbackEffectEnabled_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetEquipableIteIconShow
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bNewShow                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetEquipableIteIconShow(bool bNewShow)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22882);

	UTslGameOption_SetEquipableIteIconShow_Params params;
	params.bNewShow = bNewShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetEnablePreloadingMap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetEnablePreloadingMap(bool bEnabled)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22880);

	UTslGameOption_SetEnablePreloadingMap_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetEnableFunctionality
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EGameplayFunctionalities       eAction                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bValue                         (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetEnableFunctionality(EGameplayFunctionalities eAction, bool bValue)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22876);

	UTslGameOption_SetEnableFunctionality_Params params;
	params.eAction = eAction;
	params.bValue = bValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetEnableClientReplay
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EGameplayClientReplay          eAction                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bValue                         (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetEnableClientReplay(EGameplayClientReplay eAction, bool bValue)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22872);

	UTslGameOption_SetEnableClientReplay_Params params;
	params.eAction = eAction;
	params.bValue = bValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetEffectSoundVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          Volume                         (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetEffectSoundVolume(float Volume)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22870);

	UTslGameOption_SetEffectSoundVolume_Params params;
	params.Volume = Volume;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetEffectSoundMute
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bIsMute                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetEffectSoundMute(bool bIsMute)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22868);

	UTslGameOption_SetEffectSoundMute_Params params;
	params.bIsMute = bIsMute;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetCurrentProvider
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 ProviderName                   (Parm, ZeroConstructor)

void UTslGameOption::STATIC_SetCurrentProvider(const struct FString& ProviderName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22866);

	UTslGameOption_SetCurrentProvider_Params params;
	params.ProviderName = ProviderName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetCurrentCultureName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 InCultureName                  (Parm, ZeroConstructor)

void UTslGameOption::STATIC_SetCurrentCultureName(const struct FString& InCultureName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22864);

	UTslGameOption_SetCurrentCultureName_Params params;
	params.InCultureName = InCultureName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetCurrentCrosshairColorString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 CrosshairColorStr              (Parm, ZeroConstructor)

void UTslGameOption::STATIC_SetCurrentCrosshairColorString(const struct FString& CrosshairColorStr)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22862);

	UTslGameOption_SetCurrentCrosshairColorString_Params params;
	params.CrosshairColorStr = CrosshairColorStr;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetCurrentColorBlindKeyByInt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int                            ColorBlindKey                  (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetCurrentColorBlindKeyByInt(int ColorBlindKey)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22860);

	UTslGameOption_SetCurrentColorBlindKeyByInt_Params params;
	params.ColorBlindKey = ColorBlindKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetCurrentColorBlindKey
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EColorBlindType                ColorBlindKey                  (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetCurrentColorBlindKey(EColorBlindType ColorBlindKey)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22857);

	UTslGameOption_SetCurrentColorBlindKey_Params params;
	params.ColorBlindKey = ColorBlindKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetBGMSoundVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          Volume                         (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetBGMSoundVolume(float Volume)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22855);

	UTslGameOption_SetBGMSoundVolume_Params params;
	params.Volume = Volume;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetBGMSoundMute
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bIsMute                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetBGMSoundMute(bool bIsMute)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22853);

	UTslGameOption_SetBGMSoundMute_Params params;
	params.bIsMute = bIsMute;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetAxisKeysToDefault
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   AxisName                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float                          Scale                          (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetAxisKeysToDefault(const struct FName& AxisName, float Scale)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22850);

	UTslGameOption_SetAxisKeysToDefault_Params params;
	params.AxisName = AxisName;
	params.Scale = Scale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetAxisKeys
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   AxisName                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float                          Scale                          (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FTslInputKey>    NewKeys                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UTslGameOption::STATIC_SetAxisKeys(const struct FName& AxisName, float Scale, TArray<struct FTslInputKey> NewKeys)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22845);

	UTslGameOption_SetAxisKeys_Params params;
	params.AxisName = AxisName;
	params.Scale = Scale;
	params.NewKeys = NewKeys;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetAxisKey
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   AxisName                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float                          Scale                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FTslInputKey            NewKey                         (ConstParm, Parm, OutParm, ReferenceParm)
// EKeyBindingSlot                InKeyBindingSlot               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bGamepad                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetAxisKey(const struct FName& AxisName, float Scale, const struct FTslInputKey& NewKey, EKeyBindingSlot InKeyBindingSlot, bool bGamepad)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22838);

	UTslGameOption_SetAxisKey_Params params;
	params.AxisName = AxisName;
	params.Scale = Scale;
	params.NewKey = NewKey;
	params.InKeyBindingSlot = InKeyBindingSlot;
	params.bGamepad = bGamepad;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetActionKeysToDefault
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   ActionName                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UTslGameOption::STATIC_SetActionKeysToDefault(const struct FName& ActionName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22836);

	UTslGameOption_SetActionKeysToDefault_Params params;
	params.ActionName = ActionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetActionKeys
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   ActionName                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// TArray<struct FTslInputKey>    NewKeys                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UTslGameOption::STATIC_SetActionKeys(const struct FName& ActionName, TArray<struct FTslInputKey> NewKeys)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22832);

	UTslGameOption_SetActionKeys_Params params;
	params.ActionName = ActionName;
	params.NewKeys = NewKeys;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.SetActionKey
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   ActionName                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FTslInputKey            NewKey                         (ConstParm, Parm, OutParm, ReferenceParm)
// EKeyBindingSlot                InKeyBindingSlot               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bGamepad                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetActionKey(const struct FName& ActionName, const struct FTslInputKey& NewKey, EKeyBindingSlot InKeyBindingSlot, bool bGamepad)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22826);

	UTslGameOption_SetActionKey_Params params;
	params.ActionName = ActionName;
	params.NewKey = NewKey;
	params.InKeyBindingSlot = InKeyBindingSlot;
	params.bGamepad = bGamepad;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.NotDuplicateCategoryNames
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName                   CatecoryName                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FName>           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FName> UTslGameOption::STATIC_NotDuplicateCategoryNames(const struct FName& CatecoryName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22822);

	UTslGameOption_NotDuplicateCategoryNames_Params params;
	params.CatecoryName = CatecoryName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.IsVSyncEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsVSyncEnabled()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22820);

	UTslGameOption_IsVSyncEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.IsVoiceOutputMute
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsVoiceOutputMute()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22818);

	UTslGameOption_IsVoiceOutputMute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.IsVoiceInputMute
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsVoiceInputMute()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22816);

	UTslGameOption_IsVoiceInputMute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.IsUISoundMute
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsUISoundMute()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22814);

	UTslGameOption_IsUISoundMute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.IsMouseWheelInput
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FTslInputKey            InInputedKey                   (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsMouseWheelInput(const struct FTslInputKey& InInputedKey)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22811);

	UTslGameOption_IsMouseWheelInput_Params params;
	params.InInputedKey = InInputedKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.IsModifierKey
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FTslInputKey            Key                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsModifierKey(const struct FTslInputKey& Key)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22808);

	UTslGameOption_IsModifierKey_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.IsMasterSoundMute
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsMasterSoundMute()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22806);

	UTslGameOption_IsMasterSoundMute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.IsKeyValid
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FTslInputKey            Key                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsKeyValid(const struct FTslInputKey& Key)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22803);

	UTslGameOption_IsKeyValid_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.IsKeyUsed
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FTslInputKey            Key                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsKeyUsed(const struct FTslInputKey& Key)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22800);

	UTslGameOption_IsKeyUsed_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.IsInvertMouse
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsInvertMouse()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22798);

	UTslGameOption_IsInvertMouse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.IsInvertGamePadY
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsInvertGamePadY()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22796);

	UTslGameOption_IsInvertGamePadY_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.IsInvertGamePadX
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsInvertGamePadX()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22794);

	UTslGameOption_IsInvertGamePadX_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.IsIconKillfeedEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsIconKillfeedEnabled()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22792);

	UTslGameOption_IsIconKillfeedEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.IsGamepadKey
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FTslInputKey            Key                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsGamepadKey(const struct FTslInputKey& Key)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22789);

	UTslGameOption_IsGamepadKey_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.IsFunctionalityEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGameplayFunctionalities       eAction                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsFunctionalityEnabled(EGameplayFunctionalities eAction)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22785);

	UTslGameOption_IsFunctionalityEnabled_Params params;
	params.eAction = eAction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.IsForceFeedbackEffectEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsForceFeedbackEffectEnabled()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22783);

	UTslGameOption_IsForceFeedbackEffectEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.IsEnabledPreloadingMap
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsEnabledPreloadingMap()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22781);

	UTslGameOption_IsEnabledPreloadingMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.IsEnabledMotionBlur
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsEnabledMotionBlur()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22779);

	UTslGameOption_IsEnabledMotionBlur_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.IsEffectSoundMute
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsEffectSoundMute()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22777);

	UTslGameOption_IsEffectSoundMute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.IsDoubleTapSupported
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EInputModeSettingActions       eAction                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsDoubleTapSupported(EInputModeSettingActions eAction)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22773);

	UTslGameOption_IsDoubleTapSupported_Params params;
	params.eAction = eAction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.IsDefaultFunctionalityEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGameplayFunctionalities       eAction                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsDefaultFunctionalityEnabled(EGameplayFunctionalities eAction)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22769);

	UTslGameOption_IsDefaultFunctionalityEnabled_Params params;
	params.eAction = eAction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.IsDefaultClientReplayEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGameplayClientReplay          eAction                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsDefaultClientReplayEnabled(EGameplayClientReplay eAction)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22765);

	UTslGameOption_IsDefaultClientReplayEnabled_Params params;
	params.eAction = eAction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.IsClientReplayEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGameplayClientReplay          eAction                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsClientReplayEnabled(EGameplayClientReplay eAction)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22761);

	UTslGameOption_IsClientReplayEnabled_Params params;
	params.eAction = eAction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.IsBGMSoundMute
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsBGMSoundMute()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22759);

	UTslGameOption_IsBGMSoundMute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetWorldMapZoomSpeedLevel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UTslGameOption::STATIC_GetWorldMapZoomSpeedLevel()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22757);

	UTslGameOption_GetWorldMapZoomSpeedLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetVoiceOutputVolume
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UTslGameOption::STATIC_GetVoiceOutputVolume()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22755);

	UTslGameOption_GetVoiceOutputVolume_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetVoiceInputVolume
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UTslGameOption::STATIC_GetVoiceInputVolume()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22753);

	UTslGameOption_GetVoiceInputVolume_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetUseTeamVoice
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_GetUseTeamVoice()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22751);

	UTslGameOption_GetUseTeamVoice_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetUsePushToTalk
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_GetUsePushToTalk()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22749);

	UTslGameOption_GetUsePushToTalk_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetUseGlobalVoice
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_GetUseGlobalVoice()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22747);

	UTslGameOption_GetUseGlobalVoice_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetUseCharacterCapture
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_GetUseCharacterCapture()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22745);

	UTslGameOption_GetUseCharacterCapture_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetUISoundVolume
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_GetUISoundVolume()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22743);

	UTslGameOption_GetUISoundVolume_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetTslInputMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EInputModeSettingActions       eAction                        (Parm, ZeroConstructor, IsPlainOldData)
// ETslInputModes                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ETslInputModes UTslGameOption::STATIC_GetTslInputMode(EInputModeSettingActions eAction)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22738);

	UTslGameOption_GetTslInputMode_Params params;
	params.eAction = eAction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetTpsWeaponIconShowType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EUiShowType                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EUiShowType UTslGameOption::STATIC_GetTpsWeaponIconShowType()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22735);

	UTslGameOption_GetTpsWeaponIconShowType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetSupportedScreenResolutions
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FScreenResolution> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FScreenResolution> UTslGameOption::STATIC_GetSupportedScreenResolutions()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22732);

	UTslGameOption_GetSupportedScreenResolutions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetSupportedQualityLevels
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FSurportQualityLevel> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FSurportQualityLevel> UTslGameOption::STATIC_GetSupportedQualityLevels()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22729);

	UTslGameOption_GetSupportedQualityLevels_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetSupportedKillcam
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_GetSupportedKillcam()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22727);

	UTslGameOption_GetSupportedKillcam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetSupportedFpsCameraFovRangeMin
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_GetSupportedFpsCameraFovRangeMin()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22725);

	UTslGameOption_GetSupportedFpsCameraFovRangeMin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetSupportedFpsCameraFovRangeMax
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_GetSupportedFpsCameraFovRangeMax()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22723);

	UTslGameOption_GetSupportedFpsCameraFovRangeMax_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetSupportedClientReplay
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_GetSupportedClientReplay()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22721);

	UTslGameOption_GetSupportedClientReplay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetSelectMiniMapTypeIndex
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UTslGameOption::STATIC_GetSelectMiniMapTypeIndex()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22719);

	UTslGameOption_GetSelectMiniMapTypeIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetScreenScale
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_GetScreenScale()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22717);

	UTslGameOption_GetScreenScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetScreenResolution
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FScreenResolution       ReturnValue                    (Parm, OutParm, ReturnParm)

struct FScreenResolution UTslGameOption::STATIC_GetScreenResolution()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22715);

	UTslGameOption_GetScreenResolution_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetReplayOptionEditable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_GetReplayOptionEditable()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22713);

	UTslGameOption_GetReplayOptionEditable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetQualityLevel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EQualityType                   Quality                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UTslGameOption::STATIC_GetQualityLevel(EQualityType Quality)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22709);

	UTslGameOption_GetQualityLevel_Params params;
	params.Quality = Quality;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetOverallScalabilityLevel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UTslGameOption::STATIC_GetOverallScalabilityLevel()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22707);

	UTslGameOption_GetOverallScalabilityLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetNativeName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 InCultureName                  (Parm, ZeroConstructor)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UTslGameOption::STATIC_GetNativeName(const struct FString& InCultureName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22704);

	UTslGameOption_GetNativeName_Params params;
	params.InCultureName = InCultureName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetNativeLanguage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 InCultureName                  (Parm, ZeroConstructor)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UTslGameOption::STATIC_GetNativeLanguage(const struct FString& InCultureName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22701);

	UTslGameOption_GetNativeLanguage_Params params;
	params.InCultureName = InCultureName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetMouseSensitivity
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName                   InMouseSensitiveName           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_GetMouseSensitivity(const struct FName& InMouseSensitiveName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22698);

	UTslGameOption_GetMouseSensitivity_Params params;
	params.InMouseSensitiveName = InMouseSensitiveName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetMiniMapTypes
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FUiType>         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FUiType> UTslGameOption::STATIC_GetMiniMapTypes()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22695);

	UTslGameOption_GetMiniMapTypes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetMasterSoundVolume
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_GetMasterSoundVolume()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22693);

	UTslGameOption_GetMasterSoundVolume_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetKeyName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FTslInputKey            Key                            (Parm)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UTslGameOption::STATIC_GetKeyName(const struct FTslInputKey& Key)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22690);

	UTslGameOption_GetKeyName_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetKeyInputModeNames
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FKeyInputModeName> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FKeyInputModeName> UTslGameOption::STATIC_GetKeyInputModeNames()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22687);

	UTslGameOption_GetKeyInputModeNames_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetGamma
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_GetGamma()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22685);

	UTslGameOption_GetGamma_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetGamePadSensitivity
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName                   InGamePadSensitiveName         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_GetGamePadSensitivity(const struct FName& InGamePadSensitiveName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22682);

	UTslGameOption_GetGamePadSensitivity_Params params;
	params.InGamePadSensitiveName = InGamePadSensitiveName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetGamePadDeadZone
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_GetGamePadDeadZone()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22680);

	UTslGameOption_GetGamePadDeadZone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetFullscreenMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EWindowMode>       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EWindowMode> UTslGameOption::STATIC_GetFullscreenMode()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22678);

	UTslGameOption_GetFullscreenMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetFpsCameraFov
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_GetFpsCameraFov()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22676);

	UTslGameOption_GetFpsCameraFov_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetFppWeaponIconShowType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EUiShowType                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EUiShowType UTslGameOption::STATIC_GetFppWeaponIconShowType()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22673);

	UTslGameOption_GetFppWeaponIconShowType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetFppEquipableItemIconShowType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EUiShowType                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EUiShowType UTslGameOption::STATIC_GetFppEquipableItemIconShowType()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22670);

	UTslGameOption_GetFppEquipableItemIconShowType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetEffectSoundVolume
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_GetEffectSoundVolume()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22668);

	UTslGameOption_GetEffectSoundVolume_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetDefaultInputModeSetting
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EInputModeSettingActions       eAction                        (Parm, ZeroConstructor, IsPlainOldData)
// ETslInputModes                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ETslInputModes UTslGameOption::STATIC_GetDefaultInputModeSetting(EInputModeSettingActions eAction)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22663);

	UTslGameOption_GetDefaultInputModeSetting_Params params;
	params.eAction = eAction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetDefaultCultureName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UTslGameOption::STATIC_GetDefaultCultureName()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22661);

	UTslGameOption_GetDefaultCultureName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetCurrentProvider
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UTslGameOption::STATIC_GetCurrentProvider()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22659);

	UTslGameOption_GetCurrentProvider_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetCurrentCultureName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UTslGameOption::STATIC_GetCurrentCultureName()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22657);

	UTslGameOption_GetCurrentCultureName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetCurrentCrosshairColorStr
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UTslGameOption::STATIC_GetCurrentCrosshairColorStr()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22655);

	UTslGameOption_GetCurrentCrosshairColorStr_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetCurrentColorBlindKey
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EColorBlindType                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EColorBlindType UTslGameOption::STATIC_GetCurrentColorBlindKey()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22652);

	UTslGameOption_GetCurrentColorBlindKey_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetCrosshairColors
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FPresetColor>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FPresetColor> UTslGameOption::STATIC_GetCrosshairColors()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22649);

	UTslGameOption_GetCrosshairColors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetConvertedMouseSensitivity
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName                   InMouseSensitiveName           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_GetConvertedMouseSensitivity(const struct FName& InMouseSensitiveName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22646);

	UTslGameOption_GetConvertedMouseSensitivity_Params params;
	params.InMouseSensitiveName = InMouseSensitiveName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetConvertedGamePadSensitivity
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName                   InGamePadSensitiveName         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_GetConvertedGamePadSensitivity(const struct FName& InGamePadSensitiveName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22643);

	UTslGameOption_GetConvertedGamePadSensitivity_Params params;
	params.InGamePadSensitiveName = InGamePadSensitiveName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetColorBlindTypes
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FColorBlindType> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FColorBlindType> UTslGameOption::STATIC_GetColorBlindTypes()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22640);

	UTslGameOption_GetColorBlindTypes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetBGMSoundVolume
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_GetBGMSoundVolume()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22638);

	UTslGameOption_GetBGMSoundVolume_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetAxisKeys
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName                   AxisName                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Scale                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDefault                       (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FTslInputKey>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FTslInputKey> UTslGameOption::STATIC_GetAxisKeys(const struct FName& AxisName, float Scale, bool bDefault)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22632);

	UTslGameOption_GetAxisKeys_Params params;
	params.AxisName = AxisName;
	params.Scale = Scale;
	params.bDefault = bDefault;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetAxisKey
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName                   AxisName                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Scale                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bGamepad                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDefault                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bWantAnyKey                    (Parm, ZeroConstructor, IsPlainOldData)
// EKeyBindingSlot                eKeySlot                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FTslInputKey            ReturnValue                    (Parm, OutParm, ReturnParm)

struct FTslInputKey UTslGameOption::STATIC_GetAxisKey(const struct FName& AxisName, float Scale, bool bGamepad, bool bDefault, bool bWantAnyKey, EKeyBindingSlot eKeySlot)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22623);

	UTslGameOption_GetAxisKey_Params params;
	params.AxisName = AxisName;
	params.Scale = Scale;
	params.bGamepad = bGamepad;
	params.bDefault = bDefault;
	params.bWantAnyKey = bWantAnyKey;
	params.eKeySlot = eKeySlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetAvailableProviderNames
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FString>         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FString> UTslGameOption::STATIC_GetAvailableProviderNames()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22620);

	UTslGameOption_GetAvailableProviderNames_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetAvailableProviderDisplayNames
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FText>           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FText> UTslGameOption::STATIC_GetAvailableProviderDisplayNames()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22617);

	UTslGameOption_GetAvailableProviderDisplayNames_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetAutoQualityLevels
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            WorkScale                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          CPUMultiplier                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          GPUMultiplier                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FQualityLevelInfo> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FQualityLevelInfo> UTslGameOption::STATIC_GetAutoQualityLevels(int WorkScale, float CPUMultiplier, float GPUMultiplier)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22611);

	UTslGameOption_GetAutoQualityLevels_Params params;
	params.WorkScale = WorkScale;
	params.CPUMultiplier = CPUMultiplier;
	params.GPUMultiplier = GPUMultiplier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetActionKeys
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName                   ActionName                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDefault                       (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FTslInputKey>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FTslInputKey> UTslGameOption::STATIC_GetActionKeys(const struct FName& ActionName, bool bDefault)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22606);

	UTslGameOption_GetActionKeys_Params params;
	params.ActionName = ActionName;
	params.bDefault = bDefault;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.GetActionKey
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName                   ActionName                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bGamepad                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDefault                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bWantAnyKey                    (Parm, ZeroConstructor, IsPlainOldData)
// EKeyBindingSlot                eKeySlot                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FTslInputKey            ReturnValue                    (Parm, OutParm, ReturnParm)

struct FTslInputKey UTslGameOption::STATIC_GetActionKey(const struct FName& ActionName, bool bGamepad, bool bDefault, bool bWantAnyKey, EKeyBindingSlot eKeySlot)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22598);

	UTslGameOption_GetActionKey_Params params;
	params.ActionName = ActionName;
	params.bGamepad = bGamepad;
	params.bDefault = bDefault;
	params.bWantAnyKey = bWantAnyKey;
	params.eKeySlot = eKeySlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.DefaultGamePadInnerDeadZone
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_DefaultGamePadInnerDeadZone()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22596);

	UTslGameOption_DefaultGamePadInnerDeadZone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.CustomizableMouseSensitiveNames
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FCustomizableMouseSensitiveName> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FCustomizableMouseSensitiveName> UTslGameOption::STATIC_CustomizableMouseSensitiveNames()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22593);

	UTslGameOption_CustomizableMouseSensitiveNames_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.CustomizableGamePadSensitiveNames
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FCustomizableGamePadSensitiveName> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FCustomizableGamePadSensitiveName> UTslGameOption::STATIC_CustomizableGamePadSensitiveNames()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22590);

	UTslGameOption_CustomizableGamePadSensitiveNames_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.CustomizableCategoryData
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FTslGame_FCustomizableCategoryData> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FTslGame_FCustomizableCategoryData> UTslGameOption::STATIC_CustomizableCategoryData()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22587);

	UTslGameOption_CustomizableCategoryData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.CustomizableAxisName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FTslGame_FCustomizableAxisName> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FTslGame_FCustomizableAxisName> UTslGameOption::STATIC_CustomizableAxisName()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22584);

	UTslGameOption_CustomizableAxisName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.CustomizableActionNames
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FCustomizableActionName> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FCustomizableActionName> UTslGameOption::STATIC_CustomizableActionNames()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22581);

	UTslGameOption_CustomizableActionNames_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.CultureNames
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FString>         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FString> UTslGameOption::STATIC_CultureNames()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22578);

	UTslGameOption_CultureNames_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.CastTslInputModeFromName
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName                   InputModeName                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// ETslInputModes                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ETslInputModes UTslGameOption::STATIC_CastTslInputModeFromName(const struct FName& InputModeName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22574);

	UTslGameOption_CastTslInputModeFromName_Params params;
	params.InputModeName = InputModeName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameOption.ApplyMouseSensitivity
// (Final, Native, Static, Public, BlueprintCallable)

void UTslGameOption::STATIC_ApplyMouseSensitivity()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22573);

	UTslGameOption_ApplyMouseSensitivity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.ApplyGameUserSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bCheckForCommandLineOverrides  (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_ApplyGameUserSettings(bool bCheckForCommandLineOverrides)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22571);

	UTslGameOption_ApplyGameUserSettings_Params params;
	params.bCheckForCommandLineOverrides = bCheckForCommandLineOverrides;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.ApplyGamePadSensitivity
// (Final, Native, Static, Public, BlueprintCallable)

void UTslGameOption::STATIC_ApplyGamePadSensitivity()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22570);

	UTslGameOption_ApplyGamePadSensitivity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.ApplyGamePadDeadZone
// (Final, Native, Static, Public, BlueprintCallable)

void UTslGameOption::STATIC_ApplyGamePadDeadZone()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22569);

	UTslGameOption_ApplyGamePadDeadZone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameOption.ApplyAutoQualitySetting
// (Final, Native, Static, Public, BlueprintCallable)

void UTslGameOption::STATIC_ApplyAutoQualitySetting()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(22568);

	UTslGameOption_ApplyAutoQualitySetting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameState.UpdateWorldTimeSecondsDelta
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)

void ATslGameState::UpdateWorldTimeSecondsDelta(float DeltaSeconds)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23025);

	ATslGameState_UpdateWorldTimeSecondsDelta_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameState.ShowPlayerStateList
// (Final, Exec, Native, Public, Const)

void ATslGameState::ShowPlayerStateList()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23024);

	ATslGameState_ShowPlayerStateList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameState.OnStartGasRelease
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           InbIsGasRelease                (Parm, ZeroConstructor, IsPlainOldData)

void ATslGameState::OnStartGasRelease(bool InbIsGasRelease)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23022);

	ATslGameState_OnStartGasRelease_Params params;
	params.InbIsGasRelease = InbIsGasRelease;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameState.OnRep_NumAlivePlayers
// (Final, Native, Public)

void ATslGameState::OnRep_NumAlivePlayers()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23021);

	ATslGameState_OnRep_NumAlivePlayers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameState.OnRep_MatchShortGuid
// (Final, Native, Public)

void ATslGameState::OnRep_MatchShortGuid()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23020);

	ATslGameState_OnRep_MatchShortGuid_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameState.OnRep_MatchId
// (Final, Native, Public)

void ATslGameState::OnRep_MatchId()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23019);

	ATslGameState_OnRep_MatchId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameState.OnRep_GasRelease
// (Final, Native, Public)
// Parameters:
// bool                           bLastIsGasRelease              (Parm, ZeroConstructor, IsPlainOldData)

void ATslGameState::OnRep_GasRelease(bool bLastIsGasRelease)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23017);

	ATslGameState_OnRep_GasRelease_Params params;
	params.bLastIsGasRelease = bLastIsGasRelease;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGameState.IsMatchInProgressBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslGameState::IsMatchInProgressBP()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23015);

	ATslGameState_IsMatchInProgressBP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGameState.GetLevelAttribute
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ALevelAttribute*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ALevelAttribute* ATslGameState::GetLevelAttribute()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23013);

	ATslGameState_GetLevelAttribute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslGlassWindowComponent.OnRep_ReplicatedOnClient
// (Final, Native, Protected)
// Parameters:
// bool                           bLastReplicatedOnClient        (Parm, ZeroConstructor, IsPlainOldData)

void UTslGlassWindowComponent::OnRep_ReplicatedOnClient(bool bLastReplicatedOnClient)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23078);

	UTslGlassWindowComponent_OnRep_ReplicatedOnClient_Params params;
	params.bLastReplicatedOnClient = bLastReplicatedOnClient;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGlassWindowComponent.OnRep_Destroyed
// (Final, Native, Protected)
// Parameters:
// bool                           bLastDestroyed                 (Parm, ZeroConstructor, IsPlainOldData)

void UTslGlassWindowComponent::OnRep_Destroyed(bool bLastDestroyed)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23076);

	UTslGlassWindowComponent_OnRep_Destroyed_Params params;
	params.bLastDestroyed = bLastDestroyed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGlassWindowComponent.ClientNotifyHit
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// bool                           bBlockingHit                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize     Location                       (ConstParm, Parm, ReferenceParm)
// struct FVector_NetQuantizeNormal ImpactNormal                   (ConstParm, Parm, ReferenceParm)

void UTslGlassWindowComponent::ClientNotifyHit(bool bBlockingHit, const struct FVector_NetQuantize& Location, const struct FVector_NetQuantizeNormal& ImpactNormal)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23072);

	UTslGlassWindowComponent_ClientNotifyHit_Params params;
	params.bBlockingHit = bBlockingHit;
	params.Location = Location;
	params.ImpactNormal = ImpactNormal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslGunAnimInstance.HandleFiremodeMontage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimMontage*            FireModeMontage                (Parm, ZeroConstructor, IsPlainOldData)

void UTslGunAnimInstance::HandleFiremodeMontage(class UAnimMontage* FireModeMontage)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23087);

	UTslGunAnimInstance_HandleFiremodeMontage_Params params;
	params.FireModeMontage = FireModeMontage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslHealthGaugeData.GetGaugeColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          HealthPercent                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FLinearColor UTslHealthGaugeData::GetGaugeColor(float HealthPercent)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23104);

	UTslHealthGaugeData_GetGaugeColor_Params params;
	params.HealthPercent = HealthPercent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslHornComponent.TickHorn
// (Final, Native, Protected)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)

void UTslHornComponent::TickHorn(float DeltaSeconds)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23125);

	UTslHornComponent_TickHorn_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslHornComponent.ServerSetHorn
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FHornPlayInfo           InHornPlayInfo                 (Parm, IsPlainOldData)

void UTslHornComponent::ServerSetHorn(const struct FHornPlayInfo& InHornPlayInfo)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23123);

	UTslHornComponent_ServerSetHorn_Params params;
	params.InHornPlayInfo = InHornPlayInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslHornComponent.PlayInstantHorn
// (Final, Native, Protected)

void UTslHornComponent::PlayInstantHorn()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23122);

	UTslHornComponent_PlayInstantHorn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslHornComponent.PlayHorn
// (Final, Native, Protected)
// Parameters:
// bool                           bIsLocalPlay                   (Parm, ZeroConstructor, IsPlainOldData)
// EHornSoundType                 InHornSoundType                (Parm, ZeroConstructor, IsPlainOldData)

void UTslHornComponent::PlayHorn(bool bIsLocalPlay, EHornSoundType InHornSoundType)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23118);

	UTslHornComponent_PlayHorn_Params params;
	params.bIsLocalPlay = bIsLocalPlay;
	params.InHornSoundType = InHornSoundType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslHornComponent.OnRep_SetHornPlayInfo
// (Final, Native, Protected)

void UTslHornComponent::OnRep_SetHornPlayInfo()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23117);

	UTslHornComponent_OnRep_SetHornPlayInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslHornComponent.OnPostDriverLeave
// (Final, Native, Public)

void UTslHornComponent::OnPostDriverLeave()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23116);

	UTslHornComponent_OnPostDriverLeave_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslHornComponent.OnHornKeyUp
// (Final, Native, Public)

void UTslHornComponent::OnHornKeyUp()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23115);

	UTslHornComponent_OnHornKeyUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslHornComponent.OnHornKeyDown
// (Final, Native, Public)

void UTslHornComponent::OnHornKeyDown()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23114);

	UTslHornComponent_OnHornKeyDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslHornComponent.OnHornEnd
// (Final, Native, Protected)

void UTslHornComponent::OnHornEnd()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23113);

	UTslHornComponent_OnHornEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslHornComponent.MulticastSetInstantHorn
// (Net, NetReliable, Native, Event, NetMulticast, Protected, NetValidate)
// Parameters:
// struct FHornPlayInfo           InHornPlayInfo                 (Parm, IsPlainOldData)

void UTslHornComponent::MulticastSetInstantHorn(const struct FHornPlayInfo& InHornPlayInfo)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23111);

	UTslHornComponent_MulticastSetInstantHorn_Params params;
	params.InHornPlayInfo = InHornPlayInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslInstancedGlassWindowComponent.OnRep_ReplicatedOnClient
// (Final, Native, Protected)
// Parameters:
// bool                           bLastReplicatedOnClient        (Parm, ZeroConstructor, IsPlainOldData)

void UTslInstancedGlassWindowComponent::OnRep_ReplicatedOnClient(bool bLastReplicatedOnClient)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23223);

	UTslInstancedGlassWindowComponent_OnRep_ReplicatedOnClient_Params params;
	params.bLastReplicatedOnClient = bLastReplicatedOnClient;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslInstancedGlassWindowComponent.OnRep_PendingDestroy
// (Final, Native, Protected)

void UTslInstancedGlassWindowComponent::OnRep_PendingDestroy()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23222);

	UTslInstancedGlassWindowComponent_OnRep_PendingDestroy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslInstancedGlassWindowComponent.OnRep_Destroyed
// (Final, Native, Protected)

void UTslInstancedGlassWindowComponent::OnRep_Destroyed()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23221);

	UTslInstancedGlassWindowComponent_OnRep_Destroyed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslInstancedGlassWindowComponent.ClientNotifyHit
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// bool                           bBlockingHit                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize     Location                       (ConstParm, Parm, ReferenceParm)
// struct FVector_NetQuantizeNormal ImpactNormal                   (ConstParm, Parm, ReferenceParm)
// int                            InstanceIndex                  (Parm, ZeroConstructor, IsPlainOldData)

void UTslInstancedGlassWindowComponent::ClientNotifyHit(bool bBlockingHit, const struct FVector_NetQuantize& Location, const struct FVector_NetQuantizeNormal& ImpactNormal, int InstanceIndex)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23216);

	UTslInstancedGlassWindowComponent_ClientNotifyHit_Params params;
	params.bBlockingHit = bBlockingHit;
	params.Location = Location;
	params.ImpactNormal = ImpactNormal;
	params.InstanceIndex = InstanceIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslInstancedReactionComponent.OnRep_PendingDestroy
// (Final, Native, Protected)

void UTslInstancedReactionComponent::OnRep_PendingDestroy()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23251);

	UTslInstancedReactionComponent_OnRep_PendingDestroy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslInstancedReactionComponent.Client_ReactByVehicle
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// int                            InstanceIndex                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Impact                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 ImpulseDir                     (ConstParm, Parm, IsPlainOldData)
// struct FVector                 Velocity                       (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void UTslInstancedReactionComponent::Client_ReactByVehicle(int InstanceIndex, const struct FVector& Impact, const struct FVector& ImpulseDir, const struct FVector& Velocity)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23246);

	UTslInstancedReactionComponent_Client_ReactByVehicle_Params params;
	params.InstanceIndex = InstanceIndex;
	params.Impact = Impact;
	params.ImpulseDir = ImpulseDir;
	params.Velocity = Velocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslInstancedReactionComponent.Client_ReactByRadialDamage
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// int                            InstanceIndex                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Origin                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 Impact                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 ImpulseDir                     (ConstParm, Parm, IsPlainOldData)
// float                          OuterRadius                    (Parm, ZeroConstructor, IsPlainOldData)

void UTslInstancedReactionComponent::Client_ReactByRadialDamage(int InstanceIndex, float DamageAmount, const struct FVector& Origin, const struct FVector& Impact, const struct FVector& ImpulseDir, float OuterRadius)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23239);

	UTslInstancedReactionComponent_Client_ReactByRadialDamage_Params params;
	params.InstanceIndex = InstanceIndex;
	params.DamageAmount = DamageAmount;
	params.Origin = Origin;
	params.Impact = Impact;
	params.ImpulseDir = ImpulseDir;
	params.OuterRadius = OuterRadius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslInstancedReactionComponent.Client_ReactByPointDamage
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// int                            InstanceIndex                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Impact                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 ImpulseDir                     (ConstParm, Parm, IsPlainOldData)

void UTslInstancedReactionComponent::Client_ReactByPointDamage(int InstanceIndex, float DamageAmount, const struct FVector& Impact, const struct FVector& ImpulseDir)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23234);

	UTslInstancedReactionComponent_Client_ReactByPointDamage_Params params;
	params.InstanceIndex = InstanceIndex;
	params.DamageAmount = DamageAmount;
	params.Impact = Impact;
	params.ImpulseDir = ImpulseDir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslLevelScriptActor.RequestReplayALevelWeatherEvent
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// struct FString                 EventID                        (Parm, ZeroConstructor)

void ATslLevelScriptActor::RequestReplayALevelWeatherEvent(const struct FString& EventID)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23279);

	ATslLevelScriptActor_RequestReplayALevelWeatherEvent_Params params;
	params.EventID = EventID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslLevelScriptActor.RecordWeatherAsCustomEvent
// (Final, Native, Private)

void ATslLevelScriptActor::RecordWeatherAsCustomEvent()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23278);

	ATslLevelScriptActor_RecordWeatherAsCustomEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslLevelScriptActor.OnRep_SelectedWeatherIndex
// (Final, Native, Private)

void ATslLevelScriptActor::OnRep_SelectedWeatherIndex()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23277);

	ATslLevelScriptActor_OnRep_SelectedWeatherIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslLevelScriptActor.EnumerateReplayLevelEvents
// (Final, Native, Private, BlueprintCallable)

void ATslLevelScriptActor::EnumerateReplayLevelEvents()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23276);

	ATslLevelScriptActor_EnumerateReplayLevelEvents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslLobbyLevelScriptActor.LatentLoadCustomizationLevel
// (Final, Native, Public)

void ATslLobbyLevelScriptActor::LatentLoadCustomizationLevel()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23285);

	ATslLobbyLevelScriptActor_LatentLoadCustomizationLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslModularBuilding.PassSeparatedFloors
// (Final, Native, Protected, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class UChildActorComponent*> Floors                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void ATslModularBuilding::PassSeparatedFloors(TArray<class UChildActorComponent*> Floors)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23324);

	ATslModularBuilding_PassSeparatedFloors_Params params;
	params.Floors = Floors;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslModularBuilding.GetMeshOnSapartedFloor
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int                            SepartedFloor                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 Keyword                        (Parm, ZeroConstructor)
// TArray<class UStaticMeshComponent*> ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UStaticMeshComponent*> ATslModularBuilding::GetMeshOnSapartedFloor(int SepartedFloor, const struct FString& Keyword)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23319);

	ATslModularBuilding_GetMeshOnSapartedFloor_Params params;
	params.SepartedFloor = SepartedFloor;
	params.Keyword = Keyword;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslModularBuilding.GetBuildingModuleFromTable
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct FString                 Keyword                        (Parm, ZeroConstructor)
// TArray<class UStaticMeshComponent*> ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UStaticMeshComponent*> ATslModularBuilding::GetBuildingModuleFromTable(const struct FString& Keyword)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23315);

	ATslModularBuilding_GetBuildingModuleFromTable_Params params;
	params.Keyword = Keyword;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslModularBuilding.GetAttachmentsFromTable
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct FString                 Keyword                        (Parm, ZeroConstructor)
// TArray<class UStaticMeshComponent*> ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UStaticMeshComponent*> ATslModularBuilding::GetAttachmentsFromTable(const struct FString& Keyword)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23311);

	ATslModularBuilding_GetAttachmentsFromTable_Params params;
	params.Keyword = Keyword;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslModularBuilding.ClearBuildingModuleTable
// (Final, Native, Protected, BlueprintCallable)

void ATslModularBuilding::ClearBuildingModuleTable()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23310);

	ATslModularBuilding_ClearBuildingModuleTable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslModularBuilding.ClearAttachmentTable
// (Final, Native, Protected, BlueprintCallable)

void ATslModularBuilding::ClearAttachmentTable()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23309);

	ATslModularBuilding_ClearAttachmentTable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslModularBuilding.AddBuildingModuleToTable
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct FString                 Keyword                        (Parm, ZeroConstructor)
// class UStaticMeshComponent*    Building                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ATslModularBuilding::AddBuildingModuleToTable(const struct FString& Keyword, class UStaticMeshComponent* Building)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23306);

	ATslModularBuilding_AddBuildingModuleToTable_Params params;
	params.Keyword = Keyword;
	params.Building = Building;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslModularBuilding.AddAttachmentToTable
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct FString                 Keyword                        (Parm, ZeroConstructor)
// class UStaticMeshComponent*    Attachment                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ATslModularBuilding::AddAttachmentToTable(const struct FString& Keyword, class UStaticMeshComponent* Attachment)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23303);

	ATslModularBuilding_AddAttachmentToTable_Params params;
	params.Keyword = Keyword;
	params.Attachment = Attachment;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslParticle.SetParticleParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 Name                           (Parm, ZeroConstructor)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bEnableRTPC                    (Parm, ZeroConstructor, IsPlainOldData)

void ATslParticle::SetParticleParameter(const struct FString& Name, float Value, bool bEnableRTPC)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23350);

	ATslParticle_SetParticleParameter_Params params;
	params.Name = Name;
	params.Value = Value;
	params.bEnableRTPC = bEnableRTPC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslParticle.OnParticleFinish
// (Final, Native, Protected)
// Parameters:
// class UParticleSystemComponent* PSystem                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ATslParticle::OnParticleFinish(class UParticleSystemComponent* PSystem)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23348);

	ATslParticle_OnParticleFinish_Params params;
	params.PSystem = PSystem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslParticle.OnParticleCollide
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FName                   EventName                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          EmitterTime                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            ParticleTime                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Location                       (Parm, IsPlainOldData)
// struct FVector                 Velocity                       (Parm, IsPlainOldData)
// struct FVector                 Direction                      (Parm, IsPlainOldData)
// struct FVector                 Normal                         (Parm, IsPlainOldData)
// struct FName                   BoneName                       (Parm, ZeroConstructor, IsPlainOldData)
// class UPhysicalMaterial*       PhysMat                        (Parm, ZeroConstructor, IsPlainOldData)

void ATslParticle::OnParticleCollide(const struct FName& EventName, float EmitterTime, int ParticleTime, const struct FVector& Location, const struct FVector& Velocity, const struct FVector& Direction, const struct FVector& Normal, const struct FName& BoneName, class UPhysicalMaterial* PhysMat)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23338);

	ATslParticle_OnParticleCollide_Params params;
	params.EventName = EventName;
	params.EmitterTime = EmitterTime;
	params.ParticleTime = ParticleTime;
	params.Location = Location;
	params.Velocity = Velocity;
	params.Direction = Direction;
	params.Normal = Normal;
	params.BoneName = BoneName;
	params.PhysMat = PhysMat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslParticle.OnParameterUpdated
// (Event, Protected, BlueprintEvent)

void ATslParticle::OnParameterUpdated()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23337);

	ATslParticle_OnParameterUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslParticle.GetParticleParamter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 Name                           (Parm, ZeroConstructor)
// float                          DefaultValue                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslParticle::GetParticleParamter(const struct FString& Name, float DefaultValue)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23333);

	ATslParticle_GetParticleParamter_Params params;
	params.Name = Name;
	params.DefaultValue = DefaultValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslParticle.GetEmitterGlobalSpawnRateScale
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslParticle::STATIC_GetEmitterGlobalSpawnRateScale()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23331);

	ATslParticle_GetEmitterGlobalSpawnRateScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslParticle.ForceSpawn
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int                            emitterIndex                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 InLocation                     (ConstParm, Parm, IsPlainOldData)

void ATslParticle::ForceSpawn(int emitterIndex, const struct FVector& InLocation)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23328);

	ATslParticle_ForceSpawn_Params params;
	params.emitterIndex = emitterIndex;
	params.InLocation = InLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslParticle.AttachToParent
// (Final, Native, Protected)

void ATslParticle::AttachToParent()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23327);

	ATslParticle_AttachToParent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPawnInputBindingComponent.NotifyOwnerUnPossessed
// (Final, Native, Public)
// Parameters:
// class ATslPlayerController*    InController                   (Parm, ZeroConstructor, IsPlainOldData)

void UTslPawnInputBindingComponent::NotifyOwnerUnPossessed(class ATslPlayerController* InController)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23383);

	UTslPawnInputBindingComponent_NotifyOwnerUnPossessed_Params params;
	params.InController = InController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPawnInputBindingComponent.NotifyOwnerPossessed
// (Final, Native, Public)
// Parameters:
// class ATslPlayerController*    InController                   (Parm, ZeroConstructor, IsPlainOldData)

void UTslPawnInputBindingComponent::NotifyOwnerPossessed(class ATslPlayerController* InController)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23381);

	UTslPawnInputBindingComponent_NotifyOwnerPossessed_Params params;
	params.InController = InController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPawnInputBindingComponent.MoveVehicleNextSeat_Gamepad
// (Final, Native, Private)

void UTslPawnInputBindingComponent::MoveVehicleNextSeat_Gamepad()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23380);

	UTslPawnInputBindingComponent_MoveVehicleNextSeat_Gamepad_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPawnInputBindingComponent.MoveVehicleDriverSeat_Gamepad
// (Final, Native, Private)

void UTslPawnInputBindingComponent::MoveVehicleDriverSeat_Gamepad()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23379);

	UTslPawnInputBindingComponent_MoveVehicleDriverSeat_Gamepad_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerState.OnRep_Ranking
// (Final, Native, Protected)
// Parameters:
// int                            OldRanking                     (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerState::OnRep_Ranking(int OldRanking)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23592);

	ATslPlayerState_OnRep_Ranking_Params params;
	params.OldRanking = OldRanking;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerState.OnRep_PlayerStatistics
// (Final, Native, Protected)
// Parameters:
// struct FTslPlayerStatistics    OldPlayerStatistics            (Parm)

void ATslPlayerState::OnRep_PlayerStatistics(const struct FTslPlayerStatistics& OldPlayerStatistics)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23590);

	ATslPlayerState_OnRep_PlayerStatistics_Params params;
	params.OldPlayerStatistics = OldPlayerStatistics;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerState.OnRep_LastHitTime
// (Final, Native, Protected)

void ATslPlayerState::OnRep_LastHitTime()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23589);

	ATslPlayerState_OnRep_LastHitTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerState.IsZombie
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslPlayerState::IsZombie()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23587);

	ATslPlayerState_IsZombie_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerState.IsQuitter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslPlayerState::IsQuitter()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23585);

	ATslPlayerState_IsQuitter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerState.IsObserver
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslPlayerState::IsObserver()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23583);

	ATslPlayerState_IsObserver_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerState.InformAboutKill
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// EDamageReason                  DamageReason                   (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerState::InformAboutKill(EDamageReason DamageReason)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23580);

	ATslPlayerState_InformAboutKill_Params params;
	params.DamageReason = DamageReason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerState.GetTotalScore
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslPlayerState::GetTotalScore()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23578);

	ATslPlayerState_GetTotalScore_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerState.GetTeamNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ATslPlayerState::GetTeamNum()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23576);

	ATslPlayerState_GetTeamNum_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerState.GetShortPlayerName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ATslPlayerState::GetShortPlayerName()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23574);

	ATslPlayerState_GetShortPlayerName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerState.GetScoreByRanking
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslPlayerState::GetScoreByRanking()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23572);

	ATslPlayerState_GetScoreByRanking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerState.GetScoreByKill
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslPlayerState::GetScoreByKill()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23570);

	ATslPlayerState_GetScoreByKill_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerState.GetScoreByDamage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslPlayerState::GetScoreByDamage()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23568);

	ATslPlayerState_GetScoreByDamage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerState.GetPlayerScores
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTslPlayerScores        ReturnValue                    (Parm, OutParm, ReturnParm)

struct FTslPlayerScores ATslPlayerState::GetPlayerScores()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23566);

	ATslPlayerState_GetPlayerScores_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerState.GetPing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslPlayerState::GetPing()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23564);

	ATslPlayerState_GetPing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerState.GetOwningTslPlayerController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslPlayerController*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslPlayerController* ATslPlayerState::GetOwningTslPlayerController()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23562);

	ATslPlayerState_GetOwningTslPlayerController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerState.GetObserverAuthorityType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EObserverAuthorityType         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EObserverAuthorityType ATslPlayerState::GetObserverAuthorityType()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23559);

	ATslPlayerState_GetObserverAuthorityType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerState.GetKills
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ATslPlayerState::GetKills()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23557);

	ATslPlayerState_GetKills_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPlayerState.ClientUpdateRankingOnlineEvent
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int                            InRanking                      (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerState::ClientUpdateRankingOnlineEvent(int InRanking)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23555);

	ATslPlayerState_ClientUpdateRankingOnlineEvent_Params params;
	params.InRanking = InRanking;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPlayerState.BroadcastDeath
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ATslPlayerState*         KillerPlayerState              (Parm, ZeroConstructor, IsPlainOldData)
// class ATslPlayerState*         GroggyPlayerInstigator         (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType*             KillerDamageType               (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// EDamageReason                  DamageReason                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   DamageCauserName               (ConstParm, Parm, ReferenceParm)
// class UClass*                  DamageCauserClass              (Parm, ZeroConstructor, IsPlainOldData)
// int                            AlivePlayerNum                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            AliveTeamNum                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           InbIsStealKilled               (Parm, ZeroConstructor, IsPlainOldData)

void ATslPlayerState::BroadcastDeath(class ATslPlayerState* KillerPlayerState, class ATslPlayerState* GroggyPlayerInstigator, class UDamageType* KillerDamageType, EDamageReason DamageReason, const struct FText& DamageCauserName, class UClass* DamageCauserClass, int AlivePlayerNum, int AliveTeamNum, bool InbIsStealKilled)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23544);

	ATslPlayerState_BroadcastDeath_Params params;
	params.KillerPlayerState = KillerPlayerState;
	params.GroggyPlayerInstigator = GroggyPlayerInstigator;
	params.KillerDamageType = KillerDamageType;
	params.DamageReason = DamageReason;
	params.DamageCauserName = DamageCauserName;
	params.DamageCauserClass = DamageCauserClass;
	params.AlivePlayerNum = AlivePlayerNum;
	params.AliveTeamNum = AliveTeamNum;
	params.InbIsStealKilled = InbIsStealKilled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPostProcessEffect.SetMaterialVectorParameter
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int                            idx                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ParameterName                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            Value                          (Parm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslPostProcessEffect::SetMaterialVectorParameter(int idx, const struct FName& ParameterName, const struct FLinearColor& Value)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23639);

	ATslPostProcessEffect_SetMaterialVectorParameter_Params params;
	params.idx = idx;
	params.ParameterName = ParameterName;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPostProcessEffect.SetMaterialParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            idx                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ParameterName                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslPostProcessEffect::SetMaterialParameter(int idx, const struct FName& ParameterName, float Value)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23634);

	ATslPostProcessEffect_SetMaterialParameter_Params params;
	params.idx = idx;
	params.ParameterName = ParameterName;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPostProcessEffect.SetMaterialBlendWeight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            idx                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslPostProcessEffect::SetMaterialBlendWeight(int idx, float Value)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23630);

	ATslPostProcessEffect_SetMaterialBlendWeight_Params params;
	params.idx = idx;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPostProcessEffect.SetEffectParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 ParameterName                  (Parm, ZeroConstructor)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslPostProcessEffect::SetEffectParameter(const struct FString& ParameterName, float Value)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23626);

	ATslPostProcessEffect_SetEffectParameter_Params params;
	params.ParameterName = ParameterName;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPostProcessEffect.SetDepthOfFieldFarBlurSize
// (Final, Native, Public)
// Parameters:
// float                          NewBlurSize                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslPostProcessEffect::SetDepthOfFieldFarBlurSize(float NewBlurSize)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23623);

	ATslPostProcessEffect_SetDepthOfFieldFarBlurSize_Params params;
	params.NewBlurSize = NewBlurSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPostProcessEffect.OnSetEffectParameter
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 ParameterName                  (Parm, ZeroConstructor)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ATslPostProcessEffect::OnSetEffectParameter(const struct FString& ParameterName, float Value)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23620);

	ATslPostProcessEffect_OnSetEffectParameter_Params params;
	params.ParameterName = ParameterName;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslPostProcessEffect.GetEffectParameter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ParameterName                  (Parm, ZeroConstructor)
// float                          DefaultValue                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslPostProcessEffect::GetEffectParameter(const struct FString& ParameterName, float DefaultValue)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23616);

	ATslPostProcessEffect_GetEffectParameter_Params params;
	params.ParameterName = ParameterName;
	params.DefaultValue = DefaultValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslPostProcessEffect.GetDepthOfFieldFarBlurSize
// (Final, Native, Public, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslPostProcessEffect::GetDepthOfFieldFarBlurSize()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23614);

	ATslPostProcessEffect_GetDepthOfFieldFarBlurSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Projectile.ServerFireProjectile
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 Origin                         (Parm, IsPlainOldData)
// struct FVector_NetQuantizeNormal ShootDir                       (Parm)

void ATslWeapon_Projectile::ServerFireProjectile(const struct FVector& Origin, const struct FVector_NetQuantizeNormal& ShootDir)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23652);

	ATslWeapon_Projectile_ServerFireProjectile_Params params;
	params.Origin = Origin;
	params.ShootDir = ShootDir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Throwable.ServerStartPinOff
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void ATslWeapon_Throwable::ServerStartPinOff()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23677);

	ATslWeapon_Throwable_ServerStartPinOff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Throwable.ServerStartCooking
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void ATslWeapon_Throwable::ServerStartCooking()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23676);

	ATslWeapon_Throwable_ServerStartCooking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Throwable.ServerRequestCancelThrow
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ATslWeapon_Throwable::ServerRequestCancelThrow()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23675);

	ATslWeapon_Throwable_ServerRequestCancelThrow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Throwable.ServerFireProjectile
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 RelativeLocation               (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 AimDirection                   (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ATslWeapon_Throwable::ServerFireProjectile(const struct FVector& RelativeLocation, const struct FVector& AimDirection)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23672);

	ATslWeapon_Throwable_ServerFireProjectile_Params params;
	params.RelativeLocation = RelativeLocation;
	params.AimDirection = AimDirection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Throwable.OnRep_ThrowableState
// (Final, Native, Protected)
// Parameters:
// EThrowableState                LastThrowableState             (Parm, ZeroConstructor, IsPlainOldData)

void ATslWeapon_Throwable::OnRep_ThrowableState(EThrowableState LastThrowableState)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23669);

	ATslWeapon_Throwable_OnRep_ThrowableState_Params params;
	params.LastThrowableState = LastThrowableState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Throwable.OnAnimationNotify
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   NotifyName                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void ATslWeapon_Throwable::OnAnimationNotify(const struct FName& NotifyName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23667);

	ATslWeapon_Throwable_OnAnimationNotify_Params params;
	params.NotifyName = NotifyName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Throwable.GetThrowableState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EThrowableState                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EThrowableState ATslWeapon_Throwable::GetThrowableState()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23664);

	ATslWeapon_Throwable_GetThrowableState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Throwable.GetThrowableCountInInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ATslWeapon_Throwable::GetThrowableCountInInventory()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23662);

	ATslWeapon_Throwable_GetThrowableCountInInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Throwable.GetThrowableCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ATslWeapon_Throwable::GetThrowableCount()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23660);

	ATslWeapon_Throwable_GetThrowableCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Throwable.ClientNotifyReset
// (Net, NetReliable, Native, Event, NetMulticast, Protected)

void ATslWeapon_Throwable::ClientNotifyReset()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23659);

	ATslWeapon_Throwable_ClientNotifyReset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Throwable.CalculateFinalThrowVelocity
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 AimDirection                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ATslWeapon_Throwable::CalculateFinalThrowVelocity(const struct FVector& AimDirection)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23656);

	ATslWeapon_Throwable_CalculateFinalThrowVelocity_Params params;
	params.AimDirection = AimDirection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslProjectile.SetMeshRotationFromServer
// (Final, Native, Protected)

void ATslProjectile::SetMeshRotationFromServer()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23705);

	ATslProjectile_SetMeshRotationFromServer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslProjectile.PropagateEffectActor_BP
// (Event, Protected, BlueprintEvent)

void ATslProjectile::PropagateEffectActor_BP()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23704);

	ATslProjectile_PropagateEffectActor_BP_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslProjectile.PropagateEffectActor
// (Net, NetReliable, Native, Event, NetMulticast, Protected)

void ATslProjectile::PropagateEffectActor()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23703);

	ATslProjectile_PropagateEffectActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslProjectile.OnRep_Exploded
// (Final, Native, Protected)

void ATslProjectile::OnRep_Exploded()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23702);

	ATslProjectile_OnRep_Exploded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslProjectile.OnRep_ClientActivate
// (Final, Native, Protected)

void ATslProjectile::OnRep_ClientActivate()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23701);

	ATslProjectile_OnRep_ClientActivate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslProjectile.OnRep_ActiveParticle
// (Final, Native, Protected)

void ATslProjectile::OnRep_ActiveParticle()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23700);

	ATslProjectile_OnRep_ActiveParticle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslProjectile.OnImpact
// (Final, Native, Public, HasOutParms, HasDefaults)
// Parameters:
// struct FHitResult              ImpactResult                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 ImpactVelocity                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ATslProjectile::OnImpact(const struct FHitResult& ImpactResult, const struct FVector& ImpactVelocity)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23697);

	ATslProjectile_OnImpact_Params params;
	params.ImpactResult = ImpactResult;
	params.ImpactVelocity = ImpactVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslProjectile.OnHit
// (Final, Native, Protected, HasOutParms, HasDefaults)
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 NormalImpulse                  (Parm, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ATslProjectile::OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23691);

	ATslProjectile_OnHit_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslProjectile.ExplodeBP
// (Event, Protected, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FRotator                Rotation                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FHitResult              Impact                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)

void ATslProjectile::ExplodeBP(const struct FVector& Location, const struct FRotator& Rotation, const struct FHitResult& Impact, float Radius)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23686);

	ATslProjectile_ExplodeBP_Params params;
	params.Location = Location;
	params.Rotation = Rotation;
	params.Impact = Impact;
	params.Radius = Radius;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslProjectile.CheckVelocityForStart
// (Final, Native, Protected)

void ATslProjectile::CheckVelocityForStart()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23685);

	ATslProjectile_CheckVelocityForStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslProjectile_Flare.Server_SpawnCarePackageCustom
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, BlueprintCallable, NetValidate)
// Parameters:
// struct FVector                 InLocation                     (Parm, IsPlainOldData)

void ATslProjectile_Flare::Server_SpawnCarePackageCustom(const struct FVector& InLocation)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23750);

	ATslProjectile_Flare_Server_SpawnCarePackageCustom_Params params;
	params.InLocation = InLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslProjectile_Flare.ApplyBurn
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 InLocation                     (Parm, IsPlainOldData)

void ATslProjectile_Flare::ApplyBurn(const struct FVector& InLocation)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23748);

	ATslProjectile_Flare_ApplyBurn_Params params;
	params.InLocation = InLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslReactionDoorComponent.OnRep_DoorBreakingState
// (Final, Native, Protected)

void UTslReactionDoorComponent::OnRep_DoorBreakingState()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23759);

	UTslReactionDoorComponent_OnRep_DoorBreakingState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslReactionDoorComponent.ClientTakeDamage
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize     HitLocation                    (ConstParm, Parm, ReferenceParm)
// float                          DamageRadius                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          Impulse                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslReactionDoorComponent::ClientTakeDamage(float Damage, const struct FVector_NetQuantize& HitLocation, float DamageRadius, float Impulse)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23754);

	UTslReactionDoorComponent_ClientTakeDamage_Params params;
	params.Damage = Damage;
	params.HitLocation = HitLocation;
	params.DamageRadius = DamageRadius;
	params.Impulse = Impulse;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSceneCaptureComponent2D.CaptureScene
// (Final, Native, Public, BlueprintCallable)

void UTslSceneCaptureComponent2D::CaptureScene()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23826);

	UTslSceneCaptureComponent2D_CaptureScene_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSceneCaptureWorld.InitWorld
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UGameInstance*           GameInstance                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 SceneCapturePackageName        (Parm, ZeroConstructor)

void UTslSceneCaptureWorld::InitWorld(class UGameInstance* GameInstance, const struct FString& SceneCapturePackageName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23829);

	UTslSceneCaptureWorld_InitWorld_Params params;
	params.GameInstance = GameInstance;
	params.SceneCapturePackageName = SceneCapturePackageName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSceneCaptureWorld.DestroyWorld
// (Final, Native, Public, BlueprintCallable)

void UTslSceneCaptureWorld::DestroyWorld()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23828);

	UTslSceneCaptureWorld_DestroyWorld_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslServerParticle.StopParticleMulticast
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void ATslServerParticle::StopParticleMulticast()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23835);

	ATslServerParticle_StopParticleMulticast_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslServerParticle.OnParticleFinish
// (Final, Native, Protected)
// Parameters:
// class UParticleSystemComponent* PSystem                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ATslServerParticle::OnParticleFinish(class UParticleSystemComponent* PSystem)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(23833);

	ATslServerParticle_OnParticleFinish_Params params;
	params.PSystem = PSystem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSmokeParticleSystemComponent.ForceSpawn
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int                            InEmitterIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 InLocation                     (ConstParm, Parm, IsPlainOldData)
// struct FVector                 InVelocity                     (ConstParm, Parm, IsPlainOldData)

void UTslSmokeParticleSystemComponent::ForceSpawn(int InEmitterIndex, const struct FVector& InLocation, const struct FVector& InVelocity)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24001);

	UTslSmokeParticleSystemComponent_ForceSpawn_Params params;
	params.InEmitterIndex = InEmitterIndex;
	params.InLocation = InLocation;
	params.InVelocity = InVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSmokePropagationComponent.InitScan
// (Final, Native, Public, BlueprintCallable)

void UTslSmokePropagationComponent::InitScan()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24005);

	UTslSmokePropagationComponent_InitScan_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSpectatorPawn.TickMonitoring
// (Final, Native, Private)

void ATslSpectatorPawn::TickMonitoring()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24122);

	ATslSpectatorPawn_TickMonitoring_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSpectatorPawn.SetShowPlayerInfoDistance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Distance                       (Parm, ZeroConstructor, IsPlainOldData)

void ATslSpectatorPawn::SetShowPlayerInfoDistance(float Distance)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24120);

	ATslSpectatorPawn_SetShowPlayerInfoDistance_Params params;
	params.Distance = Distance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSpectatorPawn.SetPlayerCamera
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  NewViewTarget                  (Parm, ZeroConstructor, IsPlainOldData)

void ATslSpectatorPawn::SetPlayerCamera(class AActor* NewViewTarget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24118);

	ATslSpectatorPawn_SetPlayerCamera_Params params;
	params.NewViewTarget = NewViewTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSpectatorPawn.SetObserverCameraMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EObserverCameraMode            NewCameraMode                  (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  NewViewTarget                  (Parm, ZeroConstructor, IsPlainOldData)

void ATslSpectatorPawn::SetObserverCameraMode(EObserverCameraMode NewCameraMode, class AActor* NewViewTarget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24114);

	ATslSpectatorPawn_SetObserverCameraMode_Params params;
	params.NewCameraMode = NewCameraMode;
	params.NewViewTarget = NewViewTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSpectatorPawn.SetKillerOrVictimCamera
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 strKillerID                    (Parm, ZeroConstructor)
// struct FString                 strKillerName                  (Parm, ZeroConstructor)
// struct FString                 strVictimID                    (Parm, ZeroConstructor)
// struct FString                 strVictimName                  (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslSpectatorPawn::SetKillerOrVictimCamera(const struct FString& strKillerID, const struct FString& strKillerName, const struct FString& strVictimID, const struct FString& strVictimName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24108);

	ATslSpectatorPawn_SetKillerOrVictimCamera_Params params;
	params.strKillerID = strKillerID;
	params.strKillerName = strKillerName;
	params.strVictimID = strVictimID;
	params.strVictimName = strVictimName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslSpectatorPawn.SetFreeCamBattleLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 HitterLoc                      (Parm, IsPlainOldData)
// struct FVector                 AttackedLoc                    (Parm, IsPlainOldData)

void ATslSpectatorPawn::SetFreeCamBattleLocation(const struct FVector& HitterLoc, const struct FVector& AttackedLoc)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24105);

	ATslSpectatorPawn_SetFreeCamBattleLocation_Params params;
	params.HitterLoc = HitterLoc;
	params.AttackedLoc = AttackedLoc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSpectatorPawn.RestoreTargetCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslSpectatorPawn::RestoreTargetCharacter()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24103);

	ATslSpectatorPawn_RestoreTargetCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslSpectatorPawn.OnViewTargetUpdate
// (Final, Native, Private)
// Parameters:
// class AActor*                  NewViewTarget                  (Parm, ZeroConstructor, IsPlainOldData)

void ATslSpectatorPawn::OnViewTargetUpdate(class AActor* NewViewTarget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24101);

	ATslSpectatorPawn_OnViewTargetUpdate_Params params;
	params.NewViewTarget = NewViewTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSpectatorPawn.OnToggleShowObseverTagWeapon
// (Final, Native, Private)

void ATslSpectatorPawn::OnToggleShowObseverTagWeapon()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24100);

	ATslSpectatorPawn_OnToggleShowObseverTagWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSpectatorPawn.OnToggleObseverTagWidget
// (Final, Native, Private)

void ATslSpectatorPawn::OnToggleObseverTagWidget()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24099);

	ATslSpectatorPawn_OnToggleObseverTagWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSpectatorPawn.OnSwitchCameraSpectator
// (Final, Native, Public)

void ATslSpectatorPawn::OnSwitchCameraSpectator()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24098);

	ATslSpectatorPawn_OnSwitchCameraSpectator_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSpectatorPawn.OnSwitchCameraFollow
// (Final, Native, Public)

void ATslSpectatorPawn::OnSwitchCameraFollow()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24097);

	ATslSpectatorPawn_OnSwitchCameraFollow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSpectatorPawn.OnStopSlowMove
// (Final, Native, Private)

void ATslSpectatorPawn::OnStopSlowMove()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24096);

	ATslSpectatorPawn_OnStopSlowMove_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSpectatorPawn.OnStopFastMove
// (Final, Native, Private)

void ATslSpectatorPawn::OnStopFastMove()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24095);

	ATslSpectatorPawn_OnStopFastMove_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSpectatorPawn.OnStartSlowMove
// (Final, Native, Private)

void ATslSpectatorPawn::OnStartSlowMove()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24094);

	ATslSpectatorPawn_OnStartSlowMove_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSpectatorPawn.OnStartFastMove
// (Final, Native, Private)

void ATslSpectatorPawn::OnStartFastMove()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24093);

	ATslSpectatorPawn_OnStartFastMove_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSpectatorPawn.OnSetLocation
// (Final, Native, Private)
// Parameters:
// unsigned char                  idx                            (Parm, ZeroConstructor, IsPlainOldData)

void ATslSpectatorPawn::OnSetLocation(unsigned char idx)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24091);

	ATslSpectatorPawn_OnSetLocation_Params params;
	params.idx = idx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSpectatorPawn.OnSetFree
// (Final, Native, Public)

void ATslSpectatorPawn::OnSetFree()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24090);

	ATslSpectatorPawn_OnSetFree_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSpectatorPawn.OnSetCharacterSpec
// (Final, Native, Private)
// Parameters:
// unsigned char                  idx                            (Parm, ZeroConstructor, IsPlainOldData)

void ATslSpectatorPawn::OnSetCharacterSpec(unsigned char idx)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24088);

	ATslSpectatorPawn_OnSetCharacterSpec_Params params;
	params.idx = idx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSpectatorPawn.OnSetCharacter
// (Final, Native, Private)
// Parameters:
// unsigned char                  idx                            (Parm, ZeroConstructor, IsPlainOldData)

void ATslSpectatorPawn::OnSetCharacter(unsigned char idx)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24086);

	ATslSpectatorPawn_OnSetCharacter_Params params;
	params.idx = idx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSpectatorPawn.OnSaveLocation
// (Final, Native, Private)
// Parameters:
// unsigned char                  idx                            (Parm, ZeroConstructor, IsPlainOldData)

void ATslSpectatorPawn::OnSaveLocation(unsigned char idx)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24084);

	ATslSpectatorPawn_OnSaveLocation_Params params;
	params.idx = idx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSpectatorPawn.OnSaveCharacter
// (Final, Native, Public)
// Parameters:
// unsigned char                  idx                            (Parm, ZeroConstructor, IsPlainOldData)

void ATslSpectatorPawn::OnSaveCharacter(unsigned char idx)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24082);

	ATslSpectatorPawn_OnSaveCharacter_Params params;
	params.idx = idx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSpectatorPawn.OnPlayerInfoDistanceUpHold
// (Final, Native, Public)

void ATslSpectatorPawn::OnPlayerInfoDistanceUpHold()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24081);

	ATslSpectatorPawn_OnPlayerInfoDistanceUpHold_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSpectatorPawn.OnPlayerInfoDistanceUp
// (Final, Native, Public)

void ATslSpectatorPawn::OnPlayerInfoDistanceUp()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24080);

	ATslSpectatorPawn_OnPlayerInfoDistanceUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSpectatorPawn.OnPlayerInfoDistanceDownHold
// (Final, Native, Public)

void ATslSpectatorPawn::OnPlayerInfoDistanceDownHold()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24079);

	ATslSpectatorPawn_OnPlayerInfoDistanceDownHold_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSpectatorPawn.OnPlayerInfoDistanceDown
// (Final, Native, Public)

void ATslSpectatorPawn::OnPlayerInfoDistanceDown()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24078);

	ATslSpectatorPawn_OnPlayerInfoDistanceDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSpectatorPawn.OnGotoTimelineDone
// (Final, Native, Public)

void ATslSpectatorPawn::OnGotoTimelineDone()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24077);

	ATslSpectatorPawn_OnGotoTimelineDone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSpectatorPawn.IsObserverTagWeaponShow
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslSpectatorPawn::IsObserverTagWeaponShow()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24075);

	ATslSpectatorPawn_IsObserverTagWeaponShow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslSpectatorPawn.HandleClipboard
// (Final, Native, Private)

void ATslSpectatorPawn::HandleClipboard()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24074);

	ATslSpectatorPawn_HandleClipboard_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslSpectatorPawn.GetSpectatableCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslCharacter*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslCharacter* ATslSpectatorPawn::GetSpectatableCharacter()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24072);

	ATslSpectatorPawn_GetSpectatableCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslSpectatorPawn.GetSpectableCarePackageItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACarePackageItem*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ACarePackageItem* ATslSpectatorPawn::GetSpectableCarePackageItem()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24070);

	ATslSpectatorPawn_GetSpectableCarePackageItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslSpectatorPawn.GetShowPlayerInfoDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslSpectatorPawn::GetShowPlayerInfoDistance()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24068);

	ATslSpectatorPawn_GetShowPlayerInfoDistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslSpectatorPawn.GetObserverTagShow
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslSpectatorPawn::GetObserverTagShow()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24066);

	ATslSpectatorPawn_GetObserverTagShow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslSpectatorPawn.GetLastSpectatedCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslCharacter*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslCharacter* ATslSpectatorPawn::GetLastSpectatedCharacter()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24064);

	ATslSpectatorPawn_GetLastSpectatedCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslSpectatorPawn.GetCameraMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EObserverCameraMode            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EObserverCameraMode ATslSpectatorPawn::GetCameraMode()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24061);

	ATslSpectatorPawn_GetCameraMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslSpectatorPawn.BackupTargetCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  ViewTarget                     (Parm, ZeroConstructor, IsPlainOldData)

void ATslSpectatorPawn::BackupTargetCharacter(class AActor* ViewTarget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24059);

	ATslSpectatorPawn_BackupTargetCharacter_Params params;
	params.ViewTarget = ViewTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslStatics.UseHighPrecisionMouseMovement
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*       PlayerController               (Parm, ZeroConstructor, IsPlainOldData)

void UTslStatics::STATIC_UseHighPrecisionMouseMovement(class APlayerController* PlayerController)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24459);

	UTslStatics_UseHighPrecisionMouseMovement_Params params;
	params.PlayerController = PlayerController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslStatics.UnloadTextureByPtr
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TAssetPtr<class UTexture>      TexturePtr                     (Parm)

void UTslStatics::STATIC_UnloadTextureByPtr(TAssetPtr<class UTexture> TexturePtr)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24457);

	UTslStatics_UnloadTextureByPtr_Params params;
	params.TexturePtr = TexturePtr;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslStatics.SetWorldOriginByDistance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*       Controller                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          XYDistanceToShift              (Parm, ZeroConstructor, IsPlainOldData)

void UTslStatics::STATIC_SetWorldOriginByDistance(class APlayerController* Controller, float XYDistanceToShift)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24454);

	UTslStatics_SetWorldOriginByDistance_Params params;
	params.Controller = Controller;
	params.XYDistanceToShift = XYDistanceToShift;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslStatics.SetWorldOrigin
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*       Controller                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UTslStatics::STATIC_SetWorldOrigin(class APlayerController* Controller)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24452);

	UTslStatics_SetWorldOrigin_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslStatics.SetReportUserInfo
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// ESubjectToReport               Key                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FTslReportUserInfo      UserInfo                       (ConstParm, Parm, OutParm, ReferenceParm)

void UTslStatics::STATIC_SetReportUserInfo(class UObject* WorldContextObject, ESubjectToReport Key, const struct FTslReportUserInfo& UserInfo)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24447);

	UTslStatics_SetReportUserInfo_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Key = Key;
	params.UserInfo = UserInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslStatics.SetAnimationAkSwitch
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACharacter*              Character                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 SwitchGroup                    (Parm, ZeroConstructor)
// struct FString                 SwitchState                    (Parm, ZeroConstructor)

void UTslStatics::STATIC_SetAnimationAkSwitch(class ACharacter* Character, const struct FString& SwitchGroup, const struct FString& SwitchState)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24443);

	UTslStatics_SetAnimationAkSwitch_Params params;
	params.Character = Character;
	params.SwitchGroup = SwitchGroup;
	params.SwitchState = SwitchState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslStatics.SetAnimationAkRTPC
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACharacter*              Character                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 RTPCName                       (Parm, ZeroConstructor)
// float                          RTPCValue                      (Parm, ZeroConstructor, IsPlainOldData)

void UTslStatics::STATIC_SetAnimationAkRTPC(class ACharacter* Character, const struct FString& RTPCName, float RTPCValue)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24439);

	UTslStatics_SetAnimationAkRTPC_Params params;
	params.Character = Character;
	params.RTPCName = RTPCName;
	params.RTPCValue = RTPCValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslStatics.ServerPositionToLocal
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Server                         (Parm, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UTslStatics::STATIC_ServerPositionToLocal(class UObject* WorldContextObject, const struct FVector& Server)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24435);

	UTslStatics_ServerPositionToLocal_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Server = Server;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.SafeDivide_IntInt
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            A                              (Parm, ZeroConstructor, IsPlainOldData)
// int                            B                              (Parm, ZeroConstructor, IsPlainOldData)
// int                            DivideByZeroValue              (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UTslStatics::STATIC_SafeDivide_IntInt(int A, int B, int DivideByZeroValue)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24430);

	UTslStatics_SafeDivide_IntInt_Params params;
	params.A = A;
	params.B = B;
	params.DivideByZeroValue = DivideByZeroValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.SafeDivide_FloatFloat
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          A                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          B                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          DivideByZeroValue              (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslStatics::STATIC_SafeDivide_FloatFloat(float A, float B, float DivideByZeroValue)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24425);

	UTslStatics_SafeDivide_FloatFloat_Params params;
	params.A = A;
	params.B = B;
	params.DivideByZeroValue = DivideByZeroValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.ReleaseMouseCaptureFromPlayerController
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*       PlayerController               (Parm, ZeroConstructor, IsPlainOldData)

void UTslStatics::STATIC_ReleaseMouseCaptureFromPlayerController(class APlayerController* PlayerController)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24423);

	UTslStatics_ReleaseMouseCaptureFromPlayerController_Params params;
	params.PlayerController = PlayerController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslStatics.ProjectPointToFloor
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           bOutHit                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          Length                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UTslStatics::STATIC_ProjectPointToFloor(class UObject* WorldContextObject, const struct FVector& Origin, float Length, bool* bOutHit)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24417);

	UTslStatics_ProjectPointToFloor_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Origin = Origin;
	params.Length = Length;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (bOutHit != nullptr)
		*bOutHit = params.bOutHit;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.ProjectPointsToHighFloor
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           bOutHit                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          AroundLength                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          RayLength                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UTslStatics::STATIC_ProjectPointsToHighFloor(class UObject* WorldContextObject, const struct FVector& Origin, float AroundLength, float RayLength, bool* bOutHit)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24410);

	UTslStatics_ProjectPointsToHighFloor_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Origin = Origin;
	params.AroundLength = AroundLength;
	params.RayLength = RayLength;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (bOutHit != nullptr)
		*bOutHit = params.bOutHit;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.PredictProjectilePathBox
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              OutHit                         (Parm, OutParm, IsPlainOldData)
// TArray<struct FVector>         OutPathPositions               (Parm, OutParm, ZeroConstructor)
// struct FVector                 OutLastTraceDestination        (Parm, OutParm, IsPlainOldData)
// struct FVector                 StartPos                       (Parm, IsPlainOldData)
// struct FVector                 LaunchVelocity                 (Parm, IsPlainOldData)
// bool                           bTracePath                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ProjectileBox                  (Parm, IsPlainOldData)
// TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           bTraceComplex                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>          ActorsToIgnore                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TEnumAsByte<EDrawDebugTrace>   DrawDebugType                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          DrawDebugTime                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          SimFrequency                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaxSimTime                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          OverrideGravityZ               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_PredictProjectilePathBox(class UObject* WorldContextObject, const struct FVector& StartPos, const struct FVector& LaunchVelocity, bool bTracePath, const struct FVector& ProjectileBox, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, float DrawDebugTime, float SimFrequency, float MaxSimTime, float OverrideGravityZ, struct FHitResult* OutHit, TArray<struct FVector>* OutPathPositions, struct FVector* OutLastTraceDestination)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24389);

	UTslStatics_PredictProjectilePathBox_Params params;
	params.WorldContextObject = WorldContextObject;
	params.StartPos = StartPos;
	params.LaunchVelocity = LaunchVelocity;
	params.bTracePath = bTracePath;
	params.ProjectileBox = ProjectileBox;
	params.ObjectTypes = ObjectTypes;
	params.bTraceComplex = bTraceComplex;
	params.ActorsToIgnore = ActorsToIgnore;
	params.DrawDebugType = DrawDebugType;
	params.DrawDebugTime = DrawDebugTime;
	params.SimFrequency = SimFrequency;
	params.MaxSimTime = MaxSimTime;
	params.OverrideGravityZ = OverrideGravityZ;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutHit != nullptr)
		*OutHit = params.OutHit;
	if (OutPathPositions != nullptr)
		*OutPathPositions = params.OutPathPositions;
	if (OutLastTraceDestination != nullptr)
		*OutLastTraceDestination = params.OutLastTraceDestination;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.PlayerStateToReportReportUserInfo
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ATslPlayerState*         TslPlayerState                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FTslReportUserInfo      ReturnValue                    (Parm, OutParm, ReturnParm)

struct FTslReportUserInfo UTslStatics::STATIC_PlayerStateToReportReportUserInfo(class ATslPlayerState* TslPlayerState)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24386);

	UTslStatics_PlayerStateToReportReportUserInfo_Params params;
	params.TslPlayerState = TslPlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.PhysicalSurfaceToString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EPhysicalSurface>  Type                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UTslStatics::STATIC_PhysicalSurfaceToString(TEnumAsByte<EPhysicalSurface> Type)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24383);

	UTslStatics_PhysicalSurfaceToString_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.PhysicalSurfaceToName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EPhysicalSurface>  Type                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName UTslStatics::STATIC_PhysicalSurfaceToName(TEnumAsByte<EPhysicalSurface> Type)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24380);

	UTslStatics_PhysicalSurfaceToName_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.LocalPositionToServer
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Local                          (Parm, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UTslStatics::STATIC_LocalPositionToServer(class UObject* WorldContextObject, const struct FVector& Local)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24376);

	UTslStatics_LocalPositionToServer_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Local = Local;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.LoadTextureByPtr
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TAssetPtr<class UTexture>      TexturePtr                     (Parm)
// class UTexture*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture* UTslStatics::STATIC_LoadTextureByPtr(TAssetPtr<class UTexture> TexturePtr)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24373);

	UTslStatics_LoadTextureByPtr_Params params;
	params.TexturePtr = TexturePtr;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.LineSphereIntersection
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 Intersection1                  (Parm, OutParm, IsPlainOldData)
// struct FVector                 Intersection2                  (Parm, OutParm, IsPlainOldData)
// struct FVector                 Center                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 Origion                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 Direction                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          Radius                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_LineSphereIntersection(const struct FVector& Center, const struct FVector& Origion, const struct FVector& Direction, float Radius, struct FVector* Intersection1, struct FVector* Intersection2)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24365);

	UTslStatics_LineSphereIntersection_Params params;
	params.Center = Center;
	params.Origion = Origion;
	params.Direction = Direction;
	params.Radius = Radius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Intersection1 != nullptr)
		*Intersection1 = params.Intersection1;
	if (Intersection2 != nullptr)
		*Intersection2 = params.Intersection2;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.IsUsingGappLobby
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsUsingGappLobby()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24363);

	UTslStatics_IsUsingGappLobby_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.IsShipping
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsShipping()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24361);

	UTslStatics_IsShipping_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.IsServerActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsServerActor(class AActor* Actor)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24358);

	UTslStatics_IsServerActor_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.IsReportUserValid
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// ESubjectToReport               Key                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsReportUserValid(class UObject* WorldContextObject, ESubjectToReport Key)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24353);

	UTslStatics_IsReportUserValid_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.IsReportUserApplied
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// ESubjectToReport               Key                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsReportUserApplied(class UObject* WorldContextObject, ESubjectToReport Key)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24348);

	UTslStatics_IsReportUserApplied_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.IsPIE
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsPIE(class UObject* WorldContextObject)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24345);

	UTslStatics_IsPIE_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.IsNextPlayzoneOnTheMap
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsNextPlayzoneOnTheMap(class UUserWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24342);

	UTslStatics_IsNextPlayzoneOnTheMap_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.IsMapFullyLoaded
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWorld*                  World                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsMapFullyLoaded(class UWorld* World)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24339);

	UTslStatics_IsMapFullyLoaded_Params params;
	params.World = World;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.IsLastInputGamepad
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsLastInputGamepad(class UObject* WorldContextObject)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24336);

	UTslStatics_IsLastInputGamepad_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.IsKoreaRegion
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsKoreaRegion(class UObject* WorldContextObject)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24333);

	UTslStatics_IsKoreaRegion_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.IsGamepadConnected
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsGamepadConnected()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24331);

	UTslStatics_IsGamepadConnected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.IsForKoreanRating
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsForKoreanRating()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24329);

	UTslStatics_IsForKoreanRating_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.IsForChineseLicensing
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsForChineseLicensing()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24327);

	UTslStatics_IsForChineseLicensing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.IsESports
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsESports()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24325);

	UTslStatics_IsESports_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.IsEditor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsEditor()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24323);

	UTslStatics_IsEditor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.IsClientActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsClientActor(class AActor* Actor)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24320);

	UTslStatics_IsClientActor_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.GetWaterVolumeAtLocation
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Point                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class APhysicsVolume*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APhysicsVolume* UTslStatics::STATIC_GetWaterVolumeAtLocation(class UObject* WorldContextObject, const struct FVector& Point)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24316);

	UTslStatics_GetWaterVolumeAtLocation_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Point = Point;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.GetWaterSurfaceHeight
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class APhysicsVolume*          PhysicsVolume                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 CurLocation                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslStatics::STATIC_GetWaterSurfaceHeight(class APhysicsVolume* PhysicsVolume, const struct FVector& CurLocation)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24312);

	UTslStatics_GetWaterSurfaceHeight_Params params;
	params.PhysicsVolume = PhysicsVolume;
	params.CurLocation = CurLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.GetVehicleSeatComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UTslVehicleSeatComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UTslVehicleSeatComponent* UTslStatics::STATIC_GetVehicleSeatComponent(class AActor* Actor)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24309);

	UTslStatics_GetVehicleSeatComponent_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.GetVehicleCommonComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// class UTslVehicleCommonComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UTslVehicleCommonComponent* UTslStatics::STATIC_GetVehicleCommonComponent(class AActor* Actor)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24306);

	UTslStatics_GetVehicleCommonComponent_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.GetTslPlayerController
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APawn*                   Pawn                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class ATslPlayerController*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslPlayerController* UTslStatics::STATIC_GetTslPlayerController(class APawn* Pawn)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24303);

	UTslStatics_GetTslPlayerController_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.GetTslPlatformName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UTslStatics::STATIC_GetTslPlatformName()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24301);

	UTslStatics_GetTslPlatformName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.GetTslGameState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class ATslGameState*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslGameState* UTslStatics::STATIC_GetTslGameState(class UObject* WorldContextObject)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24298);

	UTslStatics_GetTslGameState_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.GetTslCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class ATslCharacter*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslCharacter* UTslStatics::STATIC_GetTslCharacter(class UObject* WorldContextObject)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24295);

	UTslStatics_GetTslCharacter_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.GetSimplePhysicalMaterial
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*     PrimitiveComponent             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UPhysicalMaterial*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UPhysicalMaterial* UTslStatics::STATIC_GetSimplePhysicalMaterial(class UPrimitiveComponent* PrimitiveComponent)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24292);

	UTslStatics_GetSimplePhysicalMaterial_Params params;
	params.PrimitiveComponent = PrimitiveComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.GetServerLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 ActorOrComponent               (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UTslStatics::STATIC_GetServerLocation(class UObject* ActorOrComponent)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24289);

	UTslStatics_GetServerLocation_Params params;
	params.ActorOrComponent = ActorOrComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.GetReportUserInfo
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// ESubjectToReport               Key                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FTslReportUserInfo      ReturnValue                    (Parm, OutParm, ReturnParm)

struct FTslReportUserInfo UTslStatics::STATIC_GetReportUserInfo(class UObject* WorldContextObject, ESubjectToReport Key)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24284);

	UTslStatics_GetReportUserInfo_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.GetRecoilControlScale
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslStatics::STATIC_GetRecoilControlScale()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24282);

	UTslStatics_GetRecoilControlScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.GetRecoilAnimScale
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslStatics::STATIC_GetRecoilAnimScale()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24280);

	UTslStatics_GetRecoilAnimScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.GetNextPlayzoneRadius
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslStatics::STATIC_GetNextPlayzoneRadius(class UObject* WorldContextObject)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24277);

	UTslStatics_GetNextPlayzoneRadius_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.GetNextPlayzonePosition
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UTslStatics::STATIC_GetNextPlayzonePosition(class UObject* WorldContextObject)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24274);

	UTslStatics_GetNextPlayzonePosition_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.GetMOAScale
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslStatics::STATIC_GetMOAScale()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24272);

	UTslStatics_GetMOAScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.GetGappLobbyUrl
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UTslStatics::STATIC_GetGappLobbyUrl()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24270);

	UTslStatics_GetGappLobbyUrl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.GetGameVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UTslStatics::STATIC_GetGameVersion()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24268);

	UTslStatics_GetGameVersion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.GetGamepadTabMaximumDelay
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ATslPlayerController*    TslPlayerController            (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslStatics::STATIC_GetGamepadTabMaximumDelay(class ATslPlayerController* TslPlayerController)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24265);

	UTslStatics_GetGamepadTabMaximumDelay_Params params;
	params.TslPlayerController = TslPlayerController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.GetFullGameVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UTslStatics::STATIC_GetFullGameVersion()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24263);

	UTslStatics_GetFullGameVersion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.GetConsoleValue
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ConsloeName                    (Parm, ZeroConstructor)
// float                          OutValueFloat                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// int                            OutValueInt                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FString                 OutValueString                 (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_GetConsoleValue(const struct FString& ConsloeName, float* OutValueFloat, int* OutValueInt, struct FString* OutValueString)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24257);

	UTslStatics_GetConsoleValue_Params params;
	params.ConsloeName = ConsloeName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutValueFloat != nullptr)
		*OutValueFloat = params.OutValueFloat;
	if (OutValueInt != nullptr)
		*OutValueInt = params.OutValueInt;
	if (OutValueString != nullptr)
		*OutValueString = params.OutValueString;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.GetBluezoneRadius
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslStatics::STATIC_GetBluezoneRadius(class UObject* WorldContextObject)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24254);

	UTslStatics_GetBluezoneRadius_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.GetBluezonePosition
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UTslStatics::STATIC_GetBluezonePosition(class UObject* WorldContextObject)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24251);

	UTslStatics_GetBluezonePosition_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.GetBallisticDropScale
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslStatics::STATIC_GetBallisticDropScale()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24249);

	UTslStatics_GetBallisticDropScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.GetBallisticDragScale
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslStatics::STATIC_GetBallisticDragScale()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24247);

	UTslStatics_GetBallisticDragScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.ConeVolumeLineTraceSingle
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 OutHitPoint                    (Parm, OutParm, IsPlainOldData)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          HalfConeAngle                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          RayLength                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_ConeVolumeLineTraceSingle(class UObject* WorldContextObject, const struct FVector& Origin, float HalfConeAngle, float RayLength, struct FVector* OutHitPoint)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24240);

	UTslStatics_ConeVolumeLineTraceSingle_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Origin = Origin;
	params.HalfConeAngle = HalfConeAngle;
	params.RayLength = RayLength;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutHitPoint != nullptr)
		*OutHitPoint = params.OutHitPoint;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.ConeVolumeLineTraceMulti
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FVector>         OutHitPoints                   (Parm, OutParm, ZeroConstructor)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// int                            SamplingNum                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          HalfConeAngle                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          RayLength                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UTslStatics::STATIC_ConeVolumeLineTraceMulti(class UObject* WorldContextObject, const struct FVector& Origin, int SamplingNum, float HalfConeAngle, float RayLength, TArray<struct FVector>* OutHitPoints)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24231);

	UTslStatics_ConeVolumeLineTraceMulti_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Origin = Origin;
	params.SamplingNum = SamplingNum;
	params.HalfConeAngle = HalfConeAngle;
	params.RayLength = RayLength;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutHitPoints != nullptr)
		*OutHitPoints = params.OutHitPoints;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.CanVehicleSeatInteraction
// (Final, Native, Static, Public)
// Parameters:
// class ATslCharacter*           InTslCharacter                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_CanVehicleSeatInteraction(class ATslCharacter* InTslCharacter)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24228);

	UTslStatics_CanVehicleSeatInteraction_Params params;
	params.InTslCharacter = InTslCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.CanCancelCasting
// (Final, Native, Static, Public)
// Parameters:
// class ATslCharacter*           InTslCharacter                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_CanCancelCasting(class ATslCharacter* InTslCharacter)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24225);

	UTslStatics_CanCancelCasting_Params params;
	params.InTslCharacter = InTslCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.ApplyRadialDamageWithFalloff
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// float                          BaseDamage                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          MinimumDamage                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          DamageInnerRadius              (Parm, ZeroConstructor, IsPlainOldData)
// float                          DamageOuterRadius              (Parm, ZeroConstructor, IsPlainOldData)
// float                          DamageFalloff                  (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>          IgnoreActors                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FAttackId               AttackId                       (Parm)
// bool                           bIsTargetDestructible          (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             InstigatedByController         (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ECollisionChannel> DamagePreventionChannel        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bExplode                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_ApplyRadialDamageWithFalloff(class UObject* WorldContextObject, float BaseDamage, float MinimumDamage, const struct FVector& Origin, float DamageInnerRadius, float DamageOuterRadius, float DamageFalloff, class UClass* DamageTypeClass, TArray<class AActor*> IgnoreActors, const struct FAttackId& AttackId, bool bIsTargetDestructible, class AActor* DamageCauser, class AController* InstigatedByController, TEnumAsByte<ECollisionChannel> DamagePreventionChannel, bool bExplode)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24207);

	UTslStatics_ApplyRadialDamageWithFalloff_Params params;
	params.WorldContextObject = WorldContextObject;
	params.BaseDamage = BaseDamage;
	params.MinimumDamage = MinimumDamage;
	params.Origin = Origin;
	params.DamageInnerRadius = DamageInnerRadius;
	params.DamageOuterRadius = DamageOuterRadius;
	params.DamageFalloff = DamageFalloff;
	params.DamageTypeClass = DamageTypeClass;
	params.IgnoreActors = IgnoreActors;
	params.AttackId = AttackId;
	params.bIsTargetDestructible = bIsTargetDestructible;
	params.DamageCauser = DamageCauser;
	params.InstigatedByController = InstigatedByController;
	params.DamagePreventionChannel = DamagePreventionChannel;
	params.bExplode = bExplode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.ApplyRadialDamageWithCurve
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// float                          BaseDamage                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          DamageRadius                   (Parm, ZeroConstructor, IsPlainOldData)
// class UCurveFloat*             DamageCurve                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>          IgnoreActors                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FAttackId               AttackId                       (Parm)
// bool                           bIsTargetDestructible          (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             InstigatedByController         (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ECollisionChannel> DamagePreventionChannel        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bExplode                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_ApplyRadialDamageWithCurve(class UObject* WorldContextObject, float BaseDamage, const struct FVector& Origin, float DamageRadius, class UCurveFloat* DamageCurve, class UClass* DamageTypeClass, TArray<class AActor*> IgnoreActors, const struct FAttackId& AttackId, bool bIsTargetDestructible, class AActor* DamageCauser, class AController* InstigatedByController, TEnumAsByte<ECollisionChannel> DamagePreventionChannel, bool bExplode)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24191);

	UTslStatics_ApplyRadialDamageWithCurve_Params params;
	params.WorldContextObject = WorldContextObject;
	params.BaseDamage = BaseDamage;
	params.Origin = Origin;
	params.DamageRadius = DamageRadius;
	params.DamageCurve = DamageCurve;
	params.DamageTypeClass = DamageTypeClass;
	params.IgnoreActors = IgnoreActors;
	params.AttackId = AttackId;
	params.bIsTargetDestructible = bIsTargetDestructible;
	params.DamageCauser = DamageCauser;
	params.InstigatedByController = InstigatedByController;
	params.DamagePreventionChannel = DamagePreventionChannel;
	params.bExplode = bExplode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.ApplyRadialDamage
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// float                          BaseDamage                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          DamageRadius                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>          IgnoreActors                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FAttackId               AttackId                       (Parm)
// bool                           bIsTargetDestructible          (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             InstigatedByController         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDoFullDamage                  (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ECollisionChannel> DamagePreventionChannel        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bExplode                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_ApplyRadialDamage(class UObject* WorldContextObject, float BaseDamage, const struct FVector& Origin, float DamageRadius, class UClass* DamageTypeClass, TArray<class AActor*> IgnoreActors, const struct FAttackId& AttackId, bool bIsTargetDestructible, class AActor* DamageCauser, class AController* InstigatedByController, bool bDoFullDamage, TEnumAsByte<ECollisionChannel> DamagePreventionChannel, bool bExplode)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24175);

	UTslStatics_ApplyRadialDamage_Params params;
	params.WorldContextObject = WorldContextObject;
	params.BaseDamage = BaseDamage;
	params.Origin = Origin;
	params.DamageRadius = DamageRadius;
	params.DamageTypeClass = DamageTypeClass;
	params.IgnoreActors = IgnoreActors;
	params.AttackId = AttackId;
	params.bIsTargetDestructible = bIsTargetDestructible;
	params.DamageCauser = DamageCauser;
	params.InstigatedByController = InstigatedByController;
	params.bDoFullDamage = bDoFullDamage;
	params.DamagePreventionChannel = DamagePreventionChannel;
	params.bExplode = bExplode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslStatics.ApplyDamage
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          BaseDamage                     (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)
// struct FAttackId               AttackId                       (Parm)

void UTslStatics::STATIC_ApplyDamage(class AActor* DamagedActor, float BaseDamage, class AController* EventInstigator, class AActor* DamageCauser, class UClass* DamageTypeClass, const struct FAttackId& AttackId)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24168);

	UTslStatics_ApplyDamage_Params params;
	params.DamagedActor = DamagedActor;
	params.BaseDamage = BaseDamage;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.DamageTypeClass = DamageTypeClass;
	params.AttackId = AttackId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslStreamer.OnOriginShiftedInternal
// (Final, Native, Private, HasDefaults)
// Parameters:
// class UWorld*                  InWorld                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FIntVector              From                           (Parm, IsPlainOldData)
// struct FIntVector              To                             (Parm, IsPlainOldData)

void UTslStreamer::OnOriginShiftedInternal(class UWorld* InWorld, const struct FIntVector& From, const struct FIntVector& To)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24462);

	UTslStreamer_OnOriginShiftedInternal_Params params;
	params.InWorld = InWorld;
	params.From = From;
	params.To = To;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslStreamer.OnLevelChangedInternal
// (Final, Native, Private)

void UTslStreamer::OnLevelChangedInternal()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24461);

	UTslStreamer_OnLevelChangedInternal_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslThrowableTrajectoryViewComponent.AttachToThrowable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ATslWeapon_Throwable*    ThrowableIn                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UTslThrowableTrajectoryViewComponent::AttachToThrowable(class ATslWeapon_Throwable* ThrowableIn)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24799);

	UTslThrowableTrajectoryViewComponent_AttachToThrowable_Params params;
	params.ThrowableIn = ThrowableIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslUserWidget.TransferUserFocusThroughReply
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FFocusEvent             AcceptedFocusEvent             (ConstParm, Parm, OutParm, ReferenceParm)
// struct FEventReply             Reply                          (Parm, OutParm, ReferenceParm)
// class UWidget*                 FocusWidget                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bInAllUsers                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FEventReply             ReturnValue                    (Parm, OutParm, ReturnParm)

struct FEventReply UTslUserWidget::STATIC_TransferUserFocusThroughReply(const struct FFocusEvent& AcceptedFocusEvent, class UWidget* FocusWidget, bool bInAllUsers, struct FEventReply* Reply)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24850);

	UTslUserWidget_TransferUserFocusThroughReply_Params params;
	params.AcceptedFocusEvent = AcceptedFocusEvent;
	params.FocusWidget = FocusWidget;
	params.bInAllUsers = bInAllUsers;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Reply != nullptr)
		*Reply = params.Reply;

	return params.ReturnValue;
}


// Function TslGame.TslUserWidget.StopListeningForAllInputAxises
// (Final, Native, Public, BlueprintCallable)

void UTslUserWidget::StopListeningForAllInputAxises()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24849);

	UTslUserWidget_StopListeningForAllInputAxises_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslUserWidget.NavigateUserFocus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ULocalPlayer*            Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UWidget*                 Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslUserWidget::STATIC_NavigateUserFocus(class ULocalPlayer* Player, class UWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24845);

	UTslUserWidget_NavigateUserFocus_Params params;
	params.Player = Player;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslUserWidget.ListenForInputAxis
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   AxisName                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Scale                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bConsume                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FScriptDelegate         Callback                       (Parm, ZeroConstructor)

void UTslUserWidget::ListenForInputAxis(const struct FName& AxisName, float Scale, bool bConsume, const struct FScriptDelegate& Callback)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24840);

	UTslUserWidget_ListenForInputAxis_Params params;
	params.AxisName = AxisName;
	params.Scale = Scale;
	params.bConsume = bConsume;
	params.Callback = Callback;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslUserWidget.IsReplaying
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslUserWidget::IsReplaying()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24838);

	UTslUserWidget_IsReplaying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslUserWidget.GetRawKeyValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FKey                    InKey                          (Parm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslUserWidget::GetRawKeyValue(const struct FKey& InKey)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24835);

	UTslUserWidget_GetRawKeyValue_Params params;
	params.InKey = InKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslUserWidget.GetDemoPlayerState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsForMatchResult               (Parm, ZeroConstructor, IsPlainOldData)
// class ATslPlayerState*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslPlayerState* UTslUserWidget::GetDemoPlayerState(bool IsForMatchResult)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24832);

	UTslUserWidget_GetDemoPlayerState_Params params;
	params.IsForMatchResult = IsForMatchResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslUserWidget.GetCachedViewTargetTslCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslCharacter*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslCharacter* UTslUserWidget::GetCachedViewTargetTslCharacter()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24830);

	UTslUserWidget_GetCachedViewTargetTslCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslUserWidget.GetCachedGameState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslGameState*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslGameState* UTslUserWidget::GetCachedGameState()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24828);

	UTslUserWidget_GetCachedGameState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslUserWidget.GetCachedCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslCharacter*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslCharacter* UTslUserWidget::GetCachedCharacter()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24826);

	UTslUserWidget_GetCachedCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslUserWidget.ContainUserFocus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ULocalPlayer*            Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UWidget*                 Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslUserWidget::STATIC_ContainUserFocus(class ULocalPlayer* Player, class UWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24822);

	UTslUserWidget_ContainUserFocus_Params params;
	params.Player = Player;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslUserWidget.ContainOwnerUserFocus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslUserWidget::ContainOwnerUserFocus()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24820);

	UTslUserWidget_ContainOwnerUserFocus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslUserWidget.ClearUserFocus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ULocalPlayer*            Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UTslUserWidget::STATIC_ClearUserFocus(class ULocalPlayer* Player)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24818);

	UTslUserWidget_ClearUserFocus_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.UmgBaseWidget.IsMouseOn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUmgBaseWidget::IsMouseOn()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24869);

	UUmgBaseWidget_IsMouseOn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UmgBaseWidget.HandleMainPrepass
// (Native, Public)
// Parameters:
// class UWidget*                 Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUmgBaseWidget::HandleMainPrepass(class UWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24867);

	UUmgBaseWidget_HandleMainPrepass_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslXboxTeamManageWidget.ToggleVoiceChat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            MemberNumber                   (Parm, ZeroConstructor, IsPlainOldData)

void UTslXboxTeamManageWidget::ToggleVoiceChat(int MemberNumber)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24890);

	UTslXboxTeamManageWidget_ToggleVoiceChat_Params params;
	params.MemberNumber = MemberNumber;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslXboxTeamManageWidget.TeamMemberMuteChanged
// (Final, Native, Private)
// Parameters:
// struct FString                 PlayerId                       (Parm, ZeroConstructor)
// struct FString                 ChannelId                      (Parm, ZeroConstructor)
// bool                           bIsMuted                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslXboxTeamManageWidget::TeamMemberMuteChanged(const struct FString& PlayerId, const struct FString& ChannelId, bool bIsMuted)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24886);

	UTslXboxTeamManageWidget_TeamMemberMuteChanged_Params params;
	params.PlayerId = PlayerId;
	params.ChannelId = ChannelId;
	params.bIsMuted = bIsMuted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslXboxTeamManageWidget.ShowGamerCard
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            MemberNumber                   (Parm, ZeroConstructor, IsPlainOldData)

void UTslXboxTeamManageWidget::ShowGamerCard(int MemberNumber)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24884);

	UTslXboxTeamManageWidget_ShowGamerCard_Params params;
	params.MemberNumber = MemberNumber;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslXboxTeamManageWidget.GetTeamManageInfoWidgetBySlot
// (Final, Native, Public)
// Parameters:
// int                            SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// class UTslXboxTeamManageInfoWidget* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UTslXboxTeamManageInfoWidget* UTslXboxTeamManageWidget::GetTeamManageInfoWidgetBySlot(int SlotIndex)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24881);

	UTslXboxTeamManageWidget_GetTeamManageInfoWidgetBySlot_Params params;
	params.SlotIndex = SlotIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslXboxTeamManageWidget.GetTeamManageInfoWidgetByMemberNum
// (Final, Native, Public)
// Parameters:
// int                            MemberNum                      (Parm, ZeroConstructor, IsPlainOldData)
// class UTslXboxTeamManageInfoWidget* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UTslXboxTeamManageInfoWidget* UTslXboxTeamManageWidget::GetTeamManageInfoWidgetByMemberNum(int MemberNum)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24878);

	UTslXboxTeamManageWidget_GetTeamManageInfoWidgetByMemberNum_Params params;
	params.MemberNum = MemberNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.BluezoneGpsBaseWidget.UpdateBluezoneGpsWidget
// (Final, Native, Public, BlueprintCallable)

void UBluezoneGpsBaseWidget::UpdateBluezoneGpsWidget()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24896);

	UBluezoneGpsBaseWidget_UpdateBluezoneGpsWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.BluezoneGpsBaseWidget.OnNotifyNextGasIn
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector                 PoisonGasWarningPosition       (Parm, IsPlainOldData)
// float                          PoisonGasWarningRadius         (Parm, ZeroConstructor, IsPlainOldData)

void UBluezoneGpsBaseWidget::OnNotifyNextGasIn(const struct FVector& PoisonGasWarningPosition, float PoisonGasWarningRadius)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24893);

	UBluezoneGpsBaseWidget_OnNotifyNextGasIn_Params params;
	params.PoisonGasWarningPosition = PoisonGasWarningPosition;
	params.PoisonGasWarningRadius = PoisonGasWarningRadius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.EquipableItemIconBaseWidget.OnNoBagSpaceEvent
// (Final, Native, Public)

void UEquipableItemIconBaseWidget::OnNoBagSpaceEvent()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24922);

	UEquipableItemIconBaseWidget_OnNoBagSpaceEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.HudMainBaseWidget.OnInit_Widget
// (Event, Public, BlueprintEvent)
// Parameters:
// class ATslBaseHUD*             TslBaseHUD                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UHudMainBaseWidget::OnInit_Widget(class ATslBaseHUD* TslBaseHUD)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24945);

	UHudMainBaseWidget_OnInit_Widget_Params params;
	params.TslBaseHUD = TslBaseHUD;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.HudMainBaseWidget.OnInit_Replay
// (Event, Public, BlueprintEvent)
// Parameters:
// class ATslBaseHUD*             TslBaseHUD                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UHudMainBaseWidget::OnInit_Replay(class ATslBaseHUD* TslBaseHUD)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24942);

	UHudMainBaseWidget_OnInit_Replay_Params params;
	params.TslBaseHUD = TslBaseHUD;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.HudMainBaseWidget.OnInit_Input
// (Event, Public, BlueprintEvent)
// Parameters:
// class ATslBaseHUD*             TslBaseHUD                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UHudMainBaseWidget::OnInit_Input(class ATslBaseHUD* TslBaseHUD)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24939);

	UHudMainBaseWidget_OnInit_Input_Params params;
	params.TslBaseHUD = TslBaseHUD;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.HudMainBaseWidget.OnInit_Delegate
// (Event, Public, BlueprintEvent)
// Parameters:
// class ATslBaseHUD*             TslBaseHUD                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UHudMainBaseWidget::OnInit_Delegate(class ATslBaseHUD* TslBaseHUD)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24936);

	UHudMainBaseWidget_OnInit_Delegate_Params params;
	params.TslBaseHUD = TslBaseHUD;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.InteractionBaseWidget.OnNotifyInteractionItemChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bIsInteractEnable              (Parm, ZeroConstructor, IsPlainOldData)

void UInteractionBaseWidget::OnNotifyInteractionItemChanged(bool bIsInteractEnable)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24950);

	UInteractionBaseWidget_OnNotifyInteractionItemChanged_Params params;
	params.bIsInteractEnable = bIsInteractEnable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.KillCountBaseWidget.GetLastKillCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKillCountBaseWidget::GetLastKillCount()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24976);

	UKillCountBaseWidget_GetLastKillCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.LifeGaugeBaseWidget.OnNotifyHit
// (Final, Native, Protected)
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// EDamageTypeCategory            DamageType                     (Parm, ZeroConstructor, IsPlainOldData)

void ULifeGaugeBaseWidget::OnNotifyHit(float Damage, EDamageTypeCategory DamageType)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24988);

	ULifeGaugeBaseWidget_OnNotifyHit_Params params;
	params.Damage = Damage;
	params.DamageType = DamageType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LifeGaugeBaseWidget.OnNotifyHeal
// (Final, Native, Protected)
// Parameters:
// float                          StartHealth                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          GoalHealth                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaxHealth                      (Parm, ZeroConstructor, IsPlainOldData)

void ULifeGaugeBaseWidget::OnNotifyHeal(float StartHealth, float GoalHealth, float MaxHealth)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(24984);

	ULifeGaugeBaseWidget_OnNotifyHeal_Params params;
	params.StartHealth = StartHealth;
	params.GoalHealth = GoalHealth;
	params.MaxHealth = MaxHealth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LifeGaugeTemplateBaseWidget.Update
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Life                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaxLife                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIsGroggy                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          HealAmount                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDisableEffect                 (Parm, ZeroConstructor, IsPlainOldData)

void ULifeGaugeTemplateBaseWidget::Update(float Life, float MaxLife, bool bIsGroggy, float HealAmount, bool bDisableEffect)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25034);

	ULifeGaugeTemplateBaseWidget_Update_Params params;
	params.Life = Life;
	params.MaxLife = MaxLife;
	params.bIsGroggy = bIsGroggy;
	params.HealAmount = HealAmount;
	params.bDisableEffect = bDisableEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LifeGaugeTemplateBaseWidget.OnDestoryHealEffect
// (Final, Native, Public)
// Parameters:
// class ULifeGaugeEffectBaseWidget* HealEffect                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ULifeGaugeTemplateBaseWidget::OnDestoryHealEffect(class ULifeGaugeEffectBaseWidget* HealEffect)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25032);

	ULifeGaugeTemplateBaseWidget_OnDestoryHealEffect_Params params;
	params.HealEffect = HealEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.LifeGaugeTemplateBaseWidget.OnDestoryDamageEffect
// (Final, Native, Public)
// Parameters:
// class ULifeGaugeEffectBaseWidget* DamageEffect                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ULifeGaugeTemplateBaseWidget::OnDestoryDamageEffect(class ULifeGaugeEffectBaseWidget* DamageEffect)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25030);

	ULifeGaugeTemplateBaseWidget_OnDestoryDamageEffect_Params params;
	params.DamageEffect = DamageEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.MapCarePackageItemIconBaseWidget.OnButtonDown
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FGeometry               Geometry                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FPointerEvent           MouseEvent                     (ConstParm, Parm, OutParm, ReferenceParm)
// struct FEventReply             ReturnValue                    (Parm, OutParm, ReturnParm)

struct FEventReply UMapCarePackageItemIconBaseWidget::OnButtonDown(const struct FGeometry& Geometry, const struct FPointerEvent& MouseEvent)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25062);

	UMapCarePackageItemIconBaseWidget_OnButtonDown_Params params;
	params.Geometry = Geometry;
	params.MouseEvent = MouseEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.MapCharacterIconBaseWidget.OnButtonDown
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FGeometry               Geometry                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FPointerEvent           MouseEvent                     (ConstParm, Parm, OutParm, ReferenceParm)
// struct FEventReply             ReturnValue                    (Parm, OutParm, ReturnParm)

struct FEventReply UMapCharacterIconBaseWidget::OnButtonDown(const struct FGeometry& Geometry, const struct FPointerEvent& MouseEvent)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25070);

	UMapCharacterIconBaseWidget_OnButtonDown_Params params;
	params.Geometry = Geometry;
	params.MouseEvent = MouseEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.MapGridWidget.UpdateZoomAndWidgetSize
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// float                          Zoom                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               WidgetSize                     (Parm, IsPlainOldData)

void UMapGridWidget::UpdateZoomAndWidgetSize(float Zoom, const struct FVector2D& WidgetSize)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25168);

	UMapGridWidget_UpdateZoomAndWidgetSize_Params params;
	params.Zoom = Zoom;
	params.WidgetSize = WidgetSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.MapGridWidget.UpdateWidgetSize_UC
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D               WidgetSize                     (Parm, IsPlainOldData)

void UMapGridWidget::UpdateWidgetSize_UC(const struct FVector2D& WidgetSize)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25166);

	UMapGridWidget_UpdateWidgetSize_UC_Params params;
	params.WidgetSize = WidgetSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.MapGridWidget.UpdateReplicatedCharacterList
// (Final, Native, Public)

void UMapGridWidget::UpdateReplicatedCharacterList()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25165);

	UMapGridWidget_UpdateReplicatedCharacterList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.MapGridWidget.UpdateReplicatedCarePackageItemList
// (Final, Native, Public)

void UMapGridWidget::UpdateReplicatedCarePackageItemList()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25164);

	UMapGridWidget_UpdateReplicatedCarePackageItemList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.MapGridWidget.UpdateRectangleViewByWidgetSize
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D               WidgetSize                     (Parm, IsPlainOldData)

void UMapGridWidget::UpdateRectangleViewByWidgetSize(const struct FVector2D& WidgetSize)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25162);

	UMapGridWidget_UpdateRectangleViewByWidgetSize_Params params;
	params.WidgetSize = WidgetSize;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.MapGridWidget.UpdateRectangleView
// (Event, Public, BlueprintEvent)

void UMapGridWidget::UpdateRectangleView()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25161);

	UMapGridWidget_UpdateRectangleView_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.MapGridWidget.UCtoMC
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D               UC                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D UMapGridWidget::UCtoMC(const struct FVector2D& UC)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25158);

	UMapGridWidget_UCtoMC_Params params;
	params.UC = UC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.MapGridWidget.SetZoomLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          NewZoomLevel                   (Parm, ZeroConstructor, IsPlainOldData)

void UMapGridWidget::SetZoomLevel(float NewZoomLevel)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25156);

	UMapGridWidget_SetZoomLevel_Params params;
	params.NewZoomLevel = NewZoomLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.MapGridWidget.SetImageBrush
// (Event, Public, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic* NewMatInst                     (Parm, ZeroConstructor, IsPlainOldData)

void UMapGridWidget::SetImageBrush(class UMaterialInstanceDynamic* NewMatInst)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25154);

	UMapGridWidget_SetImageBrush_Params params;
	params.NewMatInst = NewMatInst;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.MapGridWidget.SetCharacterIconPositionAndRotation_UC
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D               Pos_UC                         (Parm, IsPlainOldData)
// float                          Angle                          (Parm, ZeroConstructor, IsPlainOldData)

void UMapGridWidget::SetCharacterIconPositionAndRotation_UC(const struct FVector2D& Pos_UC, float Angle)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25151);

	UMapGridWidget_SetCharacterIconPositionAndRotation_UC_Params params;
	params.Pos_UC = Pos_UC;
	params.Angle = Angle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.MapGridWidget.SetCenter_MC
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D               Center                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UMapGridWidget::SetCenter_MC(const struct FVector2D& Center)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25149);

	UMapGridWidget_SetCenter_MC_Params params;
	params.Center = Center;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.MapGridWidget.OnMapIconClicked
// (Final, Native, Public)
// Parameters:
// class UMapCharacterIconBaseWidget* MapIconWidget                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UMapGridWidget::OnMapIconClicked(class UMapCharacterIconBaseWidget* MapIconWidget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25147);

	UMapGridWidget_OnMapIconClicked_Params params;
	params.MapIconWidget = MapIconWidget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.MapGridWidget.OnMapCarePackageItemIconClicked
// (Final, Native, Public)
// Parameters:
// class UMapCarePackageItemIconBaseWidget* MapIconWidget                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UMapGridWidget::OnMapCarePackageItemIconClicked(class UMapCarePackageItemIconBaseWidget* MapIconWidget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25145);

	UMapGridWidget_OnMapCarePackageItemIconClicked_Params params;
	params.MapIconWidget = MapIconWidget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.MapGridWidget.OnGotoTimelineDone
// (Final, Native, Private)

void UMapGridWidget::OnGotoTimelineDone()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25144);

	UMapGridWidget_OnGotoTimelineDone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.MapGridWidget.MCtoUC
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D               MapCoord                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D UMapGridWidget::MCtoUC(const struct FVector2D& MapCoord)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25141);

	UMapGridWidget_MCtoUC_Params params;
	params.MapCoord = MapCoord;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.MapGridWidget.IsMouseInMarker
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UMapGridWidget::IsMouseInMarker()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25139);

	UMapGridWidget_IsMouseInMarker_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.MapGridWidget.GetZoomLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UMapGridWidget::GetZoomLevel()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25137);

	UMapGridWidget_GetZoomLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.MapGridWidget.GetWidgetSize
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D UMapGridWidget::GetWidgetSize()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25135);

	UMapGridWidget_GetWidgetSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.MapGridWidget.GetWidgetPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D UMapGridWidget::GetWidgetPosition()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25133);

	UMapGridWidget_GetWidgetPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.MapGridWidget.GetScreenOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D UMapGridWidget::GetScreenOffset()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25131);

	UMapGridWidget_GetScreenOffset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.MapGridWidget.GetMapImageWigetSizeAndImageOffset
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D               WidgetSize                     (Parm, OutParm, IsPlainOldData)
// struct FVector2D               ImageOffset                    (Parm, OutParm, IsPlainOldData)

void UMapGridWidget::GetMapImageWigetSizeAndImageOffset(struct FVector2D* WidgetSize, struct FVector2D* ImageOffset)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25128);

	UMapGridWidget_GetMapImageWigetSizeAndImageOffset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (WidgetSize != nullptr)
		*WidgetSize = params.WidgetSize;
	if (ImageOffset != nullptr)
		*ImageOffset = params.ImageOffset;
}


// Function TslGame.MapGridWidget.GetLocalMousePosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D UMapGridWidget::GetLocalMousePosition()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25126);

	UMapGridWidget_GetLocalMousePosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.MapGridWidget.GetCharacterGridVertical
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UMapGridWidget::GetCharacterGridVertical()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25124);

	UMapGridWidget_GetCharacterGridVertical_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.MapGridWidget.GetCharacterGridTextHorizental
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UMapGridWidget::GetCharacterGridTextHorizental()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25122);

	UMapGridWidget_GetCharacterGridTextHorizental_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.MapGridWidget.GetAlignment
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D UMapGridWidget::GetAlignment()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25120);

	UMapGridWidget_GetAlignment_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.MapGridWidget.DrawRedZone_UC
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector2D               Center_UC                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          Radius_UC                      (Parm, ZeroConstructor, IsPlainOldData)

void UMapGridWidget::DrawRedZone_UC(const struct FVector2D& Center_UC, float Radius_UC)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25117);

	UMapGridWidget_DrawRedZone_UC_Params params;
	params.Center_UC = Center_UC;
	params.Radius_UC = Radius_UC;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.MapGridWidget.DrawMarker_UC
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector2D               MarkerCenter_UC                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UMapGridWidget::DrawMarker_UC(const struct FVector2D& MarkerCenter_UC)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25115);

	UMapGridWidget_DrawMarker_UC_Params params;
	params.MarkerCenter_UC = MarkerCenter_UC;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.MapGridWidget.CursorUCtoCenterMC
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector2D               UC                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector2D               Offest_MC                      (Parm, OutParm, IsPlainOldData)
// bool                           bUpdate                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UMapGridWidget::CursorUCtoCenterMC(const struct FVector2D& UC, struct FVector2D* Offest_MC, bool* bUpdate)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25111);

	UMapGridWidget_CursorUCtoCenterMC_Params params;
	params.UC = UC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Offest_MC != nullptr)
		*Offest_MC = params.Offest_MC;
	if (bUpdate != nullptr)
		*bUpdate = params.bUpdate;
}


// Function TslGame.MapGridWidget.ClampPositionByWidgetSize_UC
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector2D               Positon                        (Parm, IsPlainOldData)
// struct FVector2D               WidgetSize                     (Parm, IsPlainOldData)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D UMapGridWidget::ClampPositionByWidgetSize_UC(const struct FVector2D& Positon, const struct FVector2D& WidgetSize)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25107);

	UMapGridWidget_ClampPositionByWidgetSize_UC_Params params;
	params.Positon = Positon;
	params.WidgetSize = WidgetSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.MapGridWidget.ClampPosition_UC
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector2D               Positon                        (Parm, IsPlainOldData)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D UMapGridWidget::ClampPosition_UC(const struct FVector2D& Positon)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25104);

	UMapGridWidget_ClampPosition_UC_Params params;
	params.Positon = Positon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.MapGridWidget.AddCenter_UC
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D               Offset_UC                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UMapGridWidget::AddCenter_UC(const struct FVector2D& Offset_UC)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25102);

	UMapGridWidget_AddCenter_UC_Params params;
	params.Offset_UC = Offset_UC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TeamMarkWidget.InitializeTeamMarkGrid
// (Final, Native, Public, BlueprintCallable)

void UTeamMarkWidget::InitializeTeamMarkGrid()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25251);

	UTeamMarkWidget_InitializeTeamMarkGrid_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TeamOverallKillCountBaseWidget.GetLastTeamOverallKillCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UTeamOverallKillCountBaseWidget::GetLastTeamOverallKillCount()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25281);

	UTeamOverallKillCountBaseWidget_GetLastTeamOverallKillCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslAdaptiveCrosshairWidget.SetShowCrosshairWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void UTslAdaptiveCrosshairWidget::SetShowCrosshairWidget(bool bShow)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25301);

	UTslAdaptiveCrosshairWidget_SetShowCrosshairWidget_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAdaptiveCrosshairWidget.SetCenterCrosshairVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslAdaptiveCrosshairWidget::SetCenterCrosshairVisibility(bool bVisible)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25299);

	UTslAdaptiveCrosshairWidget_SetCenterCrosshairVisibility_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAdaptiveCrosshairWidget.SetCenterCrosshairDeviation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InDeviation                    (Parm, ZeroConstructor, IsPlainOldData)

void UTslAdaptiveCrosshairWidget::SetCenterCrosshairDeviation(float InDeviation)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25297);

	UTslAdaptiveCrosshairWidget_SetCenterCrosshairDeviation_Params params;
	params.InDeviation = InDeviation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAdaptiveCrosshairWidget.SetCenterCrosshairClass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EWeaponClass                   InWeaponClass                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bHasWeapon                     (Parm, ZeroConstructor, IsPlainOldData)

void UTslAdaptiveCrosshairWidget::SetCenterCrosshairClass(EWeaponClass InWeaponClass, bool bHasWeapon)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25293);

	UTslAdaptiveCrosshairWidget_SetCenterCrosshairClass_Params params;
	params.InWeaponClass = InWeaponClass;
	params.bHasWeapon = bHasWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAdaptiveCrosshairWidget.SetAdaptiveCrosshairVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslAdaptiveCrosshairWidget::SetAdaptiveCrosshairVisibility(bool bVisible)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25291);

	UTslAdaptiveCrosshairWidget_SetAdaptiveCrosshairVisibility_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAdaptiveCrosshairWidget.SetAdaptiveCrosshairPosition
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D               ScreenPosition                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          Distance                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslAdaptiveCrosshairWidget::SetAdaptiveCrosshairPosition(const struct FVector2D& ScreenPosition, float Distance)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25288);

	UTslAdaptiveCrosshairWidget_SetAdaptiveCrosshairPosition_Params params;
	params.ScreenPosition = ScreenPosition;
	params.Distance = Distance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAdaptiveCrosshairWidget.HandleGameUserSettingApplied
// (Final, Native, Public)

void UTslAdaptiveCrosshairWidget::HandleGameUserSettingApplied()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25287);

	UTslAdaptiveCrosshairWidget_HandleGameUserSettingApplied_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslAdaptiveCrosshairWidget.DecideAdaptiveCrosshairColor
// (Final, Native, Public, BlueprintCallable)

void UTslAdaptiveCrosshairWidget::DecideAdaptiveCrosshairColor()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25286);

	UTslAdaptiveCrosshairWidget_DecideAdaptiveCrosshairColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslBaseOptionWidget.OnReset
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UTslBaseOptionWidget::OnReset()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25353);

	UTslBaseOptionWidget_OnReset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslBaseOptionWidget.OnDefault
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UTslBaseOptionWidget::OnDefault()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25352);

	UTslBaseOptionWidget_OnDefault_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslBaseOptionWidget.OnApply
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UTslBaseOptionWidget::OnApply()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25351);

	UTslBaseOptionWidget_OnApply_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslBaseOptionWidget.IsKeyUp
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslBaseOptionWidget::IsKeyUp()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25349);

	UTslBaseOptionWidget_IsKeyUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslBaseOptionWidget.IsEnableApply
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslBaseOptionWidget::IsEnableApply()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25347);

	UTslBaseOptionWidget_IsEnableApply_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslBaseOptionWidget.IsChanged
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslBaseOptionWidget::IsChanged()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25345);

	UTslBaseOptionWidget_IsChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslKeyDisplayWidget.TransferInputEvent
// (Final, Native, Public)
// Parameters:
// struct FTslInputKey            TslInputKey                    (Parm)

void UTslKeyDisplayWidget::TransferInputEvent(const struct FTslInputKey& TslInputKey)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25364);

	UTslKeyDisplayWidget_TransferInputEvent_Params params;
	params.TslInputKey = TslInputKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslKeyDisplayWidget.SetupKeyDisplayWidget
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   InInputName                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FText                   InDisplayName                  (ConstParm, Parm, OutParm, ReferenceParm)
// struct FName                   InCategoryName                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           InbAxisInput                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          InAxisScale                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           InbGamepad                     (Parm, ZeroConstructor, IsPlainOldData)

void UTslKeyDisplayWidget::SetupKeyDisplayWidget(const struct FName& InInputName, const struct FText& InDisplayName, const struct FName& InCategoryName, bool InbAxisInput, float InAxisScale, bool InbGamepad)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25357);

	UTslKeyDisplayWidget_SetupKeyDisplayWidget_Params params;
	params.InInputName = InInputName;
	params.InDisplayName = InDisplayName;
	params.InCategoryName = InCategoryName;
	params.InbAxisInput = InbAxisInput;
	params.InAxisScale = InAxisScale;
	params.InbGamepad = InbGamepad;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslKeyDisplayWidget.InitializeKeyDisplayWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bDefault                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslKeyDisplayWidget::InitializeKeyDisplayWidget(bool bDefault)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25355);

	UTslKeyDisplayWidget_InitializeKeyDisplayWidget_Params params;
	params.bDefault = bDefault;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslKeyDisplayWidget.ApplyKey
// (Final, Native, Public, BlueprintCallable)

void UTslKeyDisplayWidget::ApplyKey()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25354);

	UTslKeyDisplayWidget_ApplyKey_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslKeyOptionWidget.OnKeyChanged
// (Final, Native, Private)
// Parameters:
// class UTslKeyDisplayWidget*    InKeyDisplayWidget             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FTslInputKey            InInputedKey                   (Parm)

void UTslKeyOptionWidget::OnKeyChanged(class UTslKeyDisplayWidget* InKeyDisplayWidget, const struct FTslInputKey& InInputedKey)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25378);

	UTslKeyOptionWidget_OnKeyChanged_Params params;
	params.InKeyDisplayWidget = InKeyDisplayWidget;
	params.InInputedKey = InInputedKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslKeyOptionWidget.InitializeKeyAndMouseSetting
// (Final, Native, Public)

void UTslKeyOptionWidget::InitializeKeyAndMouseSetting()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25377);

	UTslKeyOptionWidget_InitializeKeyAndMouseSetting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslKeySettingWidget.TransferInputEvent
// (Final, Native, Public)
// Parameters:
// class UTslKeyDisplayWidget*    KeyDisplayWidget               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FTslInputKey            TslInputKey                    (Parm)

void UTslKeySettingWidget::TransferInputEvent(class UTslKeyDisplayWidget* KeyDisplayWidget, const struct FTslInputKey& TslInputKey)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25396);

	UTslKeySettingWidget_TransferInputEvent_Params params;
	params.KeyDisplayWidget = KeyDisplayWidget;
	params.TslInputKey = TslInputKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslKeySettingWidget.StartupKeySettingWidget
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   InCategoryName                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FText                   InDisplayText                  (ConstParm, Parm, OutParm, ReferenceParm)

void UTslKeySettingWidget::StartupKeySettingWidget(const struct FName& InCategoryName, const struct FText& InDisplayText)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25393);

	UTslKeySettingWidget_StartupKeySettingWidget_Params params;
	params.InCategoryName = InCategoryName;
	params.InDisplayText = InDisplayText;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslKeySettingWidget.SetToDefault
// (Final, Native, Public, BlueprintCallable)

void UTslKeySettingWidget::SetToDefault()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25392);

	UTslKeySettingWidget_SetToDefault_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslKeySettingWidget.InitializeKeySettingWidget
// (Final, Native, Public, BlueprintCallable)

void UTslKeySettingWidget::InitializeKeySettingWidget()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25391);

	UTslKeySettingWidget_InitializeKeySettingWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslBreatheBarWidget.OnStartBuff
// (Final, Native, Protected)
// Parameters:
// struct FName                   BuffName                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bStart                         (Parm, ZeroConstructor, IsPlainOldData)

void UTslBreatheBarWidget::OnStartBuff(const struct FName& BuffName, bool bStart)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25420);

	UTslBreatheBarWidget_OnStartBuff_Params params;
	params.BuffName = BuffName;
	params.bStart = bStart;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslBuffIconListWidget.UpdateRunBuffIconVisibility
// (Final, Native, Public)
// Parameters:
// float                          InBoostPercentage              (Parm, ZeroConstructor, IsPlainOldData)

void UTslBuffIconListWidget::UpdateRunBuffIconVisibility(float InBoostPercentage)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25454);

	UTslBuffIconListWidget_UpdateRunBuffIconVisibility_Params params;
	params.InBoostPercentage = InBoostPercentage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslBuffIconListWidget.UpdateRunBuffIcon
// (Final, Native, Public)
// Parameters:
// float                          InBoostPercentage              (Parm, ZeroConstructor, IsPlainOldData)

void UTslBuffIconListWidget::UpdateRunBuffIcon(float InBoostPercentage)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25452);

	UTslBuffIconListWidget_UpdateRunBuffIcon_Params params;
	params.InBoostPercentage = InBoostPercentage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslBuffIconListWidget.UpdateHealBuffIconVisibility
// (Final, Native, Public)
// Parameters:
// float                          InBoostPercentage              (Parm, ZeroConstructor, IsPlainOldData)

void UTslBuffIconListWidget::UpdateHealBuffIconVisibility(float InBoostPercentage)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25450);

	UTslBuffIconListWidget_UpdateHealBuffIconVisibility_Params params;
	params.InBoostPercentage = InBoostPercentage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslBuffIconListWidget.UpdateHealBuffIcon
// (Final, Native, Public)
// Parameters:
// float                          InBoostPercentage              (Parm, ZeroConstructor, IsPlainOldData)

void UTslBuffIconListWidget::UpdateHealBuffIcon(float InBoostPercentage)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25448);

	UTslBuffIconListWidget_UpdateHealBuffIcon_Params params;
	params.InBoostPercentage = InBoostPercentage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslBuffIconListWidget.GetRunBuffIconOpacity
// (Final, Native, Public, HasDefaults, Const)
// Parameters:
// float                          InBoostPercentage              (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FLinearColor UTslBuffIconListWidget::GetRunBuffIconOpacity(float InBoostPercentage)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25445);

	UTslBuffIconListWidget_GetRunBuffIconOpacity_Params params;
	params.InBoostPercentage = InBoostPercentage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslBuffIconListWidget.GetHealBuffIconOpacity
// (Final, Native, Public, HasDefaults, Const)
// Parameters:
// float                          InBoostPercentage              (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FLinearColor UTslBuffIconListWidget::GetHealBuffIconOpacity(float InBoostPercentage)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25442);

	UTslBuffIconListWidget_GetHealBuffIconOpacity_Params params;
	params.InBoostPercentage = InBoostPercentage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslCastableItemIconWidget.GetCastableItemCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECastableItemType              InItemType                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UTslCastableItemIconWidget::GetCastableItemCount(ECastableItemType InItemType)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25462);

	UTslCastableItemIconWidget_GetCastableItemCount_Params params;
	params.InItemType = InItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslConfirmationDialogWidget.OnButtonClick
// (Final, Native, Public)
// Parameters:
// EPopupButtonID                 ButtonID                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslConfirmationDialogWidget::OnButtonClick(EPopupButtonID ButtonID)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25502);

	UTslConfirmationDialogWidget_OnButtonClick_Params params;
	params.ButtonID = ButtonID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslHealItemSelectorWidget.OnTapAction
// (Final, Native, Public)

void UTslHealItemSelectorWidget::OnTapAction()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25513);

	UTslHealItemSelectorWidget_OnTapAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslHealItemSelectorWidget.OnHoldAction
// (Final, Native, Public)

void UTslHealItemSelectorWidget::OnHoldAction()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25512);

	UTslHealItemSelectorWidget_OnHoldAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslHealItemSelectorWidget.OnHideWidget
// (Final, Native, Public)

void UTslHealItemSelectorWidget::OnHideWidget()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25511);

	UTslHealItemSelectorWidget_OnHideWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslHealItemSelectorWidget.NotifyHealItemSelectorInput
// (Final, Native, Public)
// Parameters:
// bool                           bPressed                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslHealItemSelectorWidget::NotifyHealItemSelectorInput(bool bPressed)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25509);

	UTslHealItemSelectorWidget_NotifyHealItemSelectorInput_Params params;
	params.bPressed = bPressed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslInventoryCapacityWidget.GetInventoryCached
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AInventory*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AInventory* UTslInventoryCapacityWidget::GetInventoryCached()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25557);

	UTslInventoryCapacityWidget_GetInventoryCached_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslInventoryCapacityWidget.GetFeedbackParamsFromVicinityItem
// (Final, Native, Protected, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          CurrMaxSpace                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          CurrSpace                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          ItemSpace                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          OutFeedbackStart               (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          OutFeedbackEnd                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           OutIsPositive                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UTslInventoryCapacityWidget::GetFeedbackParamsFromVicinityItem(float CurrMaxSpace, float CurrSpace, float ItemSpace, float* OutFeedbackStart, float* OutFeedbackEnd, bool* OutIsPositive)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25550);

	UTslInventoryCapacityWidget_GetFeedbackParamsFromVicinityItem_Params params;
	params.CurrMaxSpace = CurrMaxSpace;
	params.CurrSpace = CurrSpace;
	params.ItemSpace = ItemSpace;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutFeedbackStart != nullptr)
		*OutFeedbackStart = params.OutFeedbackStart;
	if (OutFeedbackEnd != nullptr)
		*OutFeedbackEnd = params.OutFeedbackEnd;
	if (OutIsPositive != nullptr)
		*OutIsPositive = params.OutIsPositive;
}


// Function TslGame.TslInventoryCapacityWidget.GetFeedbackParamsFromVicinityEquipment
// (Final, Native, Protected, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          CurrMaxSpace                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          CurrSpace                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UEquipableItem*          EquipableItem                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          OutFeedbackStart               (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          OutFeedbackEnd                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           OutIsPositive                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UTslInventoryCapacityWidget::GetFeedbackParamsFromVicinityEquipment(float CurrMaxSpace, float CurrSpace, class UEquipableItem* EquipableItem, float* OutFeedbackStart, float* OutFeedbackEnd, bool* OutIsPositive)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25543);

	UTslInventoryCapacityWidget_GetFeedbackParamsFromVicinityEquipment_Params params;
	params.CurrMaxSpace = CurrMaxSpace;
	params.CurrSpace = CurrSpace;
	params.EquipableItem = EquipableItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutFeedbackStart != nullptr)
		*OutFeedbackStart = params.OutFeedbackStart;
	if (OutFeedbackEnd != nullptr)
		*OutFeedbackEnd = params.OutFeedbackEnd;
	if (OutIsPositive != nullptr)
		*OutIsPositive = params.OutIsPositive;
}


// Function TslGame.TslInventoryCapacityWidget.GetFeedbackParamsFromInventoryItem
// (Final, Native, Protected, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          CurrMaxSpace                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          CurrSpace                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          ItemSpace                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          OutFeedbackStart               (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          OutFeedbackEnd                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           OutIsPositive                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UTslInventoryCapacityWidget::GetFeedbackParamsFromInventoryItem(float CurrMaxSpace, float CurrSpace, float ItemSpace, float* OutFeedbackStart, float* OutFeedbackEnd, bool* OutIsPositive)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25536);

	UTslInventoryCapacityWidget_GetFeedbackParamsFromInventoryItem_Params params;
	params.CurrMaxSpace = CurrMaxSpace;
	params.CurrSpace = CurrSpace;
	params.ItemSpace = ItemSpace;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutFeedbackStart != nullptr)
		*OutFeedbackStart = params.OutFeedbackStart;
	if (OutFeedbackEnd != nullptr)
		*OutFeedbackEnd = params.OutFeedbackEnd;
	if (OutIsPositive != nullptr)
		*OutIsPositive = params.OutIsPositive;
}


// Function TslGame.TslInventoryCapacityWidget.GetFeedbackParamsFromEquipmentSlot
// (Final, Native, Protected, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          CurrMaxSpace                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          CurrSpace                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UEquipableItem*          EquipableItem                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          OutFeedbackStart               (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          OutFeedbackEnd                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           OutIsPositive                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UTslInventoryCapacityWidget::GetFeedbackParamsFromEquipmentSlot(float CurrMaxSpace, float CurrSpace, class UEquipableItem* EquipableItem, float* OutFeedbackStart, float* OutFeedbackEnd, bool* OutIsPositive)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25529);

	UTslInventoryCapacityWidget_GetFeedbackParamsFromEquipmentSlot_Params params;
	params.CurrMaxSpace = CurrMaxSpace;
	params.CurrSpace = CurrSpace;
	params.EquipableItem = EquipableItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutFeedbackStart != nullptr)
		*OutFeedbackStart = params.OutFeedbackStart;
	if (OutFeedbackEnd != nullptr)
		*OutFeedbackEnd = params.OutFeedbackEnd;
	if (OutIsPositive != nullptr)
		*OutIsPositive = params.OutIsPositive;
}


// Function TslGame.TslInventoryCapacityWidget.GetCapacityParams
// (Final, Native, Protected, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          CurrMaxSpace                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          CurrSpace                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          OutCurrMaxSpaceStart           (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          OutCurrSpaceStart              (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UTslInventoryCapacityWidget::GetCapacityParams(float CurrMaxSpace, float CurrSpace, float* OutCurrMaxSpaceStart, float* OutCurrSpaceStart)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25524);

	UTslInventoryCapacityWidget_GetCapacityParams_Params params;
	params.CurrMaxSpace = CurrMaxSpace;
	params.CurrSpace = CurrSpace;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutCurrMaxSpaceStart != nullptr)
		*OutCurrMaxSpaceStart = params.OutCurrMaxSpaceStart;
	if (OutCurrSpaceStart != nullptr)
		*OutCurrSpaceStart = params.OutCurrSpaceStart;
}


// Function TslGame.TslKeyGuideWidget.ShowKeyGuideWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EKeyGuideShowCases             eShowCase                      (Parm, ZeroConstructor, IsPlainOldData)

void UTslKeyGuideWidget::ShowKeyGuideWidget(EKeyGuideShowCases eShowCase)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25562);

	UTslKeyGuideWidget_ShowKeyGuideWidget_Params params;
	params.eShowCase = eShowCase;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslKeyGuideWidget.HideKeyGuideWidget
// (Final, Native, Public, BlueprintCallable)

void UTslKeyGuideWidget::HideKeyGuideWidget()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25561);

	UTslKeyGuideWidget_HideKeyGuideWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslKeyReceiverWidget.UpdateKeyUp
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct FKey                    InKey                          (Parm)

void UTslKeyReceiverWidget::UpdateKeyUp(const struct FKey& InKey)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25581);

	UTslKeyReceiverWidget_UpdateKeyUp_Params params;
	params.InKey = InKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslKeyReceiverWidget.UpdateKeyDown
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct FKey                    InKey                          (Parm)

void UTslKeyReceiverWidget::UpdateKeyDown(const struct FKey& InKey)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25579);

	UTslKeyReceiverWidget_UpdateKeyDown_Params params;
	params.InKey = InKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslKeyReceiverWidget.KeyUp
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct FKey                    InKey                          (Parm)

void UTslKeyReceiverWidget::KeyUp(const struct FKey& InKey)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25577);

	UTslKeyReceiverWidget_KeyUp_Params params;
	params.InKey = InKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslKeyReceiverWidget.KeyDown
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct FKey                    InKey                          (Parm)

void UTslKeyReceiverWidget::KeyDown(const struct FKey& InKey)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25575);

	UTslKeyReceiverWidget_KeyDown_Params params;
	params.InKey = InKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslKeyReceiverWidget.IsInputKeyDown
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslKeyReceiverWidget::IsInputKeyDown()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25573);

	UTslKeyReceiverWidget_IsInputKeyDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslKeyReceiverWidget.GetLastDownedKeyName
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UTslKeyReceiverWidget::GetLastDownedKeyName()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25571);

	UTslKeyReceiverWidget_GetLastDownedKeyName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslKillMessageListWidget.UpdateMessageListWidget
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UTslKillMessageListWidget::UpdateMessageListWidget()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25601);

	UTslKillMessageListWidget_UpdateMessageListWidget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslKillMessageListWidget.OnVanishAnimationFinished
// (Final, Native, Public)
// Parameters:
// class UWidget*                 Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UTslKillMessageListWidget::OnVanishAnimationFinished(class UWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25599);

	UTslKillMessageListWidget_OnVanishAnimationFinished_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslKillMessageListWidget.EnqueueDeathMessage
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FDeathMessage           DeathMessage                   (ConstParm, Parm, OutParm, ReferenceParm)

void UTslKillMessageListWidget::EnqueueDeathMessage(const struct FDeathMessage& DeathMessage)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25597);

	UTslKillMessageListWidget_EnqueueDeathMessage_Params params;
	params.DeathMessage = DeathMessage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslKillMessageListWidget.DequeueDeathMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                 Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UTslKillMessageListWidget::DequeueDeathMessage(class UWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25595);

	UTslKillMessageListWidget_DequeueDeathMessage_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslKillMessageWidget.SetVanishTimer
// (Final, Native, Public)
// Parameters:
// float                          TimeDelay                      (Parm, ZeroConstructor, IsPlainOldData)

void UTslKillMessageWidget::SetVanishTimer(float TimeDelay)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25619);

	UTslKillMessageWidget_SetVanishTimer_Params params;
	params.TimeDelay = TimeDelay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslKillMessageWidget.SetDeathMessage
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FDeathMessage           InDeathMessage                 (ConstParm, Parm, OutParm, ReferenceParm)

void UTslKillMessageWidget::SetDeathMessage(const struct FDeathMessage& InDeathMessage)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25617);

	UTslKillMessageWidget_SetDeathMessage_Params params;
	params.InDeathMessage = InDeathMessage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslKillMessageWidget.PlayVanishAnimation
// (Final, Native, Public)

void UTslKillMessageWidget::PlayVanishAnimation()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25616);

	UTslKillMessageWidget_PlayVanishAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslKillMessageWidget.GetTextureFromDamageTypeCategory
// (Final, Native, Protected, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EDamageTypeCategory            InDamageTypeCategory           (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture*                OutTexture                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          OutRatio                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UTslKillMessageWidget::GetTextureFromDamageTypeCategory(EDamageTypeCategory InDamageTypeCategory, class UTexture** OutTexture, float* OutRatio)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25611);

	UTslKillMessageWidget_GetTextureFromDamageTypeCategory_Params params;
	params.InDamageTypeCategory = InDamageTypeCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutTexture != nullptr)
		*OutTexture = params.OutTexture;
	if (OutRatio != nullptr)
		*OutRatio = params.OutRatio;
}


// Function TslGame.TslKillMessageWidget.GetTextureFromConditionOfDeathCategory
// (Final, Native, Protected, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EConditionOfDeath              InConditionOfDeathCategory     (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture*                OutTexture                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          OutRatio                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UTslKillMessageWidget::GetTextureFromConditionOfDeathCategory(EConditionOfDeath InConditionOfDeathCategory, class UTexture** OutTexture, float* OutRatio)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25606);

	UTslKillMessageWidget_GetTextureFromConditionOfDeathCategory_Params params;
	params.InConditionOfDeathCategory = InConditionOfDeathCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutTexture != nullptr)
		*OutTexture = params.OutTexture;
	if (OutRatio != nullptr)
		*OutRatio = params.OutRatio;
}


// Function TslGame.TslLobbyNameTagWidget.UpdateWidgetsVisibilities
// (Final, Native, Public, BlueprintCallable)

void UTslLobbyNameTagWidget::UpdateWidgetsVisibilities()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25645);

	UTslLobbyNameTagWidget_UpdateWidgetsVisibilities_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslLobbyNameTagWidget.SetSpeaking
// (Final, Native, Private)
// Parameters:
// bool                           InbSpeaking                    (Parm, ZeroConstructor, IsPlainOldData)

void UTslLobbyNameTagWidget::SetSpeaking(bool InbSpeaking)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25643);

	UTslLobbyNameTagWidget_SetSpeaking_Params params;
	params.InbSpeaking = InbSpeaking;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslLobbyNameTagWidget.SetReady
// (Final, Native, Private)
// Parameters:
// bool                           InbReady                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslLobbyNameTagWidget::SetReady(bool InbReady)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25641);

	UTslLobbyNameTagWidget_SetReady_Params params;
	params.InbReady = InbReady;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslLobbyNameTagWidget.SetNickName
// (Final, Native, Private)
// Parameters:
// struct FString                 InNickName                     (Parm, ZeroConstructor)

void UTslLobbyNameTagWidget::SetNickName(const struct FString& InNickName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25639);

	UTslLobbyNameTagWidget_SetNickName_Params params;
	params.InNickName = InNickName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslLobbyNameTagWidget.SetHost
// (Final, Native, Private)
// Parameters:
// bool                           InbHost                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslLobbyNameTagWidget::SetHost(bool InbHost)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25637);

	UTslLobbyNameTagWidget_SetHost_Params params;
	params.InbHost = InbHost;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslLobbyNameTagWidget.SetBinding
// (Final, Native, Private)

void UTslLobbyNameTagWidget::SetBinding()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25636);

	UTslLobbyNameTagWidget_SetBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslLobbyNameTagWidget.OnVoiceChatUpdated
// (Final, Native, Public)
// Parameters:
// struct FString                 InUniqueId                     (Parm, ZeroConstructor)
// bool                           InbTeamChannel                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           InbSpeaking                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          InEnergy                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslLobbyNameTagWidget::OnVoiceChatUpdated(const struct FString& InUniqueId, bool InbTeamChannel, bool InbSpeaking, float InEnergy)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25631);

	UTslLobbyNameTagWidget_OnVoiceChatUpdated_Params params;
	params.InUniqueId = InUniqueId;
	params.InbTeamChannel = InbTeamChannel;
	params.InbSpeaking = InbSpeaking;
	params.InEnergy = InEnergy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslLobbyNameTagWidget.IsAlone
// (Final, Native, Private, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslLobbyNameTagWidget::IsAlone()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25629);

	UTslLobbyNameTagWidget_IsAlone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslLobbyNameTagWidget.InitWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 InNickName                     (Parm, ZeroConstructor)

void UTslLobbyNameTagWidget::InitWidget(const struct FString& InNickName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25627);

	UTslLobbyNameTagWidget_InitWidget_Params params;
	params.InNickName = InNickName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslTeamInfoWidget.UpdateVoiceImage
// (Final, Native, Private)

void UTslTeamInfoWidget::UpdateVoiceImage()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25719);

	UTslTeamInfoWidget_UpdateVoiceImage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslTeamInfoWidget.UpdateVivoxChat
// (Final, Native, Private)
// Parameters:
// struct FString                 UniqueId                       (Parm, ZeroConstructor)
// bool                           bIsTeamChannel                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           InbSpeaking                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          InMeterEnergy                  (Parm, ZeroConstructor, IsPlainOldData)

void UTslTeamInfoWidget::UpdateVivoxChat(const struct FString& UniqueId, bool bIsTeamChannel, bool InbSpeaking, float InMeterEnergy)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25714);

	UTslTeamInfoWidget_UpdateVivoxChat_Params params;
	params.UniqueId = UniqueId;
	params.bIsTeamChannel = bIsTeamChannel;
	params.InbSpeaking = InbSpeaking;
	params.InMeterEnergy = InMeterEnergy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslTeamInfoWidget.UpdateTeamMemberName
// (Final, Native, Private)

void UTslTeamInfoWidget::UpdateTeamMemberName()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25713);

	UTslTeamInfoWidget_UpdateTeamMemberName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslTeamInfoWidget.UpdateTeamMemberIcon
// (Final, Native, Private)

void UTslTeamInfoWidget::UpdateTeamMemberIcon()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25712);

	UTslTeamInfoWidget_UpdateTeamMemberIcon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslTeamInfoWidget.UpdateTeamMemberColor
// (Final, Native, Private)

void UTslTeamInfoWidget::UpdateTeamMemberColor()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25711);

	UTslTeamInfoWidget_UpdateTeamMemberColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslTeamInfoWidget.UpdateTeamMarkerBorder
// (Final, Native, Private)

void UTslTeamInfoWidget::UpdateTeamMarkerBorder()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25710);

	UTslTeamInfoWidget_UpdateTeamMarkerBorder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslTeamInfoWidget.UpdateTeamMarker
// (Final, Native, Private)

void UTslTeamInfoWidget::UpdateTeamMarker()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25709);

	UTslTeamInfoWidget_UpdateTeamMarker_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslTeamInfoWidget.UpdateTeamInfoIcon
// (Final, Native, Private)

void UTslTeamInfoWidget::UpdateTeamInfoIcon()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25708);

	UTslTeamInfoWidget_UpdateTeamInfoIcon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslTeamInfoWidget.UpdateTeamInfoArea
// (Final, Native, Private)

void UTslTeamInfoWidget::UpdateTeamInfoArea()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25707);

	UTslTeamInfoWidget_UpdateTeamInfoArea_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslTeamInfoWidget.UpdatePlayerIcon
// (Final, Native, Private)

void UTslTeamInfoWidget::UpdatePlayerIcon()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25706);

	UTslTeamInfoWidget_UpdatePlayerIcon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslTeamInfoWidget.UpdateHealthGaugeAndVisibility
// (Final, Native, Private)

void UTslTeamInfoWidget::UpdateHealthGaugeAndVisibility()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25705);

	UTslTeamInfoWidget_UpdateHealthGaugeAndVisibility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslTeamInfoWidget.UpdateBoostGauge
// (Final, Native, Private)

void UTslTeamInfoWidget::UpdateBoostGauge()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25704);

	UTslTeamInfoWidget_UpdateBoostGauge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslTeamInfoWidget.SetTeam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ATeam*                   InTeam                         (Parm, ZeroConstructor, IsPlainOldData)

void UTslTeamInfoWidget::SetTeam(class ATeam* InTeam)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25702);

	UTslTeamInfoWidget_SetTeam_Params params;
	params.InTeam = InTeam;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslTeamInfoWidget.OnVoiceChat
// (Final, Native, Private)
// Parameters:
// bool                           InbSpeaking                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          InMeterEnergy                  (Parm, ZeroConstructor, IsPlainOldData)

void UTslTeamInfoWidget::OnVoiceChat(bool InbSpeaking, float InMeterEnergy)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25699);

	UTslTeamInfoWidget_OnVoiceChat_Params params;
	params.InbSpeaking = InbSpeaking;
	params.InMeterEnergy = InMeterEnergy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslTeamInfoWidget.OnParticipantRestrictionChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// class ATeam*                   Team                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 UniqueId                       (Parm, ZeroConstructor)
// bool                           bIsRestricted                  (Parm, ZeroConstructor, IsPlainOldData)

void UTslTeamInfoWidget::OnParticipantRestrictionChanged(class ATeam* Team, const struct FString& UniqueId, bool bIsRestricted)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25695);

	UTslTeamInfoWidget_OnParticipantRestrictionChanged_Params params;
	params.Team = Team;
	params.UniqueId = UniqueId;
	params.bIsRestricted = bIsRestricted;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslTeamInfoWidget.OnParticipantMuteChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// class ATeam*                   Team                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ParticipantId                  (Parm, ZeroConstructor)
// struct FString                 ChannelId                      (Parm, ZeroConstructor)
// bool                           bIsMuted                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslTeamInfoWidget::OnParticipantMuteChanged(class ATeam* Team, const struct FString& ParticipantId, const struct FString& ChannelId, bool bIsMuted)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25690);

	UTslTeamInfoWidget_OnParticipantMuteChanged_Params params;
	params.Team = Team;
	params.ParticipantId = ParticipantId;
	params.ChannelId = ChannelId;
	params.bIsMuted = bIsMuted;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslTeamInfoWidget.OnNativeParticipantRestrictionChanged
// (Final, Native, Private)
// Parameters:
// struct FString                 UniqueId                       (Parm, ZeroConstructor)
// bool                           bIsRestricted                  (Parm, ZeroConstructor, IsPlainOldData)

void UTslTeamInfoWidget::OnNativeParticipantRestrictionChanged(const struct FString& UniqueId, bool bIsRestricted)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25687);

	UTslTeamInfoWidget_OnNativeParticipantRestrictionChanged_Params params;
	params.UniqueId = UniqueId;
	params.bIsRestricted = bIsRestricted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslTeamInfoWidget.OnNativeParticipantMuteChanged
// (Final, Native, Private)
// Parameters:
// struct FString                 ParticipantId                  (Parm, ZeroConstructor)
// struct FString                 ChannelId                      (Parm, ZeroConstructor)
// bool                           bIsMuted                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslTeamInfoWidget::OnNativeParticipantMuteChanged(const struct FString& ParticipantId, const struct FString& ChannelId, bool bIsMuted)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25683);

	UTslTeamInfoWidget_OnNativeParticipantMuteChanged_Params params;
	params.ParticipantId = ParticipantId;
	params.ChannelId = ChannelId;
	params.bIsMuted = bIsMuted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslTeamInfoWidget.DecideTeamNameColor
// (Final, Native, Private)

void UTslTeamInfoWidget::DecideTeamNameColor()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25682);

	UTslTeamInfoWidget_DecideTeamNameColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslTeamInfoWidget.BindVoiceChatIfNeed
// (Final, Native, Private)

void UTslTeamInfoWidget::BindVoiceChatIfNeed()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25681);

	UTslTeamInfoWidget_BindVoiceChatIfNeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslXboxTeamManageInfoWidget.UpdateVoiceIcon
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                           InbVoiceMute                   (Parm, ZeroConstructor, IsPlainOldData)

void UTslXboxTeamManageInfoWidget::UpdateVoiceIcon(bool InbVoiceMute)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25747);

	UTslXboxTeamManageInfoWidget_UpdateVoiceIcon_Params params;
	params.InbVoiceMute = InbVoiceMute;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslXboxTeamManageInfoWidget.UpdateUserNameText
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FName                   InUserName                     (Parm, ZeroConstructor, IsPlainOldData)

void UTslXboxTeamManageInfoWidget::UpdateUserNameText(const struct FName& InUserName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25745);

	UTslXboxTeamManageInfoWidget_UpdateUserNameText_Params params;
	params.InUserName = InUserName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.WeaponSlotHudBaseWidget.OnNotifyWeaponUnarm
// (Final, Native, Public)
// Parameters:
// bool                           bIsUnarmed                     (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponSlotHudBaseWidget::OnNotifyWeaponUnarm(bool bIsUnarmed)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25828);

	UWeaponSlotHudBaseWidget_OnNotifyWeaponUnarm_Params params;
	params.bIsUnarmed = bIsUnarmed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.WeaponSlotHudBaseWidget.OnNotifyWeaponChange
// (Final, Native, Public)
// Parameters:
// int                            WeaponIndex                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponSlotHudBaseWidget::OnNotifyWeaponChange(int WeaponIndex, float Duration)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25825);

	UWeaponSlotHudBaseWidget_OnNotifyWeaponChange_Params params;
	params.WeaponIndex = WeaponIndex;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.WeaponSlotHudBaseWidget.OnNotifyWeaponArmed
// (Final, Native, Public)

void UWeaponSlotHudBaseWidget::OnNotifyWeaponArmed()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25824);

	UWeaponSlotHudBaseWidget_OnNotifyWeaponArmed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.WeaponSlotHudBaseWidget.OnMovingStarted
// (Final, Native, Public)

void UWeaponSlotHudBaseWidget::OnMovingStarted()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25823);

	UWeaponSlotHudBaseWidget_OnMovingStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.WeaponSlotHudBaseWidget.OnMovingFinished
// (Final, Native, Public)

void UWeaponSlotHudBaseWidget::OnMovingFinished()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25822);

	UWeaponSlotHudBaseWidget_OnMovingFinished_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleCommonComponent.SetVehicleHealth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          NewHealth                      (Parm, ZeroConstructor, IsPlainOldData)

void UTslVehicleCommonComponent::SetVehicleHealth(float NewHealth)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25899);

	UTslVehicleCommonComponent_SetVehicleHealth_Params params;
	params.NewHealth = NewHealth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleCommonComponent.SetVehicleFuelPercent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Percent                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslVehicleCommonComponent::SetVehicleFuelPercent(float Percent)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25897);

	UTslVehicleCommonComponent_SetVehicleFuelPercent_Params params;
	params.Percent = Percent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleCommonComponent.SetVehicleFuel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          NewFuel                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslVehicleCommonComponent::SetVehicleFuel(float NewFuel)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25895);

	UTslVehicleCommonComponent_SetVehicleFuel_Params params;
	params.NewFuel = NewFuel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleCommonComponent.Repair
// (Final, Native, Public, BlueprintCallable)

void UTslVehicleCommonComponent::Repair()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25894);

	UTslVehicleCommonComponent_Repair_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleCommonComponent.OnRep_Health
// (Final, Native, Private)
// Parameters:
// float                          LastHealth                     (Parm, ZeroConstructor, IsPlainOldData)

void UTslVehicleCommonComponent::OnRep_Health(float LastHealth)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25892);

	UTslVehicleCommonComponent_OnRep_Health_Params params;
	params.LastHealth = LastHealth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleCommonComponent.OnRep_Fuel
// (Final, Native, Private)
// Parameters:
// float                          LastFuel                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslVehicleCommonComponent::OnRep_Fuel(float LastFuel)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25890);

	UTslVehicleCommonComponent_OnRep_Fuel_Params params;
	params.LastFuel = LastFuel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleCommonComponent.OnRep_Dying
// (Final, Native, Private)

void UTslVehicleCommonComponent::OnRep_Dying()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25889);

	UTslVehicleCommonComponent_OnRep_Dying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleCommonComponent.OnRep_Broken
// (Final, Native, Private)

void UTslVehicleCommonComponent::OnRep_Broken()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25888);

	UTslVehicleCommonComponent_OnRep_Broken_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleCommonComponent.IsDying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslVehicleCommonComponent::IsDying()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25886);

	UTslVehicleCommonComponent_IsDying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslVehicleCommonComponent.IsBroken
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslVehicleCommonComponent::IsBroken()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25884);

	UTslVehicleCommonComponent_IsBroken_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslVehicleCommonComponent.GetVehicleUI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UTslVehicleCommonComponent::GetVehicleUI()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25882);

	UTslVehicleCommonComponent_GetVehicleUI_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslVehicleCommonComponent.GetVehicleHealthPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslVehicleCommonComponent::GetVehicleHealthPercent()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25880);

	UTslVehicleCommonComponent_GetVehicleHealthPercent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslVehicleCommonComponent.GetVehicleHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslVehicleCommonComponent::GetVehicleHealth()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25878);

	UTslVehicleCommonComponent_GetVehicleHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslVehicleCommonComponent.GetVehicleFuelPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslVehicleCommonComponent::GetVehicleFuelPercent()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25876);

	UTslVehicleCommonComponent_GetVehicleFuelPercent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslVehicleCommonComponent.GetVehicleFuel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslVehicleCommonComponent::GetVehicleFuel()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25874);

	UTslVehicleCommonComponent_GetVehicleFuel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslVehicleCommonComponent.GetVehicleBaseHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslVehicleCommonComponent::GetVehicleBaseHealth()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25872);

	UTslVehicleCommonComponent_GetVehicleBaseHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslVehicleCommonComponent.GetVehicleBaseFuel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslVehicleCommonComponent::GetVehicleBaseFuel()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25870);

	UTslVehicleCommonComponent_GetVehicleBaseFuel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslVehicleCommonComponent.CanIgnoreCharacterDamage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EDamageTypeCategory            DamageTypeCategory             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslVehicleCommonComponent::CanIgnoreCharacterDamage(EDamageTypeCategory DamageTypeCategory)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25866);

	UTslVehicleCommonComponent_CanIgnoreCharacterDamage_Params params;
	params.DamageTypeCategory = DamageTypeCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslVehicleCommonComponent.Break
// (Final, Native, Public, BlueprintCallable)

void UTslVehicleCommonComponent::Break()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25865);

	UTslVehicleCommonComponent_Break_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleCommonComponent.AddVehicleFuel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Delta                          (Parm, ZeroConstructor, IsPlainOldData)

void UTslVehicleCommonComponent::AddVehicleFuel(float Delta)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25863);

	UTslVehicleCommonComponent_AddVehicleFuel_Params params;
	params.Delta = Delta;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleEffectComponent.SetVehicleMaterialsToDestroyed
// (Final, Native, Public, BlueprintCallable)

void UTslVehicleEffectComponent::SetVehicleMaterialsToDestroyed()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25947);

	UTslVehicleEffectComponent_SetVehicleMaterialsToDestroyed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleEffectComponent.SetEngineSoundRTPC
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 RTPC                           (Parm, ZeroConstructor)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UTslVehicleEffectComponent::SetEngineSoundRTPC(const struct FString& RTPC, float Value)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25944);

	UTslVehicleEffectComponent_SetEngineSoundRTPC_Params params;
	params.RTPC = RTPC;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleEffectComponent.OnHit
// (Native, Event, Protected, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                  SelfActor                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 NormalImpulse                  (Parm, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UTslVehicleEffectComponent::OnHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25939);

	UTslVehicleEffectComponent_OnHit_Params params;
	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleEffectComponent.OnHealthChange
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                          CurrentHealth                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          LastHealth                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          HealthMax                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIsDying                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslVehicleEffectComponent::OnHealthChange(float CurrentHealth, float LastHealth, float HealthMax, bool bIsDying)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25934);

	UTslVehicleEffectComponent_OnHealthChange_Params params;
	params.CurrentHealth = CurrentHealth;
	params.LastHealth = LastHealth;
	params.HealthMax = HealthMax;
	params.bIsDying = bIsDying;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleEffectComponent.OnDestroyedImpactEffect
// (Final, Native, Private)
// Parameters:
// class AActor*                  DestroyedActor                 (Parm, ZeroConstructor, IsPlainOldData)

void UTslVehicleEffectComponent::OnDestroyedImpactEffect(class AActor* DestroyedActor)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25932);

	UTslVehicleEffectComponent_OnDestroyedImpactEffect_Params params;
	params.DestroyedActor = DestroyedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleEffectComponent.OnDeath
// (Native, Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// float                          KillingDamage                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class ATslPlayerState*         PlayerInstigator               (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void UTslVehicleEffectComponent::OnDeath(float KillingDamage, const struct FDamageEvent& DamageEvent, class ATslPlayerState* PlayerInstigator, class AActor* DamageCauser)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25927);

	UTslVehicleEffectComponent_OnDeath_Params params;
	params.KillingDamage = KillingDamage;
	params.DamageEvent = DamageEvent;
	params.PlayerInstigator = PlayerInstigator;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleEffectComponent.GetEngineSoundComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAkComponent*            ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UAkComponent* UTslVehicleEffectComponent::GetEngineSoundComponent()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25925);

	UTslVehicleEffectComponent_GetEngineSoundComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslVehicleEffectComponent.ApplyDestoyedMaterialWithDelay
// (Final, Native, Public, BlueprintCallable)

void UTslVehicleEffectComponent::ApplyDestoyedMaterialWithDelay()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(25924);

	UTslVehicleEffectComponent_ApplyDestoyedMaterialWithDelay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleHitComponent.OnSyncHit
// (Final, Native, Protected, HasOutParms, HasDefaults)
// Parameters:
// struct FVector                 NormalImpulse                  (Parm, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UTslVehicleHitComponent::OnSyncHit(const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26022);

	UTslVehicleHitComponent_OnSyncHit_Params params;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleHitComponent.OnHit
// (Native, Event, Protected, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                  SelfActor                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 NormalImpulse                  (Parm, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UTslVehicleHitComponent::OnHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26017);

	UTslVehicleHitComponent_OnHit_Params params;
	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleHitComponent.OnDeath
// (Final, Native, Private, HasOutParms)
// Parameters:
// float                          KillingDamage                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class ATslPlayerState*         PlayerInstigator               (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void UTslVehicleHitComponent::OnDeath(float KillingDamage, const struct FDamageEvent& DamageEvent, class ATslPlayerState* PlayerInstigator, class AActor* DamageCauser)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26012);

	UTslVehicleHitComponent_OnDeath_Params params;
	params.KillingDamage = KillingDamage;
	params.DamageEvent = DamageEvent;
	params.PlayerInstigator = PlayerInstigator;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleReactionInterface.OnImpactedByVehicle
// (Event, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 Velocity                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UTslVehicleReactionInterface::OnImpactedByVehicle(const struct FHitResult& Hit, const struct FVector& Velocity)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26061);

	UTslVehicleReactionInterface_OnImpactedByVehicle_Params params;
	params.Hit = Hit;
	params.Velocity = Velocity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleSeatComponent.TryToStabilize
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UTslVehicleSeatComponent::TryToStabilize()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26106);

	UTslVehicleSeatComponent_TryToStabilize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleSeatComponent.TryToRide
// (Native, Public, BlueprintCallable)
// Parameters:
// class ATslCharacter*           Rider                          (Parm, ZeroConstructor, IsPlainOldData)
// class UVehicleSeatInteractionComponent* Seat                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UTslVehicleSeatComponent::TryToRide(class ATslCharacter* Rider, class UVehicleSeatInteractionComponent* Seat)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26103);

	UTslVehicleSeatComponent_TryToRide_Params params;
	params.Rider = Rider;
	params.Seat = Seat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleSeatComponent.TryToLeave
// (Native, Public, BlueprintCallable)
// Parameters:
// class ATslCharacter*           Rider                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bForce                         (Parm, ZeroConstructor, IsPlainOldData)

void UTslVehicleSeatComponent::TryToLeave(class ATslCharacter* Rider, bool bForce)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26100);

	UTslVehicleSeatComponent_TryToLeave_Params params;
	params.Rider = Rider;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleSeatComponent.TryToFlip
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UTslVehicleSeatComponent::TryToFlip()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26099);

	UTslVehicleSeatComponent_TryToFlip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleSeatComponent.Ride
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ATslCharacter*           Rider                          (Parm, ZeroConstructor, IsPlainOldData)
// class UVehicleSeatInteractionComponent* Seat                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UTslVehicleSeatComponent::Ride(class ATslCharacter* Rider, class UVehicleSeatInteractionComponent* Seat)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26096);

	UTslVehicleSeatComponent_Ride_Params params;
	params.Rider = Rider;
	params.Seat = Seat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleSeatComponent.PostDriverRide
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UTslVehicleSeatComponent::PostDriverRide()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26095);

	UTslVehicleSeatComponent_PostDriverRide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleSeatComponent.PostDriverLeave
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UTslVehicleSeatComponent::PostDriverLeave()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26094);

	UTslVehicleSeatComponent_PostDriverLeave_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleSeatComponent.OnFuelChange
// (Final, Native, Private)
// Parameters:
// float                          CurrentFuel                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          LastFuel                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          FuelMax                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslVehicleSeatComponent::OnFuelChange(float CurrentFuel, float LastFuel, float FuelMax)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26090);

	UTslVehicleSeatComponent_OnFuelChange_Params params;
	params.CurrentFuel = CurrentFuel;
	params.LastFuel = LastFuel;
	params.FuelMax = FuelMax;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleSeatComponent.Leave
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ATslCharacter*           Rider                          (Parm, ZeroConstructor, IsPlainOldData)
// class UVehicleSeatInteractionComponent* Seat                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bForce                         (Parm, ZeroConstructor, IsPlainOldData)

void UTslVehicleSeatComponent::Leave(class ATslCharacter* Rider, class UVehicleSeatInteractionComponent* Seat, bool bForce)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26086);

	UTslVehicleSeatComponent_Leave_Params params;
	params.Rider = Rider;
	params.Seat = Seat;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleSeatComponent.KillAllRiders
// (Final, Native, Private, HasOutParms)
// Parameters:
// float                          KillingDamage                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class ATslPlayerState*         PlayerInstigator               (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void UTslVehicleSeatComponent::KillAllRiders(float KillingDamage, const struct FDamageEvent& DamageEvent, class ATslPlayerState* PlayerInstigator, class AActor* DamageCauser)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26081);

	UTslVehicleSeatComponent_KillAllRiders_Params params;
	params.KillingDamage = KillingDamage;
	params.DamageEvent = DamageEvent;
	params.PlayerInstigator = PlayerInstigator;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleSeatComponent.GetVehicleSeatIndex
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UVehicleSeatInteractionComponent* Seat                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UTslVehicleSeatComponent::GetVehicleSeatIndex(class UVehicleSeatInteractionComponent* Seat)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26078);

	UTslVehicleSeatComponent_GetVehicleSeatIndex_Params params;
	params.Seat = Seat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslVehicleSeatComponent.GetSeats
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UVehicleSeatInteractionComponent*> ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UVehicleSeatInteractionComponent*> UTslVehicleSeatComponent::GetSeats()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26075);

	UTslVehicleSeatComponent_GetSeats_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslVehicleSeatComponent.GetSeat
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            SeatIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// class UVehicleSeatInteractionComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UVehicleSeatInteractionComponent* UTslVehicleSeatComponent::GetSeat(int SeatIndex)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26072);

	UTslVehicleSeatComponent_GetSeat_Params params;
	params.SeatIndex = SeatIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslVehicleSeatComponent.GetRiders
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class ATslCharacter*>   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class ATslCharacter*> UTslVehicleSeatComponent::GetRiders()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26069);

	UTslVehicleSeatComponent_GetRiders_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslVehicleSeatComponent.GetLastDriver
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          LastDuration                   (Parm, ZeroConstructor, IsPlainOldData)
// class ATslCharacter*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslCharacter* UTslVehicleSeatComponent::GetLastDriver(float LastDuration)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26066);

	UTslVehicleSeatComponent_GetLastDriver_Params params;
	params.LastDuration = LastDuration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslVehicleSeatComponent.GetDriver
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslCharacter*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslCharacter* UTslVehicleSeatComponent::GetDriver()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26064);

	UTslVehicleSeatComponent_GetDriver_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslVehicleSyncComponent.SendServerMoveToClient
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// int                            InCorrectionId                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize100  ServerLocation                 (Parm)
// struct FVector_NetQuantize100  ServerLinearVelocity           (Parm)
// struct FVector_NetQuantizeNormal ServerRotator                  (Parm)
// struct FVector_NetQuantize100  ServerAngularVelocity          (Parm)
// bool                           bIsSnap                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslVehicleSyncComponent::SendServerMoveToClient(int InCorrectionId, const struct FVector_NetQuantize100& ServerLocation, const struct FVector_NetQuantize100& ServerLinearVelocity, const struct FVector_NetQuantizeNormal& ServerRotator, const struct FVector_NetQuantize100& ServerAngularVelocity, bool bIsSnap)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26166);

	UTslVehicleSyncComponent_SendServerMoveToClient_Params params;
	params.InCorrectionId = InCorrectionId;
	params.ServerLocation = ServerLocation;
	params.ServerLinearVelocity = ServerLinearVelocity;
	params.ServerRotator = ServerRotator;
	params.ServerAngularVelocity = ServerAngularVelocity;
	params.bIsSnap = bIsSnap;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleSyncComponent.SendClientMoveToServerUnreliably
// (Final, Net, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// int                            InCorrectionId                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize100  ClientLocation                 (Parm)
// struct FVector_NetQuantize100  ClientLinearVelocity           (Parm)
// struct FVector_NetQuantizeNormal ClientRotator                  (Parm)
// struct FVector_NetQuantize100  ClientAngularVelocity          (Parm)

void UTslVehicleSyncComponent::SendClientMoveToServerUnreliably(int InCorrectionId, const struct FVector_NetQuantize100& ClientLocation, const struct FVector_NetQuantize100& ClientLinearVelocity, const struct FVector_NetQuantizeNormal& ClientRotator, const struct FVector_NetQuantize100& ClientAngularVelocity)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26160);

	UTslVehicleSyncComponent_SendClientMoveToServerUnreliably_Params params;
	params.InCorrectionId = InCorrectionId;
	params.ClientLocation = ClientLocation;
	params.ClientLinearVelocity = ClientLinearVelocity;
	params.ClientRotator = ClientRotator;
	params.ClientAngularVelocity = ClientAngularVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleSyncComponent.SendClientMoveToServerReliably
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// int                            InCorrectionId                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize100  ClientLocation                 (Parm)
// struct FVector_NetQuantize100  ClientLinearVelocity           (Parm)
// struct FVector_NetQuantizeNormal ClientRotator                  (Parm)
// struct FVector_NetQuantize100  ClientAngularVelocity          (Parm)

void UTslVehicleSyncComponent::SendClientMoveToServerReliably(int InCorrectionId, const struct FVector_NetQuantize100& ClientLocation, const struct FVector_NetQuantize100& ClientLinearVelocity, const struct FVector_NetQuantizeNormal& ClientRotator, const struct FVector_NetQuantize100& ClientAngularVelocity)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26154);

	UTslVehicleSyncComponent_SendClientMoveToServerReliably_Params params;
	params.InCorrectionId = InCorrectionId;
	params.ClientLocation = ClientLocation;
	params.ClientLinearVelocity = ClientLinearVelocity;
	params.ClientRotator = ClientRotator;
	params.ClientAngularVelocity = ClientAngularVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleSyncComponent.SendClientHitToServerUnreliably
// (Final, Net, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// int                            InCorrectionId                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize100  ClientLocation                 (Parm)
// struct FVector_NetQuantize100  ClientLinearVelocity           (Parm)
// struct FVector_NetQuantizeNormal ClientRotator                  (Parm)
// struct FVector_NetQuantize100  ClientAngularVelocity          (Parm)
// struct FVector_NetQuantize100  NormalImpulse                  (Parm)
// struct FHitResult              Hit                            (Parm, IsPlainOldData)

void UTslVehicleSyncComponent::SendClientHitToServerUnreliably(int InCorrectionId, const struct FVector_NetQuantize100& ClientLocation, const struct FVector_NetQuantize100& ClientLinearVelocity, const struct FVector_NetQuantizeNormal& ClientRotator, const struct FVector_NetQuantize100& ClientAngularVelocity, const struct FVector_NetQuantize100& NormalImpulse, const struct FHitResult& Hit)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26146);

	UTslVehicleSyncComponent_SendClientHitToServerUnreliably_Params params;
	params.InCorrectionId = InCorrectionId;
	params.ClientLocation = ClientLocation;
	params.ClientLinearVelocity = ClientLinearVelocity;
	params.ClientRotator = ClientRotator;
	params.ClientAngularVelocity = ClientAngularVelocity;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleSyncComponent.SendClientHitToServerReliably
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// int                            InCorrectionId                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize100  ClientLocation                 (Parm)
// struct FVector_NetQuantize100  ClientLinearVelocity           (Parm)
// struct FVector_NetQuantizeNormal ClientRotator                  (Parm)
// struct FVector_NetQuantize100  ClientAngularVelocity          (Parm)
// struct FVector_NetQuantize100  NormalImpulse                  (Parm)
// struct FHitResult              Hit                            (Parm, IsPlainOldData)

void UTslVehicleSyncComponent::SendClientHitToServerReliably(int InCorrectionId, const struct FVector_NetQuantize100& ClientLocation, const struct FVector_NetQuantize100& ClientLinearVelocity, const struct FVector_NetQuantizeNormal& ClientRotator, const struct FVector_NetQuantize100& ClientAngularVelocity, const struct FVector_NetQuantize100& NormalImpulse, const struct FHitResult& Hit)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26138);

	UTslVehicleSyncComponent_SendClientHitToServerReliably_Params params;
	params.InCorrectionId = InCorrectionId;
	params.ClientLocation = ClientLocation;
	params.ClientLinearVelocity = ClientLinearVelocity;
	params.ClientRotator = ClientRotator;
	params.ClientAngularVelocity = ClientAngularVelocity;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleSyncComponent.OnHitAtServer
// (Final, Native, Private, HasOutParms, HasDefaults)
// Parameters:
// class AActor*                  SelfActor                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 NormalImpulse                  (Parm, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UTslVehicleSyncComponent::OnHitAtServer(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26133);

	UTslVehicleSyncComponent_OnHitAtServer_Params params;
	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleSyncComponent.OnHitAtClient
// (Final, Native, Private, HasOutParms, HasDefaults)
// Parameters:
// class AActor*                  SelfActor                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 NormalImpulse                  (Parm, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UTslVehicleSyncComponent::OnHitAtClient(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26128);

	UTslVehicleSyncComponent_OnHitAtClient_Params params;
	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslVehicleSyncComponent.OnDriverRide
// (Final, Native, Private)

void UTslVehicleSyncComponent::OnDriverRide()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26127);

	UTslVehicleSyncComponent_OnDriverRide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslViewTargetTempComponent.AddTempComponentWithDelegate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*         TempComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FScriptDelegate         DelegateToCall                 (Parm, ZeroConstructor)

void UTslViewTargetTempComponent::AddTempComponentWithDelegate(class USceneComponent* TempComponent, const struct FScriptDelegate& DelegateToCall)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26184);

	UTslViewTargetTempComponent_AddTempComponentWithDelegate_Params params;
	params.TempComponent = TempComponent;
	params.DelegateToCall = DelegateToCall;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslViewTargetTempComponent.AddTempComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*         TempComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UTslViewTargetTempComponent::AddTempComponent(class USceneComponent* TempComponent)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26182);

	UTslViewTargetTempComponent_AddTempComponent_Params params;
	params.TempComponent = TempComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Gun_Projectile.SimulateFire_BP
// (Native, Event, Public, BlueprintEvent)

void ATslWeapon_Gun_Projectile::SimulateFire_BP()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26189);

	ATslWeapon_Gun_Projectile_SimulateFire_BP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Trajectory.SimulateUnderwaterTrail
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// struct FVector                 SurfaceImpactPoint             (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 ShootDirection                 (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// float                          TravelDistance                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void ATslWeapon_Trajectory::SimulateUnderwaterTrail(const struct FVector& SurfaceImpactPoint, const struct FVector& ShootDirection, float TravelDistance)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26258);

	ATslWeapon_Trajectory_SimulateUnderwaterTrail_Params params;
	params.SurfaceImpactPoint = SurfaceImpactPoint;
	params.ShootDirection = ShootDirection;
	params.TravelDistance = TravelDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Trajectory.SimulateUnderwaterHit
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// struct FVector                 UnderwaterImpactPoint          (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 ShootOrigin                    (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ATslWeapon_Trajectory::SimulateUnderwaterHit(const struct FVector& UnderwaterImpactPoint, const struct FVector& ShootOrigin)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26255);

	ATslWeapon_Trajectory_SimulateUnderwaterHit_Params params;
	params.UnderwaterImpactPoint = UnderwaterImpactPoint;
	params.ShootOrigin = ShootOrigin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Trajectory.SimulateHit_UnReliable
// (Net, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// struct FHitResult              Impact                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 RelLocation                    (ConstParm, Parm, IsPlainOldData)

void ATslWeapon_Trajectory::SimulateHit_UnReliable(const struct FHitResult& Impact, const struct FVector& RelLocation)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26252);

	ATslWeapon_Trajectory_SimulateHit_UnReliable_Params params;
	params.Impact = Impact;
	params.RelLocation = RelLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Trajectory.SimulateHit_Reliable
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// struct FHitResult              Impact                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 RelLocation                    (ConstParm, Parm, IsPlainOldData)

void ATslWeapon_Trajectory::SimulateHit_Reliable(const struct FHitResult& Impact, const struct FVector& RelLocation)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26249);

	ATslWeapon_Trajectory_SimulateHit_Reliable_Params params;
	params.Impact = Impact;
	params.RelLocation = RelLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Trajectory.Simulate_CreateAmmoInstance
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// struct FVector                 ServerStartTrace               (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 Dir                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FAttackId               AttackId                       (ConstParm, Parm, ReferenceParm)

void ATslWeapon_Trajectory::Simulate_CreateAmmoInstance(const struct FVector& ServerStartTrace, const struct FVector& Dir, const struct FAttackId& AttackId)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26245);

	ATslWeapon_Trajectory_Simulate_CreateAmmoInstance_Params params;
	params.ServerStartTrace = ServerStartTrace;
	params.Dir = Dir;
	params.AttackId = AttackId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Trajectory.ServerWallCheckTest
// (Final, Net, NetReliable, Native, Event, Private, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 TraceStart                     (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 TraceEnd                       (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ATslWeapon_Trajectory::ServerWallCheckTest(const struct FVector& TraceStart, const struct FVector& TraceEnd)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26242);

	ATslWeapon_Trajectory_ServerWallCheckTest_Params params;
	params.TraceStart = TraceStart;
	params.TraceEnd = TraceEnd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Trajectory.ServerNotifyHit
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 ClientImpactLocation           (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 RelativeImpact                 (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// float                          HandOffsetValue                (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              Impact                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// TArray<uint32_t>               Checksums                      (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// struct FVector_NetQuantize     Origin                         (ConstParm, Parm, ReferenceParm)
// struct FVector                 TraceStart                     (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 PreLocation                    (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector_NetQuantizeNormal ShootDir                       (Parm)
// float                          TravelDistance                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FAttackId               AttackId                       (Parm)
// uint32_t                       HitSeq                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 RelLocation                    (ConstParm, Parm, IsPlainOldData)
// float                          SpeedLoss                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void ATslWeapon_Trajectory::ServerNotifyHit(const struct FVector& ClientImpactLocation, const struct FVector& RelativeImpact, float HandOffsetValue, const struct FHitResult& Impact, TArray<uint32_t> Checksums, const struct FVector_NetQuantize& Origin, const struct FVector& TraceStart, const struct FVector& PreLocation, const struct FVector_NetQuantizeNormal& ShootDir, float TravelDistance, const struct FAttackId& AttackId, uint32_t HitSeq, const struct FVector& RelLocation, float SpeedLoss)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26226);

	ATslWeapon_Trajectory_ServerNotifyHit_Params params;
	params.ClientImpactLocation = ClientImpactLocation;
	params.RelativeImpact = RelativeImpact;
	params.HandOffsetValue = HandOffsetValue;
	params.Impact = Impact;
	params.Checksums = Checksums;
	params.Origin = Origin;
	params.TraceStart = TraceStart;
	params.PreLocation = PreLocation;
	params.ShootDir = ShootDir;
	params.TravelDistance = TravelDistance;
	params.AttackId = AttackId;
	params.HitSeq = HitSeq;
	params.RelLocation = RelLocation;
	params.SpeedLoss = SpeedLoss;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Trajectory.ServerNotifyCrack
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class ATslCharacter*           TargetCharacter                (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize     LocationRelative               (Parm)
// float                          BulletVelocity                 (Parm, ZeroConstructor, IsPlainOldData)

void ATslWeapon_Trajectory::ServerNotifyCrack(class ATslCharacter* TargetCharacter, const struct FVector_NetQuantize& LocationRelative, float BulletVelocity)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26222);

	ATslWeapon_Trajectory_ServerNotifyCrack_Params params;
	params.TargetCharacter = TargetCharacter;
	params.LocationRelative = LocationRelative;
	params.BulletVelocity = BulletVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Trajectory.ServerNotifyAmmoSpawned
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 ServerStartTrace               (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 Dir                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FAttackId               AttackId                       (ConstParm, Parm, ReferenceParm)

void ATslWeapon_Trajectory::ServerNotifyAmmoSpawned(const struct FVector& ServerStartTrace, const struct FVector& Dir, const struct FAttackId& AttackId)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26218);

	ATslWeapon_Trajectory_ServerNotifyAmmoSpawned_Params params;
	params.ServerStartTrace = ServerStartTrace;
	params.Dir = Dir;
	params.AttackId = AttackId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Trajectory.ServerChecksumTest
// (Final, Net, NetReliable, Native, Event, Private, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 Location                       (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// TArray<uint32_t>               ClientChecksums                (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void ATslWeapon_Trajectory::ServerChecksumTest(const struct FVector& Location, TArray<uint32_t> ClientChecksums)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26214);

	ATslWeapon_Trajectory_ServerChecksumTest_Params params;
	params.Location = Location;
	params.ClientChecksums = ClientChecksums;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Trajectory.OnRep_WeaponSpread
// (Final, Native, Protected)
// Parameters:
// float                          LastWeaponSpread               (Parm, ZeroConstructor, IsPlainOldData)

void ATslWeapon_Trajectory::OnRep_WeaponSpread(float LastWeaponSpread)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26212);

	ATslWeapon_Trajectory_OnRep_WeaponSpread_Params params;
	params.LastWeaponSpread = LastWeaponSpread;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Trajectory.IsBulletInAir
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslWeapon_Trajectory::IsBulletInAir()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26210);

	ATslWeapon_Trajectory_IsBulletInAir_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Trajectory.GetTrajectoryConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTrajectoryWeaponData   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FTrajectoryWeaponData ATslWeapon_Trajectory::GetTrajectoryConfig()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26208);

	ATslWeapon_Trajectory_GetTrajectoryConfig_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Trajectory.GetRecoilInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRecoilInfo             ReturnValue                    (Parm, OutParm, ReturnParm)

struct FRecoilInfo ATslWeapon_Trajectory::GetRecoilInfo()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26206);

	ATslWeapon_Trajectory_GetRecoilInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Trajectory.GetCurrentStabilityVar
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslWeapon_Trajectory::GetCurrentStabilityVar()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26204);

	ATslWeapon_Trajectory_GetCurrentStabilityVar_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Trajectory.GetCurrentReoveryTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslWeapon_Trajectory::GetCurrentReoveryTarget()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26202);

	ATslWeapon_Trajectory_GetCurrentReoveryTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Trajectory.GetCurrentRecoilValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslWeapon_Trajectory::GetCurrentRecoilValue()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26200);

	ATslWeapon_Trajectory_GetCurrentRecoilValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Trajectory.GetCurrentRecoilTarget
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D ATslWeapon_Trajectory::GetCurrentRecoilTarget()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26198);

	ATslWeapon_Trajectory_GetCurrentRecoilTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Trajectory.GetBulletRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator ATslWeapon_Trajectory::GetBulletRotation()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26196);

	ATslWeapon_Trajectory_GetBulletRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Trajectory.GetBulletLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ATslWeapon_Trajectory::GetBulletLocation()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26194);

	ATslWeapon_Trajectory_GetBulletLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslWeapon_Trajectory.ClientWallCheckFail
// (Final, Net, NetReliable, Native, Event, Private, HasDefaults, NetClient)
// Parameters:
// struct FVector                 TraceStart                     (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 TraceEnd                       (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 Impact                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ATslWeapon_Trajectory::ClientWallCheckFail(const struct FVector& TraceStart, const struct FVector& TraceEnd, const struct FVector& Impact)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26190);

	ATslWeapon_Trajectory_ClientWallCheckFail_Params params;
	params.TraceStart = TraceStart;
	params.TraceEnd = TraceEnd;
	params.Impact = Impact;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Melee.ServerNotifyHit
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// TArray<float>                  AimSpeeds                      (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// TArray<struct FHitResult>      Impacts                        (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// struct FAttackId               AttackId                       (Parm)
// uint32_t                       HitSeq                         (Parm, ZeroConstructor, IsPlainOldData)

void ATslWeapon_Melee::ServerNotifyHit(TArray<float> AimSpeeds, TArray<struct FHitResult> Impacts, const struct FAttackId& AttackId, uint32_t HitSeq)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26291);

	ATslWeapon_Melee_ServerNotifyHit_Params params;
	params.AimSpeeds = AimSpeeds;
	params.Impacts = Impacts;
	params.AttackId = AttackId;
	params.HitSeq = HitSeq;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Melee.ServerAttack
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int                            AnimIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void ATslWeapon_Melee::ServerAttack(int AnimIndex)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26289);

	ATslWeapon_Melee_ServerAttack_Params params;
	params.AnimIndex = AnimIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Melee.OnMontageEnded
// (Final, Native, Public)
// Parameters:
// class UAnimMontage*            Montage                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInterrupted                   (Parm, ZeroConstructor, IsPlainOldData)

void ATslWeapon_Melee::OnMontageEnded(class UAnimMontage* Montage, bool bInterrupted)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26286);

	ATslWeapon_Melee_OnMontageEnded_Params params;
	params.Montage = Montage;
	params.bInterrupted = bInterrupted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Melee.OnAnimationNotify
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   NotifyName                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void ATslWeapon_Melee::OnAnimationNotify(const struct FName& NotifyName)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26284);

	ATslWeapon_Melee_OnAnimationNotify_Params params;
	params.NotifyName = NotifyName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Melee.ClientHit_Confirmed
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// struct FHitResult              Impact                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ATslWeapon_Melee::ClientHit_Confirmed(const struct FHitResult& Impact)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26282);

	ATslWeapon_Melee_ClientHit_Confirmed_Params params;
	params.Impact = Impact;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWeapon_Melee.ClientAttack
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// int                            AnimIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void ATslWeapon_Melee::ClientAttack(int AnimIndex)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26280);

	ATslWeapon_Melee_ClientAttack_Params params;
	params.AnimIndex = AnimIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslWebPopupInterface.ShowWebPopup
// (Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FWebPopupParam          Param                          (ConstParm, Parm, OutParm, ReferenceParm)

void UTslWebPopupInterface::ShowWebPopup(const struct FWebPopupParam& Param)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26309);

	UTslWebPopupInterface_ShowWebPopup_Params params;
	params.Param = Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslMotorbikeVehicle.VehicleHasDriver
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslMotorbikeVehicle::VehicleHasDriver()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26343);

	ATslMotorbikeVehicle_VehicleHasDriver_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslMotorbikeVehicle.SetAirControlR
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          inFloat                        (Parm, ZeroConstructor, IsPlainOldData)

void ATslMotorbikeVehicle::SetAirControlR(float inFloat)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26341);

	ATslMotorbikeVehicle_SetAirControlR_Params params;
	params.inFloat = inFloat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslMotorbikeVehicle.SetAirControlQ
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          inFloat                        (Parm, ZeroConstructor, IsPlainOldData)

void ATslMotorbikeVehicle::SetAirControlQ(float inFloat)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26339);

	ATslMotorbikeVehicle_SetAirControlQ_Params params;
	params.inFloat = inFloat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslMotorbikeVehicle.SetAirControlL
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          inFloat                        (Parm, ZeroConstructor, IsPlainOldData)

void ATslMotorbikeVehicle::SetAirControlL(float inFloat)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26337);

	ATslMotorbikeVehicle_SetAirControlL_Params params;
	params.inFloat = inFloat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslMotorbikeVehicle.SetAirControlF
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          inFloat                        (Parm, ZeroConstructor, IsPlainOldData)

void ATslMotorbikeVehicle::SetAirControlF(float inFloat)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26335);

	ATslMotorbikeVehicle_SetAirControlF_Params params;
	params.inFloat = inFloat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslMotorbikeVehicle.SetAirControlE
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          inFloat                        (Parm, ZeroConstructor, IsPlainOldData)

void ATslMotorbikeVehicle::SetAirControlE(float inFloat)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26333);

	ATslMotorbikeVehicle_SetAirControlE_Params params;
	params.inFloat = inFloat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslMotorbikeVehicle.SetAirControlB
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          inFloat                        (Parm, ZeroConstructor, IsPlainOldData)

void ATslMotorbikeVehicle::SetAirControlB(float inFloat)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26331);

	ATslMotorbikeVehicle_SetAirControlB_Params params;
	params.inFloat = inFloat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslMotorbikeVehicle.ProcessFlipAndStabilize
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void ATslMotorbikeVehicle::ProcessFlipAndStabilize()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26330);

	ATslMotorbikeVehicle_ProcessFlipAndStabilize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslMotorbikeVehicle.OnVehicleEjected
// (Final, Native, Private)

void ATslMotorbikeVehicle::OnVehicleEjected()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26329);

	ATslMotorbikeVehicle_OnVehicleEjected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslMotorbikeVehicle.OnPostDriverRide
// (Final, Native, Private)

void ATslMotorbikeVehicle::OnPostDriverRide()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26328);

	ATslMotorbikeVehicle_OnPostDriverRide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslMotorbikeVehicle.OnPostDriverLeave
// (Final, Native, Private)

void ATslMotorbikeVehicle::OnPostDriverLeave()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26327);

	ATslMotorbikeVehicle_OnPostDriverLeave_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslMotorbikeVehicle.OnMeshHit
// (Final, Native, Private, HasOutParms, HasDefaults)
// Parameters:
// class UPrimitiveComponent*     HitComp                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 NormalImpulse                  (Parm, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ATslMotorbikeVehicle::OnMeshHit(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26321);

	ATslMotorbikeVehicle_OnMeshHit_Params params;
	params.HitComp = HitComp;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.TslMotorbikeVehicle.IsUsingActiveStabilize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslMotorbikeVehicle::IsUsingActiveStabilize()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26319);

	ATslMotorbikeVehicle_IsUsingActiveStabilize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslMotorbikeVehicle.IsKickstandActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslMotorbikeVehicle::IsKickstandActive()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26317);

	ATslMotorbikeVehicle_IsKickstandActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslMotorbikeVehicle.IsFlippingEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslMotorbikeVehicle::IsFlippingEnabled()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26315);

	ATslMotorbikeVehicle_IsFlippingEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslMotorbikeVehicle.HasContact
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslMotorbikeVehicle::HasContact()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26313);

	ATslMotorbikeVehicle_HasContact_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslMotorbikeVehicle.GetCOMSteerOffset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslMotorbikeVehicle::GetCOMSteerOffset()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26311);

	ATslMotorbikeVehicle_GetCOMSteerOffset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.WidgetShow
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FString                 WidgetName                     (Parm, ZeroConstructor)
// EWidgetShowType                WidgetShowType                 (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 OptionalParam                  (Parm, ZeroConstructor, IsPlainOldData)

void UUiHelperFunctions::STATIC_WidgetShow(class UUserWidget* Widget, const struct FString& WidgetName, EWidgetShowType WidgetShowType, class UObject* OptionalParam)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26742);

	UUiHelperFunctions_WidgetShow_Params params;
	params.Widget = Widget;
	params.WidgetName = WidgetName;
	params.WidgetShowType = WidgetShowType;
	params.OptionalParam = OptionalParam;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.UiHelperFunctions.SortWidgetFormPositionY
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UWidget*>         Widgets                        (Parm, ZeroConstructor)
// bool                           bDescendingOrder               (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UWidget*>         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UWidget*> UUiHelperFunctions::STATIC_SortWidgetFormPositionY(TArray<class UWidget*> Widgets, bool bDescendingOrder)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26736);

	UUiHelperFunctions_SortWidgetFormPositionY_Params params;
	params.Widgets = Widgets;
	params.bDescendingOrder = bDescendingOrder;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.SortWidgetFormPositionX
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UWidget*>         Widgets                        (Parm, ZeroConstructor)
// bool                           bDescendingOrder               (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UWidget*>         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UWidget*> UUiHelperFunctions::STATIC_SortWidgetFormPositionX(TArray<class UWidget*> Widgets, bool bDescendingOrder)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26730);

	UUiHelperFunctions_SortWidgetFormPositionX_Params params;
	params.Widgets = Widgets;
	params.bDescendingOrder = bDescendingOrder;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.SortPlayerMatchResultInfosByRanking
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FTslPlayerMatchResultInfo> PlayerMatchResultInfos         (Parm, ZeroConstructor)
// TArray<struct FTslPlayerMatchResultInfo> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FTslPlayerMatchResultInfo> UUiHelperFunctions::STATIC_SortPlayerMatchResultInfosByRanking(TArray<struct FTslPlayerMatchResultInfo> PlayerMatchResultInfos)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26725);

	UUiHelperFunctions_SortPlayerMatchResultInfosByRanking_Params params;
	params.PlayerMatchResultInfos = PlayerMatchResultInfos;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.SortItem
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<TScriptInterface<class USlotInterface>> InItemList                     (Parm, ZeroConstructor)
// TArray<TScriptInterface<class USlotInterface>> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<TScriptInterface<class USlotInterface>> UUiHelperFunctions::STATIC_SortItem(TArray<TScriptInterface<class USlotInterface>> InItemList)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26720);

	UUiHelperFunctions_SortItem_Params params;
	params.InItemList = InItemList;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.SetTslBlur
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// float                          BlurLevel                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          DepthBlurBlackPoint            (Parm, ZeroConstructor, IsPlainOldData)
// float                          DepthBlurWhitePoint            (Parm, ZeroConstructor, IsPlainOldData)

void UUiHelperFunctions::STATIC_SetTslBlur(class UObject* WorldContextObject, float BlurLevel, float DepthBlurBlackPoint, float DepthBlurWhitePoint)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26715);

	UUiHelperFunctions_SetTslBlur_Params params;
	params.WorldContextObject = WorldContextObject;
	params.BlurLevel = BlurLevel;
	params.DepthBlurBlackPoint = DepthBlurBlackPoint;
	params.DepthBlurWhitePoint = DepthBlurWhitePoint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.UiHelperFunctions.IsWarning
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUiHelperFunctions::STATIC_IsWarning(class UUserWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26712);

	UUiHelperFunctions_IsWarning_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.IsThereAnyPlayingAnimation
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TArray<class UWidgetAnimation*> AnimationArray                 (ConstParm, Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUiHelperFunctions::STATIC_IsThereAnyPlayingAnimation(class UUserWidget* Widget, TArray<class UWidgetAnimation*> AnimationArray)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26707);

	UUiHelperFunctions_IsThereAnyPlayingAnimation_Params params;
	params.Widget = Widget;
	params.AnimationArray = AnimationArray;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.IsReplayingKillcam
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUiHelperFunctions::STATIC_IsReplayingKillcam(class UUserWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26704);

	UUiHelperFunctions_IsReplayingKillcam_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.IsReplaying
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUiHelperFunctions::STATIC_IsReplaying(class UUserWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26701);

	UUiHelperFunctions_IsReplaying_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.IsObserverSpectating
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUiHelperFunctions::STATIC_IsObserverSpectating(class UUserWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26698);

	UUiHelperFunctions_IsObserverSpectating_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.IsNavigateKey
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FKey                    InKey                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUiHelperFunctions::STATIC_IsNavigateKey(const struct FKey& InKey)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26695);

	UUiHelperFunctions_IsNavigateKey_Params params;
	params.InKey = InKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.IsLastSpectatorTeam
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class ATslCharacter*           Character                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUiHelperFunctions::STATIC_IsLastSpectatorTeam(class UUserWidget* Widget, class ATslCharacter* Character)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26691);

	UUiHelperFunctions_IsLastSpectatorTeam_Params params;
	params.Widget = Widget;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.IsLastSpectatedCharacter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class ATslCharacter*           Character                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUiHelperFunctions::STATIC_IsLastSpectatedCharacter(class UUserWidget* Widget, class ATslCharacter* Character)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26687);

	UUiHelperFunctions_IsLastSpectatedCharacter_Params params;
	params.Widget = Widget;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.IsKickEnableCharacter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ATslCharacter*           Character                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUiHelperFunctions::STATIC_IsKickEnableCharacter(class ATslCharacter* Character)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26684);

	UUiHelperFunctions_IsKickEnableCharacter_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.IsInNextPlayzone
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUiHelperFunctions::STATIC_IsInNextPlayzone(class UUserWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26681);

	UUiHelperFunctions_IsInNextPlayzone_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.IsHitted
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            State                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUiHelperFunctions::STATIC_IsHitted(int State)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26678);

	UUiHelperFunctions_IsHitted_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.IsGroggyByTeam
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ATeam*                   Team                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUiHelperFunctions::STATIC_IsGroggyByTeam(class ATeam* Team)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26675);

	UUiHelperFunctions_IsGroggyByTeam_Params params;
	params.Team = Team;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.IsGamepadY
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FKey                    InKey                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUiHelperFunctions::STATIC_IsGamepadY(const struct FKey& InKey)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26672);

	UUiHelperFunctions_IsGamepadY_Params params;
	params.InKey = InKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.IsGamepadX
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FKey                    InKey                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUiHelperFunctions::STATIC_IsGamepadX(const struct FKey& InKey)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26669);

	UUiHelperFunctions_IsGamepadX_Params params;
	params.InKey = InKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.IsGamepadUp
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FKey                    InKey                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUiHelperFunctions::STATIC_IsGamepadUp(const struct FKey& InKey)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26666);

	UUiHelperFunctions_IsGamepadUp_Params params;
	params.InKey = InKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.IsGamepadRight
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FKey                    InKey                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUiHelperFunctions::STATIC_IsGamepadRight(const struct FKey& InKey)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26663);

	UUiHelperFunctions_IsGamepadRight_Params params;
	params.InKey = InKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.IsGamepadLeft
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FKey                    InKey                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUiHelperFunctions::STATIC_IsGamepadLeft(const struct FKey& InKey)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26660);

	UUiHelperFunctions_IsGamepadLeft_Params params;
	params.InKey = InKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.IsGamepadDown
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FKey                    InKey                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUiHelperFunctions::STATIC_IsGamepadDown(const struct FKey& InKey)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26657);

	UUiHelperFunctions_IsGamepadDown_Params params;
	params.InKey = InKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.IsGamepadB
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FKey                    InKey                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUiHelperFunctions::STATIC_IsGamepadB(const struct FKey& InKey)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26654);

	UUiHelperFunctions_IsGamepadB_Params params;
	params.InKey = InKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.IsGamepadA
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FKey                    InKey                          (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUiHelperFunctions::STATIC_IsGamepadA(const struct FKey& InKey)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26651);

	UUiHelperFunctions_IsGamepadA_Params params;
	params.InKey = InKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.IsBluezoneGpsReset
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUiHelperFunctions::STATIC_IsBluezoneGpsReset(class UUserWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26648);

	UUiHelperFunctions_IsBluezoneGpsReset_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.IsAttacked
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            State                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUiHelperFunctions::STATIC_IsAttacked(int State)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26645);

	UUiHelperFunctions_IsAttacked_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.HaveDurability
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TScriptInterface<class USlotInterface> ItemSlot                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUiHelperFunctions::STATIC_HaveDurability(const TScriptInterface<class USlotInterface>& ItemSlot)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26642);

	UUiHelperFunctions_HaveDurability_Params params;
	params.ItemSlot = ItemSlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetWeaponProcessor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AWeaponProcessor*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AWeaponProcessor* UUiHelperFunctions::STATIC_GetWeaponProcessor(class UUserWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26639);

	UUiHelperFunctions_GetWeaponProcessor_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetViewTargetTslCharacter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class ATslCharacter*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslCharacter* UUiHelperFunctions::STATIC_GetViewTargetTslCharacter(class UUserWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26636);

	UUiHelperFunctions_GetViewTargetTslCharacter_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetVehicleUI
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APawn*                   VehiclePawn                    (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UUiHelperFunctions::STATIC_GetVehicleUI(class APawn* VehiclePawn)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26633);

	UUiHelperFunctions_GetVehicleUI_Params params;
	params.VehiclePawn = VehiclePawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetUpWidgetByTslFocusableWidget
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWidget*                 Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UWidget*                 ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWidget* UUiHelperFunctions::STATIC_GetUpWidgetByTslFocusableWidget(class UWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26630);

	UUiHelperFunctions_GetUpWidgetByTslFocusableWidget_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetTslSpectatorPawn
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class ATslSpectatorPawn*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslSpectatorPawn* UUiHelperFunctions::STATIC_GetTslSpectatorPawn(class UUserWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26627);

	UUiHelperFunctions_GetTslSpectatorPawn_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetTslPlayerState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ATslCharacter*           Character                      (Parm, ZeroConstructor, IsPlainOldData)
// class ATslPlayerState*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslPlayerState* UUiHelperFunctions::STATIC_GetTslPlayerState(class ATslCharacter* Character)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26624);

	UUiHelperFunctions_GetTslPlayerState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetTslHUD
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class ATslHUD*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslHUD* UUiHelperFunctions::STATIC_GetTslHUD(class UUserWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26621);

	UUiHelperFunctions_GetTslHUD_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetTslCharacterByNetId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FString                 NetId                          (Parm, ZeroConstructor)
// class ATslCharacter*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslCharacter* UUiHelperFunctions::STATIC_GetTslCharacterByNetId(class UUserWidget* Widget, const struct FString& NetId)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26617);

	UUiHelperFunctions_GetTslCharacterByNetId_Params params;
	params.Widget = Widget;
	params.NetId = NetId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetTeamId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ATslCharacter*           Character                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UUiHelperFunctions::STATIC_GetTeamId(class ATslCharacter* Character)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26614);

	UUiHelperFunctions_GetTeamId_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetTeamColors
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            TeamCount                      (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FLinearColor>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FLinearColor> UUiHelperFunctions::STATIC_GetTeamColors(int TeamCount)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26610);

	UUiHelperFunctions_GetTeamColors_Params params;
	params.TeamCount = TeamCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetTeamColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class ATslCharacter*           TslCharacter                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FLinearColor UUiHelperFunctions::STATIC_GetTeamColor(class ATslCharacter* TslCharacter)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26607);

	UUiHelperFunctions_GetTeamColor_Params params;
	params.TslCharacter = TslCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetSubjectToReportType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// ESubjectToReport               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ESubjectToReport UUiHelperFunctions::STATIC_GetSubjectToReportType(class UUserWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26603);

	UUiHelperFunctions_GetSubjectToReportType_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetSubjectToReport
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FSubjectToReport> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FSubjectToReport> UUiHelperFunctions::STATIC_GetSubjectToReport()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26600);

	UUiHelperFunctions_GetSubjectToReport_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetSortedReplicateCharactersBySpectatorPawnDistance
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TArray<class ATslCharacter*>   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class ATslCharacter*> UUiHelperFunctions::STATIC_GetSortedReplicateCharactersBySpectatorPawnDistance(class UUserWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26596);

	UUiHelperFunctions_GetSortedReplicateCharactersBySpectatorPawnDistance_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetSortedReplicateCharactersByLastHitTime
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TArray<class ATslCharacter*>   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class ATslCharacter*> UUiHelperFunctions::STATIC_GetSortedReplicateCharactersByLastHitTime(class UUserWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26592);

	UUiHelperFunctions_GetSortedReplicateCharactersByLastHitTime_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetRightWidgetByTslFocusableWidget
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWidget*                 Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UWidget*                 ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWidget* UUiHelperFunctions::STATIC_GetRightWidgetByTslFocusableWidget(class UWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26589);

	UUiHelperFunctions_GetRightWidgetByTslFocusableWidget_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetReportCauses
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TArray<struct FReportCauseData> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FReportCauseData> UUiHelperFunctions::STATIC_GetReportCauses(class UUserWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26585);

	UUiHelperFunctions_GetReportCauses_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetPlayerNetID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ATslCharacter*           Character                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UUiHelperFunctions::STATIC_GetPlayerNetID(class ATslCharacter* Character)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26582);

	UUiHelperFunctions_GetPlayerNetID_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetPlayerName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ATslCharacter*           Character                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UUiHelperFunctions::STATIC_GetPlayerName(class ATslCharacter* Character)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26579);

	UUiHelperFunctions_GetPlayerName_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetPlayerIcon
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            MarkerNum                      (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture* UUiHelperFunctions::STATIC_GetPlayerIcon(int MarkerNum)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26576);

	UUiHelperFunctions_GetPlayerIcon_Params params;
	params.MarkerNum = MarkerNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetOwningTslPlayerController
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class ATslPlayerController*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslPlayerController* UUiHelperFunctions::STATIC_GetOwningTslPlayerController(class UUserWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26573);

	UUiHelperFunctions_GetOwningTslPlayerController_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetOwningTslCharacter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class ATslCharacter*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslCharacter* UUiHelperFunctions::STATIC_GetOwningTslCharacter(class UUserWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26570);

	UUiHelperFunctions_GetOwningTslCharacter_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetNextPlayzoneRadius_BluezoneGPS
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UUiHelperFunctions::STATIC_GetNextPlayzoneRadius_BluezoneGPS(class UUserWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26567);

	UUiHelperFunctions_GetNextPlayzoneRadius_BluezoneGPS_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetNextPlayzonePosition_BluezoneGPS
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UUiHelperFunctions::STATIC_GetNextPlayzonePosition_BluezoneGPS(class UUserWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26564);

	UUiHelperFunctions_GetNextPlayzonePosition_BluezoneGPS_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetNetIdByControllerId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// int                            ControllerId                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UUiHelperFunctions::STATIC_GetNetIdByControllerId(class UObject* WorldContextObject, int ControllerId)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26560);

	UUiHelperFunctions_GetNetIdByControllerId_Params params;
	params.WorldContextObject = WorldContextObject;
	params.ControllerId = ControllerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetMarkerIcon
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            MarkerNum                      (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture* UUiHelperFunctions::STATIC_GetMarkerIcon(int MarkerNum)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26557);

	UUiHelperFunctions_GetMarkerIcon_Params params;
	params.MarkerNum = MarkerNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetMarkerColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            MarkerNum                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FLinearColor UUiHelperFunctions::STATIC_GetMarkerColor(int MarkerNum)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26554);

	UUiHelperFunctions_GetMarkerColor_Params params;
	params.MarkerNum = MarkerNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetMapDeathIcon
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            MarkerNum                      (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture* UUiHelperFunctions::STATIC_GetMapDeathIcon(int MarkerNum)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26551);

	UUiHelperFunctions_GetMapDeathIcon_Params params;
	params.MarkerNum = MarkerNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetLeftWidgetByTslFocusableWidget
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWidget*                 Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UWidget*                 ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWidget* UUiHelperFunctions::STATIC_GetLeftWidgetByTslFocusableWidget(class UWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26548);

	UUiHelperFunctions_GetLeftWidgetByTslFocusableWidget_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetLastSpectatedCharacter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class ATslCharacter*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslCharacter* UUiHelperFunctions::STATIC_GetLastSpectatedCharacter(class UUserWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26545);

	UUiHelperFunctions_GetLastSpectatedCharacter_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetInventoryFacade
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AInventoryFacade*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AInventoryFacade* UUiHelperFunctions::STATIC_GetInventoryFacade(class UUserWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26542);

	UUiHelperFunctions_GetInventoryFacade_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetInventory
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AInventory*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AInventory* UUiHelperFunctions::STATIC_GetInventory(class UUserWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26539);

	UUiHelperFunctions_GetInventory_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetIndicatorIcon
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            MarkerNum                      (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture* UUiHelperFunctions::STATIC_GetIndicatorIcon(int MarkerNum)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26536);

	UUiHelperFunctions_GetIndicatorIcon_Params params;
	params.MarkerNum = MarkerNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetHealthRatioByTeam
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ATeam*                   Team                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UUiHelperFunctions::STATIC_GetHealthRatioByTeam(class ATeam* Team)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26533);

	UUiHelperFunctions_GetHealthRatioByTeam_Params params;
	params.Team = Team;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetHealLimit
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UUiHelperFunctions::STATIC_GetHealLimit(class UUserWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26530);

	UUiHelperFunctions_GetHealLimit_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetGroggyHealthRatioByTeam
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ATeam*                   Team                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UUiHelperFunctions::STATIC_GetGroggyHealthRatioByTeam(class ATeam* Team)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26527);

	UUiHelperFunctions_GetGroggyHealthRatioByTeam_Params params;
	params.Team = Team;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetEquipment
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AEquipment*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AEquipment* UUiHelperFunctions::STATIC_GetEquipment(class UUserWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26524);

	UUiHelperFunctions_GetEquipment_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetDurabilityRatio
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TScriptInterface<class USlotInterface> ItemSlot                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UUiHelperFunctions::STATIC_GetDurabilityRatio(const TScriptInterface<class USlotInterface>& ItemSlot)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26521);

	UUiHelperFunctions_GetDurabilityRatio_Params params;
	params.ItemSlot = ItemSlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetDownWidgetByTslFocusableWidget
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWidget*                 Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UWidget*                 ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWidget* UUiHelperFunctions::STATIC_GetDownWidgetByTslFocusableWidget(class UWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26518);

	UUiHelperFunctions_GetDownWidgetByTslFocusableWidget_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetDistanceFromSpectatorPawn
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class ATslCharacter*           Character                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UUiHelperFunctions::STATIC_GetDistanceFromSpectatorPawn(class UUserWidget* Widget, class ATslCharacter* Character)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26514);

	UUiHelperFunctions_GetDistanceFromSpectatorPawn_Params params;
	params.Widget = Widget;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetDetailCauseTypeDescriptionList
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EReportCause                   ReportCause                    (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FReportDetailCauseTypeDescription> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FReportDetailCauseTypeDescription> UUiHelperFunctions::STATIC_GetDetailCauseTypeDescriptionList(EReportCause ReportCause)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26509);

	UUiHelperFunctions_GetDetailCauseTypeDescriptionList_Params params;
	params.ReportCause = ReportCause;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetCurrentPlayzoneRadius_BluezoneGPS
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UUiHelperFunctions::STATIC_GetCurrentPlayzoneRadius_BluezoneGPS(class UUserWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26506);

	UUiHelperFunctions_GetCurrentPlayzoneRadius_BluezoneGPS_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetCurrentPlayzonePosition_BluezoneGPS
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UUiHelperFunctions::STATIC_GetCurrentPlayzonePosition_BluezoneGPS(class UUserWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26503);

	UUiHelperFunctions_GetCurrentPlayzonePosition_BluezoneGPS_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetCompassIcon
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            MarkerNum                      (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture* UUiHelperFunctions::STATIC_GetCompassIcon(int MarkerNum)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26500);

	UUiHelperFunctions_GetCompassIcon_Params params;
	params.MarkerNum = MarkerNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetChildrenOfPanel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPanelWidget*            PanelWidget                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TArray<class UWidget*>         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UWidget*> UUiHelperFunctions::STATIC_GetChildrenOfPanel(class UPanelWidget* PanelWidget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26496);

	UUiHelperFunctions_GetChildrenOfPanel_Params params;
	params.PanelWidget = PanelWidget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetCharacterStateByTeam
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ATeam*                   Team                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UUiHelperFunctions::STATIC_GetCharacterStateByTeam(class ATeam* Team)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26493);

	UUiHelperFunctions_GetCharacterStateByTeam_Params params;
	params.Team = Team;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetBluezoneWarningTime
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UUiHelperFunctions::STATIC_GetBluezoneWarningTime(class UUserWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26490);

	UUiHelperFunctions_GetBluezoneWarningTime_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetBluezoneReleaseTime
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UUiHelperFunctions::STATIC_GetBluezoneReleaseTime(class UUserWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26487);

	UUiHelperFunctions_GetBluezoneReleaseTime_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.GetBluezoneGpsState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UUiHelperFunctions::STATIC_GetBluezoneGpsState(class UUserWidget* Widget)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26484);

	UUiHelperFunctions_GetBluezoneGpsState_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.FindNextWidgetIndexInPanel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPanelWidget*            PanelWidget                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UWidget*                 StartWidget                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bReverseDir                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UUiHelperFunctions::STATIC_FindNextWidgetIndexInPanel(class UPanelWidget* PanelWidget, class UWidget* StartWidget, bool bReverseDir)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26479);

	UUiHelperFunctions_FindNextWidgetIndexInPanel_Params params;
	params.PanelWidget = PanelWidget;
	params.StartWidget = StartWidget;
	params.bReverseDir = bReverseDir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.DrawDottedLine
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FPaintContext           Context                        (Parm, OutParm, ReferenceParm)
// struct FBox2D                  Rect                           (ConstParm, Parm, OutParm, ReferenceParm)
// struct FVector2D               PositionA                      (Parm, IsPlainOldData)
// struct FVector2D               PositionB                      (Parm, IsPlainOldData)
// float                          DottedLength                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          DottedInterval                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            Tint                           (Parm, IsPlainOldData)
// bool                           bAntiAlias                     (Parm, ZeroConstructor, IsPlainOldData)

void UUiHelperFunctions::STATIC_DrawDottedLine(const struct FBox2D& Rect, const struct FVector2D& PositionA, const struct FVector2D& PositionB, float DottedLength, float DottedInterval, const struct FLinearColor& Tint, bool bAntiAlias, struct FPaintContext* Context)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26470);

	UUiHelperFunctions_DrawDottedLine_Params params;
	params.Rect = Rect;
	params.PositionA = PositionA;
	params.PositionB = PositionB;
	params.DottedLength = DottedLength;
	params.DottedInterval = DottedInterval;
	params.Tint = Tint;
	params.bAntiAlias = bAntiAlias;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Context != nullptr)
		*Context = params.Context;
}


// Function TslGame.UiHelperFunctions.CastWeaponItem
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TScriptInterface<class USlotInterface> ItemSlot                       (Parm, ZeroConstructor, IsPlainOldData)
// class UWeaponItem*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UWeaponItem* UUiHelperFunctions::STATIC_CastWeaponItem(const TScriptInterface<class USlotInterface>& ItemSlot)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26467);

	UUiHelperFunctions_CastWeaponItem_Params params;
	params.ItemSlot = ItemSlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.CastEquipableItem
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TScriptInterface<class USlotInterface> ItemSlot                       (Parm, ZeroConstructor, IsPlainOldData)
// class UEquipableItem*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UEquipableItem* UUiHelperFunctions::STATIC_CastEquipableItem(const TScriptInterface<class USlotInterface>& ItemSlot)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26464);

	UUiHelperFunctions_CastEquipableItem_Params params;
	params.ItemSlot = ItemSlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.CastAttachableItem
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TScriptInterface<class USlotInterface> ItemSlot                       (Parm, ZeroConstructor, IsPlainOldData)
// class UAttachableItem*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAttachableItem* UUiHelperFunctions::STATIC_CastAttachableItem(const TScriptInterface<class USlotInterface>& ItemSlot)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26461);

	UUiHelperFunctions_CastAttachableItem_Params params;
	params.ItemSlot = ItemSlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.UiHelperFunctions.CalculateWeightGaugeUpParamsByItem
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// float                          TotalMaxSpace                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          CurrMaxSpace                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          CurrSpace                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          FocusedItemWeight              (Parm, ZeroConstructor, IsPlainOldData)
// float                          OutCurrMaxSpaceStart           (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          OutCurrSpaceStart              (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          OutFeedbackStart               (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           OutIsPositive                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UUiHelperFunctions::STATIC_CalculateWeightGaugeUpParamsByItem(float TotalMaxSpace, float CurrMaxSpace, float CurrSpace, float FocusedItemWeight, float* OutCurrMaxSpaceStart, float* OutCurrSpaceStart, float* OutFeedbackStart, bool* OutIsPositive)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26452);

	UUiHelperFunctions_CalculateWeightGaugeUpParamsByItem_Params params;
	params.TotalMaxSpace = TotalMaxSpace;
	params.CurrMaxSpace = CurrMaxSpace;
	params.CurrSpace = CurrSpace;
	params.FocusedItemWeight = FocusedItemWeight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutCurrMaxSpaceStart != nullptr)
		*OutCurrMaxSpaceStart = params.OutCurrMaxSpaceStart;
	if (OutCurrSpaceStart != nullptr)
		*OutCurrSpaceStart = params.OutCurrSpaceStart;
	if (OutFeedbackStart != nullptr)
		*OutFeedbackStart = params.OutFeedbackStart;
	if (OutIsPositive != nullptr)
		*OutIsPositive = params.OutIsPositive;
}


// Function TslGame.UiHelperFunctions.BuildFocusableWidgetList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPanelWidget*            Panel                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TArray<class UWidget*>         FocusableWidgetList            (Parm, ZeroConstructor)
// TArray<class UWidget*>         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UWidget*> UUiHelperFunctions::STATIC_BuildFocusableWidgetList(class UPanelWidget* Panel, TArray<class UWidget*> FocusableWidgetList)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26446);

	UUiHelperFunctions_BuildFocusableWidgetList_Params params;
	params.Panel = Panel;
	params.FocusableWidgetList = FocusableWidgetList;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslMotoSeatActor.IsEntryAllowed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslMotoSeatActor::IsEntryAllowed()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26753);

	ATslMotoSeatActor_IsEntryAllowed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.TslMotoSeatActor.HandleFlipAndKickstand
// (Final, Native, Public, BlueprintCallable)

void ATslMotoSeatActor::HandleFlipAndKickstand()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26752);

	ATslMotoSeatActor_HandleFlipAndKickstand_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VivoxBaseComponent.UpdatePosition
// (Native, Protected)

void UVivoxBaseComponent::UpdatePosition()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26800);

	UVivoxBaseComponent_UpdatePosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VivoxBaseComponent.SetVoiceChannelType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EVivoxChannelType              ChannelType                    (Parm, ZeroConstructor, IsPlainOldData)

void UVivoxBaseComponent::SetVoiceChannelType(EVivoxChannelType ChannelType)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26797);

	UVivoxBaseComponent_SetVoiceChannelType_Params params;
	params.ChannelType = ChannelType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VivoxBaseComponent.SetParticipantMute
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 TargetUniqueId                 (Parm, ZeroConstructor)
// bool                           bIsMuted                       (Parm, ZeroConstructor, IsPlainOldData)

void UVivoxBaseComponent::SetParticipantMute(const struct FString& TargetUniqueId, bool bIsMuted)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26794);

	UVivoxBaseComponent_SetParticipantMute_Params params;
	params.TargetUniqueId = TargetUniqueId;
	params.bIsMuted = bIsMuted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VivoxBaseComponent.SetLocalVoiceOutputVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            UserSettingVolume              (Parm, ZeroConstructor, IsPlainOldData)

void UVivoxBaseComponent::SetLocalVoiceOutputVolume(int UserSettingVolume)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26792);

	UVivoxBaseComponent_SetLocalVoiceOutputVolume_Params params;
	params.UserSettingVolume = UserSettingVolume;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VivoxBaseComponent.SetLocalVoiceOutputMuted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bIsMuted                       (Parm, ZeroConstructor, IsPlainOldData)

void UVivoxBaseComponent::SetLocalVoiceOutputMuted(bool bIsMuted)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26790);

	UVivoxBaseComponent_SetLocalVoiceOutputMuted_Params params;
	params.bIsMuted = bIsMuted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VivoxBaseComponent.SetLocalVoiceInputVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            UserSettingVolume              (Parm, ZeroConstructor, IsPlainOldData)

void UVivoxBaseComponent::SetLocalVoiceInputVolume(int UserSettingVolume)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26788);

	UVivoxBaseComponent_SetLocalVoiceInputVolume_Params params;
	params.UserSettingVolume = UserSettingVolume;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VivoxBaseComponent.SetLocalVoiceInputMuted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bIsMuted                       (Parm, ZeroConstructor, IsPlainOldData)

void UVivoxBaseComponent::SetLocalVoiceInputMuted(bool bIsMuted)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26786);

	UVivoxBaseComponent_SetLocalVoiceInputMuted_Params params;
	params.bIsMuted = bIsMuted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VivoxBaseComponent.ServerLogin
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void UVivoxBaseComponent::ServerLogin()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26785);

	UVivoxBaseComponent_ServerLogin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VivoxBaseComponent.ServerJoinTeamChannel
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void UVivoxBaseComponent::ServerJoinTeamChannel()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26784);

	UVivoxBaseComponent_ServerJoinTeamChannel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VivoxBaseComponent.ServerJoinGlobalChannel
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void UVivoxBaseComponent::ServerJoinGlobalChannel()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26783);

	UVivoxBaseComponent_ServerJoinGlobalChannel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VivoxBaseComponent.ResetTeamChannelJoinState
// (Final, Native, Private)

void UVivoxBaseComponent::ResetTeamChannelJoinState()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26782);

	UVivoxBaseComponent_ResetTeamChannelJoinState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VivoxBaseComponent.ResetLoginState
// (Final, Native, Private)

void UVivoxBaseComponent::ResetLoginState()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26781);

	UVivoxBaseComponent_ResetLoginState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VivoxBaseComponent.ResetGlobalChannelJoinState
// (Final, Native, Private)

void UVivoxBaseComponent::ResetGlobalChannelJoinState()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26780);

	UVivoxBaseComponent_ResetGlobalChannelJoinState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VivoxBaseComponent.ResetConnectionState
// (Final, Native, Private)

void UVivoxBaseComponent::ResetConnectionState()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26779);

	UVivoxBaseComponent_ResetConnectionState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VivoxBaseComponent.RefreshDevices
// (Final, Native, Private)

void UVivoxBaseComponent::RefreshDevices()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26778);

	UVivoxBaseComponent_RefreshDevices_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VivoxBaseComponent.GetVoiceChannelType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EVivoxChannelType              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EVivoxChannelType UVivoxBaseComponent::GetVoiceChannelType()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26775);

	UVivoxBaseComponent_GetVoiceChannelType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VivoxBaseComponent.GetLocalVoiceOutputVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UVivoxBaseComponent::GetLocalVoiceOutputVolume()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26773);

	UVivoxBaseComponent_GetLocalVoiceOutputVolume_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VivoxBaseComponent.GetLocalVoiceOutputMuted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UVivoxBaseComponent::GetLocalVoiceOutputMuted()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26771);

	UVivoxBaseComponent_GetLocalVoiceOutputMuted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VivoxBaseComponent.GetLocalVoiceInputVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UVivoxBaseComponent::GetLocalVoiceInputVolume()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26769);

	UVivoxBaseComponent_GetLocalVoiceInputVolume_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VivoxBaseComponent.GetLocalVoiceInputMuted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UVivoxBaseComponent::GetLocalVoiceInputMuted()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26767);

	UVivoxBaseComponent_GetLocalVoiceInputMuted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VivoxBaseComponent.ClientLogin
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// struct FString                 AccessToken                    (Parm, ZeroConstructor)

void UVivoxBaseComponent::ClientLogin(const struct FString& AccessToken)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26765);

	UVivoxBaseComponent_ClientLogin_Params params;
	params.AccessToken = AccessToken;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VivoxBaseComponent.ClientLeaveTeamChannel
// (Net, NetReliable, Native, Event, Protected, NetClient)

void UVivoxBaseComponent::ClientLeaveTeamChannel()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26764);

	UVivoxBaseComponent_ClientLeaveTeamChannel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VivoxBaseComponent.ClientLeaveGlobalChannel
// (Net, NetReliable, Native, Event, Protected, NetClient)

void UVivoxBaseComponent::ClientLeaveGlobalChannel()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26763);

	UVivoxBaseComponent_ClientLeaveGlobalChannel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VivoxBaseComponent.ClientJoinTeamChannel
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// struct FString                 AccessToken                    (Parm, ZeroConstructor)

void UVivoxBaseComponent::ClientJoinTeamChannel(const struct FString& AccessToken)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26761);

	UVivoxBaseComponent_ClientJoinTeamChannel_Params params;
	params.AccessToken = AccessToken;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VivoxBaseComponent.ClientJoinGlobalChannel
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// struct FString                 AccessToken                    (Parm, ZeroConstructor)

void UVivoxBaseComponent::ClientJoinGlobalChannel(const struct FString& AccessToken)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26759);

	UVivoxBaseComponent_ClientJoinGlobalChannel_Params params;
	params.AccessToken = AccessToken;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VivoxBaseComponent.CalculateOutputVolumeFromModifiers
// (Final, Native, Protected, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UVivoxBaseComponent::CalculateOutputVolumeFromModifiers()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26757);

	UVivoxBaseComponent_CalculateOutputVolumeFromModifiers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VivoxBaseComponent.CalculateInputVolumeFromModifiers
// (Final, Native, Protected, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UVivoxBaseComponent::CalculateInputVolumeFromModifiers()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26755);

	UVivoxBaseComponent_CalculateInputVolumeFromModifiers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.VivoxComponent.ServerTestAccessToken
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void UVivoxComponent::ServerTestAccessToken()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26819);

	UVivoxComponent_ServerTestAccessToken_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VivoxComponent.ServerSetObserverTeamNum
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// int                            NewTeamNum                     (Parm, ZeroConstructor, IsPlainOldData)

void UVivoxComponent::ServerSetObserverTeamNum(int NewTeamNum)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26817);

	UVivoxComponent_ServerSetObserverTeamNum_Params params;
	params.NewTeamNum = NewTeamNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VivoxComponent.ApplyTimedVolumeModifier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EVivoxChannelType              ChannelType                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          NewModifier                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          RestoreDuration                (Parm, ZeroConstructor, IsPlainOldData)

void UVivoxComponent::ApplyTimedVolumeModifier(EVivoxChannelType ChannelType, float NewModifier, float Duration, float RestoreDuration)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26811);

	UVivoxComponent_ApplyTimedVolumeModifier_Params params;
	params.ChannelType = ChannelType;
	params.NewModifier = NewModifier;
	params.Duration = Duration;
	params.RestoreDuration = RestoreDuration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VivoxManager.OnRevokeKeySuccess
// (Final, Native, Private)
// Parameters:
// class UVivoxResponse*          Response                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UVivoxManager::OnRevokeKeySuccess(class UVivoxResponse* Response)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26835);

	UVivoxManager_OnRevokeKeySuccess_Params params;
	params.Response = Response;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VivoxManager.OnRevokeKeyFail
// (Final, Native, Private)
// Parameters:
// class UVivoxResponse*          Response                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UVivoxManager::OnRevokeKeyFail(class UVivoxResponse* Response)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26833);

	UVivoxManager_OnRevokeKeyFail_Params params;
	params.Response = Response;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VivoxManager.OnChannelSuccess
// (Final, Native, Private)
// Parameters:
// class UVivoxResponse*          Response                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UVivoxManager::OnChannelSuccess(class UVivoxResponse* Response)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26831);

	UVivoxManager_OnChannelSuccess_Params params;
	params.Response = Response;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VivoxManager.OnChannelFail
// (Final, Native, Private)
// Parameters:
// class UVivoxResponse*          Response                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UVivoxManager::OnChannelFail(class UVivoxResponse* Response)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26829);

	UVivoxManager_OnChannelFail_Params params;
	params.Response = Response;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VivoxManager.OnAddKeySuccess
// (Final, Native, Private)
// Parameters:
// class UVivoxResponse*          Response                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UVivoxManager::OnAddKeySuccess(class UVivoxResponse* Response)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26827);

	UVivoxManager_OnAddKeySuccess_Params params;
	params.Response = Response;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.VivoxManager.OnAddKeyFail
// (Final, Native, Private)
// Parameters:
// class UVivoxResponse*          Response                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UVivoxManager::OnAddKeyFail(class UVivoxResponse* Response)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26825);

	UVivoxManager_OnAddKeyFail_Params params;
	params.Response = Response;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.WeaponAnimInfoComponent.SetAccessorySlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTslAccessoryComponent*  NewAccessoryComponent          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// EAccessorySlot                 Slot                           (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponAnimInfoComponent::SetAccessorySlot(class UTslAccessoryComponent* NewAccessoryComponent, EAccessorySlot Slot)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26873);

	UWeaponAnimInfoComponent_SetAccessorySlot_Params params;
	params.NewAccessoryComponent = NewAccessoryComponent;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function TslGame.WeaponAnimInfoComponent.HasWeaponLeftHandIKSocket
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslWeapon*              Weapon                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWeaponAnimInfoComponent::HasWeaponLeftHandIKSocket(class ATslWeapon* Weapon)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26870);

	UWeaponAnimInfoComponent_HasWeaponLeftHandIKSocket_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.WeaponAnimInfoComponent.GetWeaponLeftHandIKTransform
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslWeapon*              Weapon                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FTransform UWeaponAnimInfoComponent::GetWeaponLeftHandIKTransform(class ATslWeapon* Weapon)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26867);

	UWeaponAnimInfoComponent_GetWeaponLeftHandIKTransform_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.WeaponAnimInfoComponent.GetWeaponHandIK_Right
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslWeapon*              Weapon                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FTransform UWeaponAnimInfoComponent::GetWeaponHandIK_Right(class ATslWeapon* Weapon)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26864);

	UWeaponAnimInfoComponent_GetWeaponHandIK_Right_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.WeaponAnimInfoComponent.GetWeaponHandIK_Left
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslWeapon*              Weapon                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FTransform UWeaponAnimInfoComponent::GetWeaponHandIK_Left(class ATslWeapon* Weapon)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26861);

	UWeaponAnimInfoComponent_GetWeaponHandIK_Left_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.WeaponAnimInfoComponent.GetCurrentWeapon
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslWeapon*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslWeapon* UWeaponAnimInfoComponent::GetCurrentWeapon()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26859);

	UWeaponAnimInfoComponent_GetCurrentWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.WeaponAnimInfoComponent.GetAccessorySlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAccessorySlot                 Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// class UTslAccessoryComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UTslAccessoryComponent* UWeaponAnimInfoComponent::GetAccessorySlot(EAccessorySlot Slot)
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26855);

	UWeaponAnimInfoComponent_GetAccessorySlot_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function TslGame.WeaponClone.Update
// (Final, Native, Public)

void UWeaponClone::Update()
{
	static UFunction* fn = nullptr; 
	 if (!fn) fn = UObject::GetObjectCasted<UFunction>(26895);

	UWeaponClone_Update_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
